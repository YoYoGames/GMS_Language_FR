<?xml version="1.0" encoding="UTF-8"?>        

<glossgroup id="Default">          
<title>Glossary Definitions</title>        
<glossentry id="Default_absolute">
<glossterm>absolu</glossterm>
<glossdef>Une valeur absolue est celle où le signe de la valeur est ignoré, convertissant essentiellement toutes les valeurs en valeurs positives ou nulles. Ainsi, par exemple, une valeur absolue pour -10 serait 10.</glossdef></glossentry>
<glossentry id="Default_algorithm">
<glossterm>algorithme</glossterm>
<glossdef>Un algorithme est essentiellement un ensemble d&#39;instructions ou de règles conçues pour résoudre un problème défini. Le problème peut être simple comme l&#39;ajout de deux nombres ou d&#39;un nombre complexe, comme la conversion d&#39;un fichier vidéo d&#39;un format à un autre ou la compression audio dans une taille de fichier plus petite.</glossdef></glossentry>
<glossentry id="Default_anti-aliasing">
<glossterm>anti crénelage</glossterm>
<glossdef>Il s&#39;agit d&#39;une technique utilisée pour lisser des lignes ou des textures autrement irrégulières en mélangeant la couleur d&#39;un bord avec la couleur des pixels qui l&#39;entourent. Le résultat devrait être une apparence plus agréable et plus réaliste, en fonction de l&#39;intensité de l&#39;effet.</glossdef></glossentry>
<glossentry id="Default_API">
<glossterm>API</glossterm>
<glossdef>L&#39;acronyme «API» signifie Application Programming Interface, et cela fait référence à des ensembles de règles, de routines et de protocoles utilisés pour créer des applications logicielles. Les API aident à la communication avec des programmes ou services tiers, qui peuvent être utilisés pour créer différents logiciels. Des entreprises telles que Facebook et Twitter utilisent activement les API pour aider les développeurs à accéder plus facilement à leurs services, et dans GameMaker Studio 2 vous verrez le scronym API utilisé lorsque vous parlez d&#39;extensions - par exemple, l&#39;API des services Google Play ou Amazon Game On API.</glossdef></glossentry>
<glossentry id="Default_application_surface">
<glossterm>surface d&#39;application</glossterm>
<glossdef>La surface d&#39;application est une surface intégrée spéciale sur laquelle GameMaker Studio 2 dessine tout dans les événements de dessin d&#39;un jeu (une surface est essentiellement une zone de mémoire réservée aux graphiques). Cette surface est ensuite dessinée vers le tampon d&#39;affichage à la fin de chaque image de jeu, affichant son contenu au joueur.</glossdef></glossentry>
<glossentry id="Default_architectures">
<glossterm>architectures</glossterm>
<glossdef>L&#39;architecture d&#39;une puce de processeur (CPU) est une description de ses composants de base et de ses opérations de base. Chaque famille de processeurs a sa propre architecture, comme ARM ou x64.</glossdef></glossentry>
<glossentry id="Default_ARGB">
<glossterm>ARGB</glossterm>
<glossdef>Il s&#39;agit d&#39;un anacronyme pour Alpha, Rouge, Vert, Bleu et est utilisé pour faire référence aux composants de couleur spécifiés sous forme de valeur hexadécimale, par exemple: # FF53E270, où chaque ensemble de deux chiffres représente un seul composant. La décomposition de l&#39;exemple ARVB ci-dessus nous donne les valeurs de composants suivantes: Alpha (FF), Rouge (53), Vert (E2) et Bleu (70).</glossdef></glossentry>
<glossentry id="Default_argument">
<glossterm>argument</glossterm>
<glossdef>Un argument (également appelé paramètre) est une valeur transmise à une fonction. Par exemple, la GameMaker Language &#39;sqr (num)&#39; est une fonction qui vous donnera le carré d&#39;un nombre que vous fournissez comme argument, par exemple: &#39;a = sqr (4);&#39; Ici, l&#39;argument est 4 et la fonction renvoie 16, qui est stocké dans la variable «a».</glossdef></glossentry>
<glossentry id="Default_asset_key">
<glossterm>clé d&#39;actif</glossterm>
<glossdef>Une position sur la chronologie dans la dope sheet où un élément a été placé. Une clé d&#39;actif peut être conçue pour durer plusieurs images.</glossdef></glossentry>
<glossentry id="Default_Asset_Track">
<glossterm>piste d&#39;actifs</glossterm>
<glossdef>Piste dans le panneau des pistes de séquences qui contient un seul élément, soit un sprite, un son, une occurrence ou une séquence.</glossdef></glossentry>
<glossentry id="Default_assignment">
<glossterm>mission</glossterm>
<glossdef>Une affectation est simplement le terme utilisé lorsque nous définissons (attribuons) une valeur à une variable.</glossdef></glossentry>
<glossentry id="Default_backend">
<glossterm>backend</glossterm>
<glossdef>Le backend est la partie d&#39;un programme qui est exécutée en arrière-plan et est opaque pour l&#39;utilisateur, généralement sans aucune intervention de l&#39;utilisateur. Par exemple, le côté serveur des choses lors de la programmation réseau sur Internet, ou le traitement des données qui se déroule dans les coulisses d&#39;un jeu RPG. C&#39;est essentiellement l&#39;opposé du frontend.</glossdef></glossentry>
<glossentry id="Default_bezier_interpolation">
<glossterm>interpolation de Bézier</glossterm>
<glossdef>L&#39;interpolation de Bézier consiste à estimer une nouvelle valeur en reliant deux valeurs connues adjacentes avec une courbe spline générée mathématiquement qui peut être éditée à l&#39;aide de &quot;poignées&quot; attachées à chaque point. Vous pouvez ensuite obtenir la valeur interpolée en vérifiant n&#39;importe quel point le long de la ligne.</glossdef></glossentry>
<glossentry id="Default_bit">
<glossterm>bit</glossterm>
<glossdef>Une valeur de données unique qui peut être 1 ou 0 (vrai ou faux). Les bits sont combinés par blocs de 8 pour créer un octet.</glossdef></glossentry>
<glossentry id="Default_bit_depth">
<glossterm>peu profond</glossterm>
<glossdef>La profondeur de bits fait référence au nombre de bits dans chaque échantillon d&#39;un fichier audio. Une profondeur de bits inférieure donne un son de moins bonne qualité mais une taille de fichier beaucoup plus petite. Des profondeurs de bits inférieures sont généralement utilisées pour les petits effets sonores et les patforms où la mémoire peut être un problème (comme HTML5).</glossdef></glossentry>
<glossentry id="Default_bit_rate">
<glossterm>débit binaire</glossterm>
<glossdef>Le débit binaire est mesuré en kilobits par seconde (kbps ou k) et correspond au nombre de bits codés par seconde ou au nombre de bits transmis ou reçus par seconde. Plus le débit binaire et le taux d&#39;échantillonnage sont élevés, plus la qualité audio est élevée, mais plus la puissance de traitement et la bande passante nécessaires sont élevées. Des débits binaires inférieurs créent une taille de fichier plus petite et utilisent moins de traitement et de bande passante, mais avec une baisse de la qualité audio. Pour une musique de bonne qualité, un débit binaire de 64 à 128 kbps (96 kbps + recommandé) est généralement préféré.</glossdef></glossentry>
<glossentry id="Default_bitmap">
<glossterm>bitmap</glossterm>
<glossdef>Un bitmap est le terme utilisé pour décrire toute image statique composée de pixels colorés stockés sous forme de bits (contrairement aux images vectorielles stockées à l&#39;aide d&#39;algorithmes mathématiques). PNG, JPG et BMP sont des exemples d&#39;images bitmap, tandis que SWF serait un exemple d&#39;image vectorielle.</glossdef></glossentry>
<glossentry id="Default_bounding_box">
<glossterm>cadre de délimitation</glossterm>
<glossdef>Pour les sprites, le cadre de délimitation est le nom donné aux bords de la zone dans laquelle les collisions seront initialement détectées, et il n&#39;est pas nécessaire qu&#39;il soit de la même taille que le sprite auquel il est appliqué. Pour les séquences, le cadre de délimitation est le bord extérieur de l&#39;espace total occupé par un ou plusieurs éléments dans le canevas.</glossdef></glossentry>
<glossentry id="Default_build_tools">
<glossterm>construire des outils</glossterm>
<glossdef>Les outils de construction sont des applications externes dont GameMaker Studio 2 besoin pour générer des packages exécutables pour les différentes plates-formes cibles.</glossdef></glossentry>
<glossentry id="Default_byte">
<glossterm>octet</glossterm>
<glossdef>Un octet est une unité de données comportant huit chiffres binaires, et chacun des chiffres qui composent un octet est appelé bits, c&#39;est-à-dire qu&#39;un octet fait 8 bits et un bit peut être un 1 ou un 0.</glossdef></glossentry>
<glossentry id="Default_Cache">
<glossterm>Cache</glossterm>
<glossdef>Le cache est un ensemble de fichiers qui sont générés GameMaker , puis stockés et réutilisés sur plusieurs exécutions d&#39;un projet. Notez que ce cache peut parfois devenir `` obsolète &#39;&#39;, ce qui signifie qu&#39;il doit être effacé pour forcer GameMaker à le reconstruire à partir de zéro, en veillant à ce qu&#39;aucun fichier périmé ne corrompe votre jeu final exécutable.</glossdef></glossentry>
<glossentry id="Default_callback">
<glossterm>rappeler</glossterm>
<glossdef>Un rappel est simplement une fonction qui s&#39;exécute puis déclenche une autre fonction (ou un bloc de code) quand il a fini de faire ce qui lui a été assigné. Par exemple, la fonction sprite_add () déclenchera un rappel dans l&#39;événement asynchrone Image Loaded lorsque le sprite a été chargé.</glossdef></glossentry>
<glossentry id="Default_catmull-rom_interpolation">
<glossterm>interpolation catmull-rom</glossterm>
<glossdef>Il s&#39;agit d&#39;un type d&#39;interpolation non linéaire basé sur des splines mathématiques. Il est utilisé pour estimer une nouvelle valeur en reliant deux valeurs connues adjacentes à l&#39;aide de courbes «lisses» (splines), et une nouvelle valeur peut être dérivée de n&#39;importe quel point le long de la ligne.</glossdef></glossentry>
<glossentry id="Default_Compiling">
<glossterm>Compiler</glossterm>
<glossdef>GameMaker est lorsque GameMaker prend votre code et le rassemble de manière à créer un package exécutable qui s&#39;exécutera sur un appareil en tant que jeu.</glossdef></glossentry>
<glossentry id="Default_compression">
<glossterm>compression</glossterm>
<glossdef>La compression est l&#39;utilisation d&#39;algorithmes mathématiques pour réduire la taille d&#39;un fichier. Ceci est utilisé en particulier pour les fichiers audio et image, où des formats tels que JPG (image) et MP3 (audio) sont des formats compressés. La compression résulte généralement d&#39;une taille de fichier beaucoup plus petite, mais avec une certaine perte de données qui peut ou non être perceptible en fonction du type et de la force de la compression utilisée. Les formats non compressés seraient BMP (image) ou WAV (audio), qui ont des fichiers de plus grande taille, mais pas de perte de données.</glossdef></glossentry>
<glossentry id="Default_conditional">
<glossterm>conditionnel</glossterm>
<glossdef>Les conditions, les instructions conditionnelles et les expressions conditionnelles sont des caractéristiques du langage de programmation général et elles aident le code à faire un choix où le résultat est vrai ou faux. Ceux-ci peuvent effectuer différentes actions en fonction des besoins du programmeur, et plusieurs conditions peuvent être combinées en une seule condition, à condition que la valeur finale de la condition soit vraie ou fausse. Des exemples d&#39;instructions conditionnelles sont «if» et «while».</glossdef></glossentry>
<glossentry id="Default_constants">
<glossterm>constant</glossterm>
<glossdef>Une constante est un terme utilisé pour décrire une valeur nommée qui ne change pas tout au long de l&#39;exécution du programme. GameMaker Studio 2 possède un certain nombre de constantes intégrées - par exemple os_windows - mais vous pouvez également créer vos propres valeurs de constante à utiliser dans vos projets (appelés macros) et extensions.</glossdef></glossentry>
<glossentry id="Default_CPU_overhead">
<glossterm>Surcharge du processeur</glossterm>
<glossdef>La surcharge du processeur mesure la quantité de travail que l&#39;unité centrale de traitement d&#39;un ordinateur peut effectuer et le pourcentage de cette capacité qui est utilisé par des tâches informatiques individuelles.</glossdef></glossentry>
<glossentry id="Default_deadzone">
<glossterm>zone morte</glossterm>
<glossdef>La zone morte est la distance dont vous disposez pour déplacer un stick analogique avant que le jeu ne reconnaisse qu&#39;il est déplacé. Une zone morte basse fera tout léger mouvement du stick analogique déplacer votre joueur ou viser ou autre. Une valeur de zone morte élevée signifie que le stick analogique a besoin d&#39;un mouvement beaucoup plus important avant que le jeu ne le détecte et ne déplace tout ce qui est contrôlé.</glossdef></glossentry>
<glossentry id="Default_back-buffer">
<glossterm>tampon d&#39;affichage</glossterm>
<glossdef>Le tampon d&#39;affichage est le «canevas» où tout est finalement dessiné. Certains événements le ciblent directement (comme l&#39;événement Pre Draw), tandis que d&#39;autres dessinent d&#39;abord sur la surface de l&#39;application, puis le dessinent dans la mémoire tampon d&#39;affichage.</glossdef></glossentry>
<glossentry id="Default_Dope_Sheet">
<glossterm>Dope Sheet</glossterm>
<glossdef>La Dope Sheet est la représentation visuelle de la chronologie de la séquence, et vous permet d&#39;ajouter, de supprimer et de modifier les différentes clés d&#39;actif et les clés de paramètres qui affectent le comportement des différentes pistes de la séquence au fil du temps.</glossdef></glossentry>
<glossentry id="Default_encoding">
<glossterm>codage</glossterm>
<glossdef>L&#39;encodage transforme les données dans un autre format à l&#39;aide d&#39;un schéma accessible au public afin qu&#39;il puisse être facilement inversé. Ce n&#39;est pas la même chose que le cryptage, car il ne nécessite pas de clé pour le décoder. Le codage est généralement utilisé pour changer les données dans un format pour une utilisation plus facile par un système différent (comme l&#39;envoi de données à un serveur), ou pour rendre les données illisibles à l&#39;œil humain.</glossdef></glossentry>
<glossentry id="Default_EULA">
<glossterm>CLUF</glossterm>
<glossdef>Le contrat de licence utilisateur final (CLUF) est un document juridique qui décrit la licence d&#39;un produit que vous obtenez.</glossdef></glossentry>
<glossentry id="Default_exception">
<glossterm>exception</glossterm>
<glossdef>Une condition spéciale, inattendue et anormale rencontrée lors de l&#39;exécution d&#39;un programme est appelée exception. Cela peut également être qualifié d&#39;erreur ou de condition qui modifie le chemin du programme ou du microprocesseur sur un chemin différent. Un exemple d&#39;exception peut être le cas lorsqu&#39;un programme tente d&#39;accéder à une variable, mais que la variable n&#39;existe pas. Les exceptions doivent être gérées et supprimées dans le code du programme pour éviter toute erreur fatale, un processus appelé débogage.</glossdef></glossentry>
<glossentry id="Default_executable_package">
<glossterm>package exécutable</glossterm>
<glossdef>Un package de fichiers utilisé pour exécuter un programme. Dans GameMaker Studio il peut s&#39;agir d&#39;un seul fichier - comme un programme d&#39;installation pour Windows - ou de plusieurs fichiers - comme la sortie HTML5.</glossdef></glossentry>
<glossentry id="Default_expression">
<glossterm>expression</glossterm>
<glossdef>Une expression est une combinaison d&#39;une ou plusieurs constantes, variables, opérateurs et / ou fonctions qui sont interprétées selon des règles particulières de priorité et d&#39;association pour renvoyer une autre valeur. Une expression simple serait (5 + 5), qui renvoie 10.</glossdef></glossentry>
<glossentry id="Default_floating_point">
<glossterm>point flottant</glossterm>
<glossdef>Les nombres à virgule flottante sont des nombres qui contiennent des virgules décimales flottantes. Par exemple, les nombres 5,5, 0,001 et -2 345,6789 sont des nombres à virgule flottante. Les nombres qui n&#39;ont pas de décimales sont appelés des entiers.</glossdef></glossentry>
<glossentry id="Default_font">
<glossterm>Police de caractère</glossterm>
<glossdef>Une police est une collection de glyphes graphiques utilisés pour représenter du texte dans une langue. Les polices peuvent être de grammages, de tailles et de styles différents et sont utilisées pour afficher tout contenu écrit dans un projet.</glossdef></glossentry>
<glossentry id="Default_framework">
<glossterm>cadre</glossterm>
<glossdef>Un framework est une base de code qui peut être modifiée et / ou développée par l&#39;utilisateur. Un framework peut inclure différentes bibliothèques de logiciels, API, compilateurs et bien plus encore. En termes plus simples, un cadre fournit un environnement favorable pour un certain type et un certain niveau de programmation d&#39;un projet. Dans GameMaker Studio 2 vous pouvez, par exemple, créer vos propres projets de cadre (via des packages d&#39;actifs locaux) contenant des scripts et des objets pour les commandes générales, la gestion des statistiques, la mise en réseau ou tout autre élément que vous utilisez couramment dans vos projets, puis les importer dans de nouveaux projets dès le début pour vous donner les bases de base pour vous connecter sans avoir à reprogrammer ces systèmes à chaque fois.</glossdef></glossentry>
<glossentry id="Default_frontend">
<glossterm>l&#39;extrémité avant</glossterm>
<glossdef>Le frontend est la partie d&#39;un programme qui est «frontale», c&#39;est-à-dire la partie avec laquelle l&#39;utilisateur final interagit. Par exemple, dans GameMaker Studio 2 l&#39;interface dans laquelle vous effectuez la programmation et ajoutez des ressources, etc ... est l&#39;interface du programme, car c&#39;est là que vous interagissez avec le programme et entrez des valeurs et des fichiers et d&#39;autres choses. C&#39;est essentiellement l&#39;opposé du backend.</glossdef></glossentry>
<glossentry id="Default_GameMaker:_Studio 1.4">
<glossterm>GameMaker : Studio 1.4</glossterm>
<glossdef>Une version précédente du GameMaker (souvent appelée Legacy GameMaker ) qui n&#39;est plus disponible ni prise en charge.</glossdef></glossentry>
<glossentry id="Default_garbage_collector">
<glossterm>Éboueur</glossterm>
<glossdef>Le garbage collector est un outil automatisé qui fait partie du code du jeu et est utilisé pour supprimer certains éléments (comme les tableaux et les structures) de la mémoire lorsqu&#39;ils ne sont plus référencés dans votre code, sans que vous ayez à les supprimer explicitement.</glossdef></glossentry>
<glossentry id="Default_gizmos">
<glossterm>gadgets</glossterm>
<glossdef>Les gizmo sont des idiomes d&#39;écran visuels directement manipulables, autonomes - essentiellement tout ce qui est visuel et peut être interagi avec ou manipulé par l&#39;utilisateur pour générer un effet ou un résultat spécifique.</glossdef></glossentry>
<glossentry id="Default_GUI">
<glossterm>GUI</glossterm>
<glossdef>Abréviation de «Interface utilisateur graphique», qui est une interface utilisateur qui comprend des éléments graphiques, tels que des fenêtres, des icônes et des boutons. Dans GameMaker vous avez un ensemble spécifique d&#39;événements d&#39;objets (Draw GUI Events) qui peuvent être dessinés sur cette couche spécialement conçue pour des éléments tels que le score, les vies, les inventaires, etc.</glossdef></glossentry>
<glossentry id="Default_hard-code">
<glossterm>codé en dur</glossterm>
<glossdef>En programmation informatique, le terme codé en dur est utilisé pour décrire un code considéré comme fixe et peu susceptible de changer. Les fonctionnalités codées en dur sont intégrées au matériel ou au logiciel de telle sorte qu&#39;elles ne peuvent pas être modifiées ultérieurement. Par exemple, si vous créez un jeu et «codez en dur» la santé du joueur à 10, alors vous utiliserez la valeur 10 dans tout le code du jeu plutôt que d&#39;utiliser une variable.</glossdef></glossentry>
<glossentry id="Default_hashing">
<glossterm>hachage</glossterm>
<glossdef>Le hachage est la méthode de création d&#39;une chaîne ou d&#39;une valeur qui se rapporte à une seule source - généralement un fichier - et UNIQUEMENT à cette source. Par exemple, dans GameMaker vous pouvez générer un hachage pour un fichier de sauvegarde, puis, avant d&#39;y accéder ultérieurement, générer un autre hachage pour celui-ci et vérifier le hachage d&#39;origine et le nouveau hachage pour déterminer si le fichier a été falsifié.</glossdef></glossentry>
<glossentry id="Default_HVS">
<glossterm>HSV</glossterm>
<glossdef>Cela signifie Teinte, Saturation et Valeur et est un moyen d&#39;exprimer une couleur en utilisant généralement des valeurs de 0 à 255. La teinte est la valeur de la teinte de la couleur, la saturation est la quantité de couleur à utiliser et la valeur est la luminosité de la couleur.</glossdef></glossentry>
<glossentry id="Default_HUD">
<glossterm>HUD</glossterm>
<glossdef>Dans les jeux, le HUD signifie l&#39;affichage tête haute. C&#39;est la méthode par laquelle les informations sont visuellement relayées au joueur dans le cadre de l&#39;interface utilisateur d&#39;un jeu, de sorte que des éléments tels que la barre de santé, les icônes d&#39;état, le score, etc. font tous partie du HUD, et normalement les éléments du HUD ne le font pas. nécessitent une interaction de l&#39;utilisateur.</glossdef></glossentry>
<glossentry id="Default_IDE">
<glossterm>IDE</glossterm>
<glossdef>L&#39;EDI, ou environnement de développement intégré, est une application logicielle qui fournit des installations complètes aux programmeurs informatiques pour le développement de logiciels. Dans ce cas, l&#39;intégralité de l&#39;interface de GameMaker Studio 2 est considérée comme l&#39;EDI et comprend des sections pour créer des graphiques, ajouter des sons et ajouter du code pour créer vos jeux.</glossdef></glossentry>
<glossentry id="Default_iteration">
<glossterm>itération</glossterm>
<glossdef>Une itération est un passage unique à travers un ensemble d&#39;opérations dans le code de votre projet. Une forme d&#39;itération dans la programmation informatique est via des boucles. Une boucle répétera un certain segment de code jusqu&#39;à ce qu&#39;une condition soit remplie et qu&#39;elle puisse continuer. Chaque fois que l&#39;ordinateur exécute une boucle, cela s&#39;appelle une itération. En termes simples, l&#39;itération est le processus qui consiste à répéter encore et encore un extrait de code particulier pour effectuer une certaine action.</glossdef></glossentry>
<glossentry id="Default_JSON">
<glossterm>JSON</glossterm>
<glossdef>JSON signifie JavaScript Object Notatio et est un format léger pour stocker des données. JSON est souvent utilisé lorsque des données sont envoyées d&#39;un serveur à une page Web et est considéré comme `` auto-descriptif &#39;&#39; et facile à comprendre et à suivre une fois visualisé.</glossdef></glossentry>
<glossentry id="Default_keyframe">
<glossterm>keyframe</glossterm>
<glossdef>Une keyframe (également appelée clé de paramètre) est un point de la chronologie dans la dope sheet où une modification de la valeur d&#39;un paramètre est définie.</glossdef></glossentry>
<glossentry id="Default_keyword">
<glossterm>mot-clé</glossterm>
<glossdef>Les mots clés sont des mots spéciaux réservés par un langage de programmation ou un programme car ils ont une signification particulière. Ces mots-clés sont réservés pour effectuer certaines tâches et peuvent être des commandes ou des paramètres. Chaque langage de programmation a un ensemble de mots-clés réservés (également appelés noms réservés) qui ne peuvent pas être utilisés comme noms de variables, et le GameMaker Language ne fait pas exception, où des mots comme return, tandis que, si et break sont tous des mots-clés réservés utilisés dans la programmation Langue.</glossdef></glossentry>
<glossentry id="Default_linear_interpolation">
<glossterm>interpolation linéaire</glossterm>
<glossdef>L&#39;interpolation linéaire consiste à estimer une nouvelle valeur en reliant deux valeurs connues adjacentes avec une ligne droite. Vous pouvez ensuite obtenir la valeur interpolée en vérifiant n&#39;importe quel point le long de la ligne. Dans les graphiques, l&#39;interpolation linéaire fait référence à une méthode de base de lissage des bords des pixels.</glossdef></glossentry>
<glossentry id="Default_method">
<glossterm>méthode</glossterm>
<glossdef>Dans GameMaker , une méthode est le nom donné à une fonction définie par l&#39;utilisateur qui a été liée à une instance, de sorte que la variable d&#39;instance est le nom de la fonction et ce que vous utilisez pour l&#39;appeler.</glossdef></glossentry>
<glossentry id="Default_operand">
<glossterm>opérande</glossterm>
<glossdef>Un opérande est un terme utilisé pour désigner les valeurs qui peuvent être manipulées à l&#39;aide de différents opérateurs. Dans l&#39;expression A + B + C, A, B et C sont les opérandes.</glossdef></glossentry>
<glossentry id="Default_operator">
<glossterm>opérateur</glossterm>
<glossdef>Un opérateur est un terme utilisé pour désigner quelque chose qui peut manipuler différents opérandes. Dans l&#39;expression A + B - C, + et - sont les opérateurs. Des exemples d&#39;opérateurs différents sont + (addition), - (soustraction), = (égal),! = (Différent de) et&gt; = (supérieur ou égal à), mais il y en a beaucoup plus.</glossdef></glossentry>
<glossentry id="Default_parameter_key">
<glossterm>clé de paramètre</glossterm>
<glossdef>Une clé de paramètre (également appelée keyframe ) est un point de la chronologie de la dope sheet où une modification de la valeur d&#39;un paramètre est définie.</glossdef></glossentry>
<glossentry id="Default_parameter_tracks">
<glossterm>pistes de paramètres</glossterm>
<glossdef>Piste qui a été affectée à une piste d&#39;actif dans le panneau des pistes et qui modifie un paramètre unique pour la piste d&#39;actif à laquelle elle est liée, comme la position ou l&#39;index d&#39;image.</glossdef></glossentry>
<glossentry id="Default_physics">
<glossterm>la physique</glossterm>
<glossdef>Dans GameMaker , lorsque nous parlons d&#39;un objet, d&#39;une instance ou d&#39;une pièce utilisant la `` physique &#39;&#39;, nous voulons dire qu&#39;il utilise les fonctions de simulation physique intégrées, basées sur la bibliothèque de physique Box2D.</glossdef></glossentry>
<glossentry id="Default_playhead">
<glossterm>tête de lecture</glossterm>
<glossdef>La position actuelle de «lecture» dans la chronologie dans la dope sheet Séquences ou dans la vue image de l&#39;éditeur Sprite. Dans les séquences (et les sprites), cela se déplacera au fur et à mesure que l&#39;animation est prévisualisée, et vous pouvez la placer sur des images spécifiques pour voir et modifier les clés et les keyframes à cette position.</glossdef></glossentry>
<glossentry id="Default_port_number">
<glossterm>numéro de port</glossterm>
<glossdef>Un numéro de port est un moyen d&#39;identifier un processus spécifique vers lequel un message Internet ou autre réseau doit être transmis lorsqu&#39;il arrive sur un serveur.</glossdef></glossentry>
<glossentry id="Default_Remote_Workers">
<glossterm>Travailleurs à distance</glossterm>
<glossdef>Un Remote Worker est un programme spécial que GameMaker Studio 2 utilisera sur certaines plates-formes pour créer vos exécutables de jeu sans exécuter l&#39; GameMaker Studio 2 sur cette plate-forme.</glossdef></glossentry>
<glossentry id="Default_render">
<glossterm>rendu</glossterm>
<glossdef>Quand quelque chose est rendu dans GameMaker Studio 2 , cela signifie généralement qu&#39;il a simplement été «dessiné dans le tampon d&#39;affichage» ou «dessiné sur une surface». Le rendu peut également faire référence au processus de transformation d&#39;une sorte de source vectorielle (comme une police) en une image bitmap.</glossdef></glossentry>
<glossentry id="Default_RSS">
<glossterm>RSS</glossterm>
<glossdef>Abréviation de «Rich Site Summary», il s&#39;agit d&#39;un système standardisé pour la distribution de contenu d&#39;un éditeur en ligne aux internautes.</glossdef></glossentry>
<glossentry id="Default_Runtime">
<glossterm>Runtime</glossterm>
<glossdef>Le runtime dans GameMaker Studio 2 est la collection d&#39;actifs de compilateur requis par le programme pour créer un package exécutable final pour une plate-forme cible donnée. Ceux-ci sont installés séparément de l&#39;EDI et peuvent être modifiés et mis à jour à tout moment.</glossdef></glossentry>
<glossentry id="Default_sample_rate">
<glossterm>taux d&#39;échantillonnage</glossterm>
<glossdef>La fréquence d&#39;échantillonnage est le nombre d&#39;échantillons audio transportés par seconde, mesuré en Hz ou kHz (un kHz étant 1000 Hz). Plus la fréquence d&#39;échantillonnage est élevée, plus le son se rapprochera de la forme d&#39;onde analogique d&#39;origine, mais plus la taille du fichier sera grande. En général, les effets sonores conviennent avec une fréquence d&#39;échantillonnage inférieure à celle de la musique.</glossdef></glossentry>
<glossentry id="Default_SCM">
<glossterm>SCM</glossterm>
<glossdef>SCM signifie Source Control Management, qui est un programme (ou une suite de programmes) responsable de la maintenance des versions du code source d&#39;un projet. SCM vous permet de stocker un historique en cours des modifications du code, ainsi que de revoir et d&#39;annuler toutes les modifications apportées au code source, entre autres.</glossdef></glossentry>
<glossentry id="Default_SDK">
<glossterm>SDK</glossterm>
<glossdef>SDK signifie «Kit de développement logiciel». Il s&#39;agit généralement d&#39;un ensemble de logiciels et / ou de packages utilisés pour développer des applications pour un périphérique ou un système d&#39;exploitation spécifique.</glossdef></glossentry>
<glossentry id="Default_server">
<glossterm>serveur</glossterm>
<glossdef>En informatique, un serveur est un programme informatique ou un appareil qui fournit des fonctionnalités à d&#39;autres programmes ou appareils, appelés «clients».</glossdef></glossentry>
<glossentry id="Default_shader">
<glossterm>shaders</glossterm>
<glossdef>Un shader est une collection de petits programmes qui s&#39;exécutent directement sur le GPU pour créer des graphiques et des effets graphiques. Ceux-ci sont très rapides à exécuter et libèrent le processeur pour faire d&#39;autres choses.</glossdef></glossentry>
<glossentry id="Default_smooth_interpolation">
<glossterm>interpolation douce</glossterm>
<glossdef>L&#39;interpolation lisse consiste à estimer une nouvelle valeur en reliant deux valeurs connues adjacentes à une courbe spline générée mathématiquement. Vous pouvez ensuite obtenir la valeur interpolée en vérifiant n&#39;importe quel point le long de la ligne.</glossdef></glossentry>
<glossentry id="Default_source_code">
<glossterm>code source</glossterm>
<glossdef>Le code source est le composant fondamental d&#39;un programme informatique nécessaire à l&#39;exécution du programme.</glossdef></glossentry>
<glossentry id="Default_spline">
<glossterm>spline</glossterm>
<glossdef>Une spline est essentiellement une courbe lisse utilisée pour joindre des points. Mathématiquement parlant, il est défini comme une fonction polynomiale suffisamment lisse qui est définie par morceaux, et possède un degré élevé de douceur aux endroits où les pièces polynomiales se connectent.</glossdef></glossentry>
<glossentry id="Default_sprites">
<glossterm>sprites</glossterm>
<glossdef>Un sprite est un graphique bitmap conçu pour faire partie d&#39;une scène plus grande. Il peut s&#39;agir d&#39;une image statique ou d&#39;un graphique animé.</glossdef></glossentry>
<glossentry id="Default_statement">
<glossterm>déclaration</glossterm>
<glossdef>En programmation, une instruction est une seule ligne de code écrite légalement dans un langage de programmation qui exprime une action à effectuer. Une instruction peut avoir ses propres composants internes, notamment des expressions, des opérateurs et des fonctions. Un exemple d&#39;instruction est A = B + 5. Un programme GameMaker Studio 2 n&#39;est rien d&#39;autre qu&#39;une séquence d&#39;une ou plusieurs instructions qui exécutent ensemble une tâche (comme déplacer le joueur).</glossdef></glossentry>
<glossentry id="Default_swatches">
<glossterm>échantillons</glossterm>
<glossdef>Un échantillon est simplement un petit échantillon carré d&#39;une couleur ou d&#39;un matériau utilisé pour illustrer son apparence.</glossdef></glossentry>
<glossentry id="Default_syntax">
<glossterm>syntaxe</glossterm>
<glossdef>À l&#39;instar des langages humains, les langages de programmation ont leur propre ensemble de règles sur la façon dont les instructions peuvent être transmises, et cet ensemble de règles est connu sous le nom de syntaxe. Bien qu&#39;un certain nombre de langages de programmation partagent de nombreuses fonctionnalités, fonctions et capacités, leur syntaxe diffère généralement. Sans une bonne utilisation de la syntaxe, on ne peut pas écrire un programme exécutable et une mauvaise syntaxe entraînera des erreurs lors de la compilation.</glossdef></glossentry>
<glossentry id="Default_texel">
<glossterm>Texel</glossterm>
<glossdef>Texel (ou élément de texture) est l&#39;unité fondamentale de l&#39;espace de texture, tout comme un pixel est l&#39;élément fondamental de l&#39;espace d&#39;image. Les textures sont représentées par des tableaux de Texels, tout comme les images sont représentées par des tableaux de pixels. Lors de la texturation d&#39;une surface 3D (un processus connu sous le nom de mappage de texture), le moteur de rendu mappe les texels aux pixels appropriés dans l&#39;image de sortie.</glossdef></glossentry>
<glossentry id="Default_texture_atlas">
<glossterm>atlas de texture</glossterm>
<glossdef>Un autre nom pour une page de texture, qui est simplement une collection d&#39;images requises par un ou plusieurs sprites de votre jeu, organisées de manière optimale pour utiliser le moins de mémoire de texture possible.</glossdef></glossentry>
<glossentry id="Default_texture_page">
<glossterm>page de texture</glossterm>
<glossdef>Une page de texture (également appelée atlas de textures) est une collection d&#39;images (sprites, tilesets, caractères de police, etc ...) qui sont regroupées de manière optimale afin qu&#39;elles occupent le moins de mémoire de texture lors de votre partie. est exécuté.</glossdef></glossentry>
<glossentry id="Default_tile_map">
<glossterm>carte de tuiles</glossterm>
<glossdef>La carte de tuiles est le nom donné à une collection de tuiles extraites d&#39;un ensemble de tuiles et utilisées pour créer des niveaux dans un jeu.</glossdef></glossentry>
<glossentry id="Default_tile-sets">
<glossterm>ensembles de tuiles</glossterm>
<glossdef>Un jeu de tuiles est une collection d&#39;éléments graphiques carrés ou rectangulaires disposés sur une grille sous la forme d&#39;une seule image. Chaque élément de la grille peut ensuite être placé plusieurs fois dans une pièce pour créer une scène plus grande appelée «carte de tuiles».</glossdef></glossentry>
<glossentry id="Default_timeline">
<glossterm>délais</glossterm>
<glossdef>Une chronologie dans GameMaker Studio 2 est une collection linéaire d&#39;événements qui seront exécutés dans un ordre consécutif. Chaque événement peut recevoir un code ou des actions pour exécuter une tâche et lorsque la chronologie est exécutée, ces tâches seront exécutées lorsque chaque événement de la ligne de temps est atteint.</glossdef></glossentry>
<glossentry id="Default_Track_Panel">
<glossterm>Panneau de piste</glossterm>
<glossdef>La zone de l&#39;éditeur de séquence qui vous montre toutes les différentes pistes d&#39;une séquence - pistes de ressources, pistes de paramètres, groupes de pistes et groupes de masques de plans.</glossdef></glossentry>
<glossentry id="Default_truth_table">
<glossterm>table de vérité</glossterm>
<glossdef>Une table de vérité est une table mathématique utilisée en logique - spécifiquement en relation avec l&#39;algèbre booléenne et les fonctions booléennes - qui définit les valeurs fonctionnelles des expressions logiques sur chacun de leurs arguments fonctionnels, c&#39;est-à-dire pour chaque combinaison de valeurs prises par leurs variables logiques .</glossdef></glossentry>
<glossentry id="Default_typo">
<glossterm>faute de frappe</glossterm>
<glossdef>Erreur typographique.</glossdef></glossentry>
<glossentry id="Default_URL">
<glossterm>URL</glossterm>
<glossdef>Abréviation de «Universal Resource Locator», il s&#39;agit essentiellement de l&#39;adresse de quelque chose sur Internet.</glossdef></glossentry>
<glossentry id="Default_v-sync">
<glossterm>v-sync</glossterm>
<glossdef>V-sync ou synchronisation verticale est utilisée pour synchroniser la vitesse de mise à jour de votre jeu avec le taux de rafraîchissement du moniteur. Cela peut réduire la déchirure de l&#39;écran - c&#39;est-à-dire lorsque votre écran affiche des portions de plusieurs images en une seule fois - mais peut également entraîner des problèmes de performances ou des problèmes sur les moniteurs avec des taux de rafraîchissement élevés.</glossdef></glossentry>
<glossentry id="Default_variable">
<glossterm>variable</glossterm>
<glossdef>Une variable est une valeur nommée dans un programme qui peut être modifiée, stockée et affichée chaque fois que nécessaire. Par exemple, si nous avons une variable entière avec un nom XYZ et qu&#39;elle stocke une valeur 10, nous pouvons alors faire des choses comme A = XYZ + 10, qui mettra la valeur de la variable A à 20, puisque XYZ vaut 10 et nous y ajoutent 10. Vous pouvez également modifier les valeurs des variables à l&#39;aide d&#39;opérateurs, de sorte que XYZ = XYZ + 100 modifierait la valeur de notre variable XYZ pour qu&#39;elle soit égale à 110. Les variables peuvent également être utilisées pour stocker des identifiants et des références à différents actifs.</glossdef></glossentry>
<glossentry id="Default_vector">
<glossterm>vecteur</glossterm>
<glossdef>Un vecteur est une construction mathématique qui a une taille, appelée magnitude, et une direction. Dans GameMaker , un vecteur est généralement utilisé pour montrer la distance et la direction dans laquelle quelque chose s&#39;est déplacé. Un vecteur peut également être utilisé pour définir des images et certains formats d&#39;image comme SWF utilisent des mathématiques vectorielles pour définir les images qu&#39;ils contiennent.</glossdef></glossentry>
<glossentry id="Default_Version_Number">
<glossterm>Numéro de version</glossterm>
<glossdef>Un numéro de version est un ensemble unique de numéros attribués à une version spécifique d&#39;un logiciel, d&#39;un jeu ou d&#39;un actif, normalement au format MAJOR.MINOR.MAINTENANCE, par exemple: v2.3.56. En règle générale, à mesure que des mises à jour et des éditions entièrement nouvelles d&#39;un jeu ou d&#39;un actif sont publiées, le numéro de version augmente.</glossdef></glossentry>
<glossentry id="Default_vertex">
<glossterm>sommet</glossterm>
<glossdef>Un sommet est le nom donné à un point unique d&#39;un polygone qui contient diverses caractéristiques qui définissent sa position, sa couleur et sa texture. En infographie, cela signifie généralement un coin de triangle qui est utilisé pour créer une primitive, et une combinaison de ces primitives est ce qui fait les graphiques à l&#39;écran.</glossdef></glossentry>
<glossentry id="Default_virtual_machine">
<glossterm>Machine virtuelle (VM)</glossterm>
<glossdef>Dans GameMaker , The VM (Virtual Machine) est une méthode de compilation qui utilise un runner générique pour chaque plate-forme, puis l&#39;utilise pour interpréter le code de votre jeu.</glossdef></glossentry>
<glossentry id="Default_VRAM">
<glossterm>VRAM</glossterm>
<glossdef>VRAM est la quantité de mémoire disponible pour la vidéo, c&#39;est-à-dire: l&#39;espace mémoire qui peut stocker des textures et des images.</glossdef></glossentry>
<glossentry id="Default_weak_reference">
<glossterm>référence faible</glossterm>
<glossdef>Une référence faible est une référence qui ne protège pas l&#39;objet référencé de la collecte par un garbage collector, et peut donc être utilisée pour vérifier si une structure est toujours &quot;vivante&quot; (référencée) ou pas quelque part dans le jeu.</glossdef></glossentry>
<glossentry id="Default_YoYo_Compiler">
<glossterm>YoYo (YYC)</glossterm>
<glossdef>Il s&#39;agit d&#39;un compilateur spécial pour créer des packages exécutables qui utilisent du code natif au lieu du code interprété et un runner (c&#39;est ce que la GameMaker VM utilise). Le code compilé est plus rapide à exécuter, mais prend plus de temps pour compiler l&#39;exécutable.</glossdef></glossentry>
<glossentry id="Default_boolean">
<glossterm>booléen</glossterm>
<glossdef>Un booléen est un type de variable qui peut renvoyer vrai ou faux en fonction de sa valeur, et peut être utilisé dans des conditions et des expressions. Les constantes «false» ou «true» peuvent être appliquées à un booléen, qui sont l&#39;équivalent des valeurs réelles 0 et 1.</glossdef></glossentry></glossgroup>