<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Android</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that details the Android Game Options" />
  <meta name="rh-index-keywords" content="Game Options - Android" />
  <meta name="search-keywords" content="Android Game Options" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Options de jeu sur<span class="notranslate">Android</span> </h1>
  <p>Cette section présente les différentes options disponibles qui contrôlent la façon dont vos projets de jeux <span class="notranslate">Android</span> seront compilés. Les différentes sections sont les suivantes :</p>
  <p> </p>
  <h2>Général</h2>
  <p><img alt="General Android Game Options 1" class="center" src="../../assets/Images/Settings/Android_General1_Options.png">La première partie de la section <strong>générale </strong>est consacrée aux <strong>informations sur le produit</strong> et aux <strong>paramètres de construction</strong>.
    Vous devez remplir les informations sur le produit, qui comprennent le <strong>nom d'affichage</strong> du projet, les informations sur le paquet, qui consistent en un <strong>domaine</strong>, une <strong>société </strong>et un <strong>produit</strong>. Les informations sur le paquet
    ne peuvent être constituées que de lettres de A à Z et de chiffres de 0 à 9, sans symboles ni autres caractères spéciaux, et ne doivent pas comporter de majuscules. Ces informations seront ensuite utilisées pour générer un ID de paquet au format &quot;<span class="inline">com.company.myappname</span>&quot;.</p>
  <p>Vous devez ensuite définir les <strong>outils de construction</strong> ainsi que les versions <strong>Target</strong>, <strong>Minimum </strong>et <strong>Compile SDK</strong>.</p>
  <p class="note"><strong>REMARQUE</strong>: il existe également une option pour la version &quot;<strong>Support Library &quot;</strong> à utiliser. À partir de <span class="notranslate">GameMaker Studio</span> v2.2.4 et plus, cette option n'est plus nécessaire et toute valeur utilisée ici sera ignorée. Ce paramètre est conservé
    pour les projets existants qui nécessitent une version <span class="notranslate">d'exécution</span> antérieure à la 2.2.4.</p>
  <p>Les outils de construction (et la bibliothèque de support, le cas échéant) sont utilisés lorsque <span class="notranslate">GameMaker Studio 2</span> construit votre jeu pour la cible <span class="notranslate">Android</span> et doivent être définis sur des valeurs appropriées en fonction des outils que vous avez installés avec <span class="notranslate">Android</span> Studio.</p>
  <ul class="colour">
    <li>Le <strong>SDK cible</strong> indique que vous avez testé votre application sur (jusqu'à et y compris) la version que vous spécifiez ici. Il s'agit simplement de donner au système d'exploitation <span class="notranslate">Android</span> une idée de la manière dont il doit traiter votre application en termes de fonctionnalités du système d'exploitation. À toutes fins utiles
      pratiques, la plupart des applications voudront définir le SDK cible sur la dernière version publiée de l'API (telle qu'utilisée par le paramètre Compile SDK). Cela permettra à votre application de s'afficher aussi bien que possible sur les appareils <span class="notranslate">Android</span> les plus récents. Notez qu'à partir de novembre
      2019, Google a fait du niveau 28 de l'API la cible requise.</li>
    <li>La version <strong>minimale</strong> du <strong>SDK</strong> est le niveau d'API minimum qui permettra de faire fonctionner votre projet. À partir de novembre 2019, Google a fait du niveau d'API 16 le minimum absolu requis, mais si vous ajoutez des extensions, alors elles peuvent nécessiter un niveau d'API minimum plus élevé.</li>
    <li>La version <strong>Compile SDK</strong> est la version de l'API par rapport à laquelle le projet est compilé. Cela signifie que vous pouvez utiliser les fonctionnalités de l'API <span class="notranslate">Android</span> incluses dans cette version de l'API. Si vous essayez d'utiliser les fonctionnalités de l'API 16 - par exemple - mais que vous définissez Compile
      SDK 15, vous obtiendrez une erreur de compilation. Toutefois, si vous définissez le SDK de compilation sur 28, vous pourrez toujours exécuter l'application sur un appareil de l'API 26 (ainsi que sur toutes les autres versions précédentes).</li>
  </ul>
  <p>Vous pouvez choisir l'un des paramètres cibles prédéfinis en cliquant sur le bouton " <strong>Pre-populate SDK</strong> values to chosen API level", qui ouvrira une liste de différentes API à choisir. En sélectionnant l'une d'entre elles, tous les fichiers SDK seront remplis avec les valeurs appropriées.
    SDK avec les valeurs appropriées que vous pouvez ensuite utiliser ou modifier selon vos besoins.</p>
  <p class="note"><strong>REMARQUE</strong>: vous devez avoir installé les API appropriées dans le gestionnaire SDK <span class="notranslate">Android</span> ou via <span class="notranslate">Android</span> Studio pour que vos projets se compilent correctement.</p>
  <p><img alt="Android General Options Part 2" class="center" src="../../assets/Images/Settings/Android_General2_Options.png" /></p>
  <p>La deuxième partie de la section <strong>Général</strong> couvre les Architectures de CPU pour lesquelles construire, avec les options suivantes disponibles (vous pouvez les sélectionner toutes ou seulement celles dont vous avez besoin, mais notez que chacune d'entre elles ajoutera à la taille finale de
    l'apk compilé) :</p>
  <ul class="Disc">
    <li>Construire pour ARMV5 (coché par défaut)</li>
    <li>Construire pour ARMV7 (coché par défaut)</li>
    <li>Construire pour x86 (coché par défaut)</li>
    <li>Build for Mips (coché par défaut)</li>
    <li>Construction pour ARM64</li>
    <li>Construction pour x86_64</li>
  </ul>
  <p>Après l'avoir configuré, vous pouvez sélectionner les différentes orientations sur lesquelles votre jeu peut être exécuté pour une expérience utilisateur optimale. Les options disponibles sont les suivantes :</p>
  <ul class="Disc">
    <li>Portrait</li>
    <li>Portrait-flippé</li>
    <li>Paysage</li>
    <li>Retournement du paysage</li>
  </ul>
  <p>Enfin, vous disposez des options diverses suivantes :</p>
  <ul class="colour">
    <li><strong>Activez le support Bluetooth/iCade</strong>: Ceci ajoutera le support pour les manettes de jeu Bluetooth ou iCade à votre projet de jeu. Cette option est activée par défaut.</li>
    <li><strong>Exécuter l'analyse de code Lint</strong>: Lorsque cette option est cochée, les outils de compilation exécutent une analyse de code Lint sur le projet lors de sa construction, ce qui permet une vérification plus approfondie des erreurs et l'affichage de plus d'informations dans la fenêtre de sortie lors de la compilation du projet.
      (un fichier LOG sera également créé, avec le chemin d'accès au fichier affiché à la fin de la compilation dans la <a href="../../Introduction/The_Output_Window.htm">fenêtre de sortie</a>). Notez que tout ce qui est signalé par l'analyse lint comme une erreur n'est pas nécessairement problématique pour votre jeu.
      pour votre jeu, et avoir cette option activée peut signifier que votre jeu ne se compile plus, même si quand elle est désactivée, il se compile et s'exécute bien. Essentiellement, cela ne sert qu'au débogage, et l'option est désactivée par défaut.</li>
    <li><strong>Emplacement d'installation</strong>: Vous pouvez définir ici l'emplacement d'installation par défaut de votre jeu. Il peut être réglé sur <strong>Automatique</strong>, auquel cas le jeu sera installé à l'emplacement choisi par l'utilisateur sur son appareil.
      peut être réglé sur <strong>Préférence externe</strong>, auquel cas le jeu sera toujours installé sur le stockage externe de l'appareil.</li>
  </ul>
  <p>Vous pouvez également définir la <strong>marge de veille</strong> d'<span class="notranslate">Android</span> ici. Cette option est liée à la réduction du bégaiement lors de l'exécution de votre jeu sur des systèmes spécifiques. En fait, si votre jeu tourne plus vite que la vitesse de votre pièce, <span class="notranslate">GameMaker Studio 2</span> &quot; dormira &quot; pendant le temps restant.
    pour le temps restant, mais cette mise en veille peut être assez imprécise et vous pouvez souvent dormir plus longtemps que nécessaire, ce qui fait que votre image prend plus de temps et provoque des bégaiements. Pour contourner ce problème, nous pouvons dormir pendant moins de temps, puis rester dans une
    pour le reste du temps afin de le rendre plus précis - bien que le problème avec le fait de rester en boucle est qu'il entraîne une augmentation de l'utilisation du CPU, ce qui peut à son tour entraîner une augmentation de la température du CPU et une consommation accrue de la batterie de votre appareil. Par défaut,
    cette valeur est réglée sur 4, et dans 99,99% des cas, cela vous conviendra, mais pour les appareils bas de gamme ou pour les appareils avec beaucoup de processus d'arrière-plan en cours d'exécution, cela peut ne pas être une solution idéale et une valeur de 5 à 10 peut être nécessaire. Notez cependant
    qu'il s'agit d'une configuration spécifique à un appareil et que ce qui fonctionne sur votre appareil peut ne pas être approprié pour un autre utilisateur.</p>
  <p> </p>
  <h2>Icônes adaptatives</h2>
  <p><img alt="Android Adaptive Icons Options" class="center" src="../../assets/Images/Settings/Android_AdaptiveIcons_Options.png"><span class="notranslate">Android</span> 8.0 (niveau 26 de l'API) a introduit des <strong>icônes de lanceur adaptatives</strong> pour vos jeux, et ces icônes peuvent afficher
    une variété de formes sur différents modèles d'appareils. Pour y remédier, vous devez fournir un certain nombre d'images d'avant-plan et d'arrière-plan pour que vos icônes soient affichées à différentes tailles. Ces tailles d'icônes sont les suivantes :</p>
  <ul class="Disc">
    <li>81x81 pixels (LDPI)</li>
    <li>108x108 pixels MDPI)</li>
    <li>162x162 pixels (HDPI)</li>
    <li>216x216 pixels (XHDPI)</li>
    <li>324x324 pixels (XXHDPI)</li>
    <li>432x432 pixels (XXXHDPI)</li>
  </ul>
  <p>Vous pouvez fournir chaque image d'arrière-plan et de premier plan individuellement, ou choisir de générer les icônes à partir d'un fichier. Cela signifie que <span class="notranslate">GameMaker Studio 2</span> générera les images d'icône requises à partir d'un fichier de base (XXXHDPI). Vous devez fournir une image pour chacun des éléments suivants
    Vous devez fournir une image pour l'avant-plan et une autre pour l'arrière-plan, puis cliquer sur le bouton "Générer" pour que les icônes soient créées. Les images doivent toutes être au format <span class="inline">*.png</span>.</p>
  <p>Il est important de comprendre que vos icônes adaptatives peuvent être masquées sur un appareil donné. Vous avez donc également la possibilité de voir comment elles se présenteront avec ces masques dans le <strong>menu</strong> Aperçu des <strong>icônes adaptatives :</strong> </p>
  <p><img alt="Android Adaptive Mask Preview" class="center" src="../../assets/Images/Settings/Android_AdaptiveIcons_Masks.gif">Notez qu'il s'agit simplement d'un aperçu de l'apparence <em>de </em>l'icône avec le masque sélectionné.
    la façon dont les icônes sont exportées et affichées, car cela dépend de l'appareil et du système d'exploitation sur lesquels le jeu sera exécuté. Notez également que ces icônes <strong>ne</strong> sont <strong>pas</strong> créées pour vous dans le cadre de la génération d'images réalisée à l'aide de l'outil <a href="../../IDE_Tools/Project_Image_Generator.htm">Project Image Generator</a>.</p>
  <p> </p>
  <h2>Graphiques</h2>
  <p><img alt="Android Graphics Options" class="center" src="../../assets/Images/Settings/Android_Graphics_Options.png">Ici, vous pouvez modifier les détails suivants relatifs à la façon dont votre jeu sera affiché, les options suivantes étant disponibles :</p>
  <ul class="colour">
    <li><strong>Interpoler les couleurs entre les pixels</strong>: Active l'<a class="glossterm" data-glossterm="interpolation linéaire" href="Ubuntu.htm#">interpolation linéaire</a>, qui a pour effet de &quot;lisser&quot; les pixels. Pour des graphiques de pixels nets, cette option doit être désactivée.
      désactivé, mais si vous avez de beaux mélanges alpha et des graphiques aux bords lissés, il est préférable de l'activer. Cette option est activée par défaut.</li>
    <li><strong>Profondeur de couleur de l'écran</strong>: Cette option peut être utilisée pour définir la profondeur de couleur pour le rendu à 16 ou 24 bits. Cela affectera la compatibilité avec certains appareils plus anciens s'il est réglé sur 24 bits, et augmentera également l'<em>ashmem </em>qui est nécessaire (c'est la mémoire partagée sur les appareils AmazonFire).
      est nécessaire (il s'agit de la mémoire partagée sur les appareils <span class="notranslate">AmazonFire</span>).</li>
    <li><strong>Prise en charge des périphériques</strong>: Cette option permet de déterminer s'il faut prendre en charge uniquement les appareils dotés d'un GPU dédié, ou tous les appareils. En fait, si votre jeu comporte des fonctions de dessin avancées, comme le mélange alpha, le mélange additif, les surfaces, etc.
      vous devriez le limiter aux appareils dotés d'un GPU, sinon vous risquez de recevoir des commentaires négatifs et une mauvaise évaluation de votre jeu en raison d'erreurs graphiques ou de plantages sur des appareils plus anciens.</li>
    <li><strong>Mise à l'échelle</strong>: Vous pouvez choisir ici de mettre à l'échelle le canevas de dessin en conservant le rapport hauteur/largeur de l'écran de l'appareil - en ajoutant un &quot;rembourrage&quot; autour des bords pour s'adapter à l'écran - ou vous pouvez choisir d'étirer le canevas de dessin pour l'adapter à l'écran de l'appareil.
      l'écran de l'appareil.</li>
  </ul>
  <p>Enfin, il est possible de définir la taille de la <a class="glossterm" data-glossterm="page de texture" href="macOS.htm#">page de texture</a>. La taille par défaut (et la plus compatible) est de 2048x2048, mais vous pouvez choisir entre 256x256 et 8192x8192. Le site
    est également un bouton marqué <strong>Preview </strong>qui génère les pages de texture pour cette plate-forme et ouvre ensuite une fenêtre pour que vous puissiez voir à quoi elles ressemblent. Cela peut s'avérer très utile si vous souhaitez voir comment les pages de texture sont structurées et
    éviter d'avoir des pages de texture plus grandes (ou plus petites) que nécessaire. Pour plus d'informations sur les pages de texture, veuillez <a href="../Texture_Information/Texture_Pages.htm">cliquer ici</a>.</p>
  <p class="note"><strong>NOTE</strong>: Sachez que plus la taille de la page de texture est grande, moins votre jeu sera compatible avec les différents navigateurs et appareils.</p>
  <p> </p>
  <h2>Icônes</h2>
  <p><img alt="Android Icons Options" class="center" src="../../assets/Images/Settings/Android_Icons_Options.png">Cette section vous permet d'ajouter les diverses images d'<strong>icônes </strong>dont votre projet aura besoin pour les différentes pages de la boutique et les différents appareils.
    Toutes les images d'icônes doivent être créées sous la forme de fichiers 24 bits <span class="inline">*.png</span> de la taille appropriée indiquée.</p>
  <p>Il convient de noter que <span class="notranslate">GameMaker Studio 2</span> dispose d'un outil <a href="../../IDE_Tools/Project_Image_Generator.htm">Project Image Generator</a> qui peut être utilisé pour créer automatiquement toutes les images requises pour les différentes plates-formes cibles sur lesquelles votre jeu est compilé.
    est compilé. Si vous utilisez cet outil, vous devez réviser les images créées pour vous assurer qu'elles correspondent à vos besoins. L'outil génère aussi bien des icônes que des images (voir la section ci-dessous).</p>
  <p> </p>
  <h2>Images</h2>
  <p><img alt="Android Images Options" class="center" src="../../assets/Images/Settings/Android_Images_Options.png">Vous pouvez définir ici la <strong>couleur de la bordure</strong> qui sera utilisée comme arrière-plan pour les écrans d'accueil qui ne sont pas configurés pour remplir le
    plein écran. Vous pouvez également ajouter des <strong>écrans d'accueil</strong> à votre fichier de jeu final, pour les modes <em>paysage </em>et <em>portrait </em>, qui s'afficheront pendant le chargement du jeu sur l'appareil. Cet écran doit être un fichier 24bit <span class="inline">*.png</span>,
    et il est recommandé qu'il ait la même taille que la première pièce (ou vue) de votre jeu. Si vous souhaitez que l'écran d'accueil soit affiché pendant une durée spécifique, vous pouvez également le définir ici entre 0 et 10 secondes (la durée par défaut de 0 signifie qu'il ne s'affichera que pendant la durée du chargement de la ressource).
    pendant la durée du chargement de la ressource). Vous pouvez également définir le mode d'affichage de l'écran de démarrage à partir des options suivantes :</p>
  <ul class="colour">
    <li><strong>Conserver le rapport d'aspect</strong>: Cette option permet de conserver le rapport d'aspect de l'image par rapport à l'écran de l'appareil, en ajoutant un &quot;rembourrage&quot; autour des bords si nécessaire.</li>
    <li><strong>Recadrer pour adapter</strong>: Cette option permet de conserver l'image à l'échelle de l'écran de l'appareil et de recadrer (ou de rembourrer) les bords si nécessaire.</li>
    <li><strong>Étirer</strong>: Cette option permet d'étirer l'image pour qu'elle remplisse l'écran de l'appareil (et peut déformer l'image affichée).</li>
  </ul>
  <p>Enfin, vous pouvez définir l'<strong>image de la bannière</strong> du jeu sur les appareils <span class="notranslate">Android</span> TV, qui est également un 24bit <span class="inline">*.png</span>.</p>
  <p> </p>
  <h2>Emballage</h2>
  <p><img alt="Android Packaging Options" class="center" src="../../assets/Images/Settings/Android_Packaging_Options.png" /></p>
  <p>L'une des caractéristiques de l'utilisation de Google Play pour vos jeux <span class="notranslate">Android</span> est la possibilité d'<strong>accorder une licence à </strong>vos jeux. Cela signifie que vos jeux seront contrôlés par Google de sorte que seules les personnes qui les ont téléchargés sur leur marché pourront y jouer.
    jouer au jeu, évitant ainsi que des copies illégales de votre produit ne soient distribuées.</p>
  <p>Pour activer cette fonction dans votre jeu, vous devez copier votre <strong>clé publique</strong> dans la case intitulée <strong>Clé publique de licence Google</strong>. Vous pouvez trouver cette licence en vous rendant sur votre <a href="https://play.google.com/apps/publish">page de développeurs Google Play</a>, puis en sélectionnant le jeu que vous souhaitez modifier. Une fois sur la page du profil du jeu, faites défiler la page jusqu'à la section intitulée &quot;<em>Services et API&quot;.</em> Vous y trouverez la clé publique nécessaire à l'activation de cette fonctionnalité.</p>
  <p>Une fois activé, si une personne qui n'est pas autorisée à posséder votre jeu tente d'y jouer, elle verra apparaître une boîte de message contextuel qui l'informera que la licence est introuvable sur son appareil, puis lui donnera la possibilité de réessayer et de refaire un test,
    ou de quitter le jeu.</p>
  <p>Une autre caractéristique de la licence est que votre jeu peut utiliser des <strong>extensions APK</strong>. Il s'agit d'un moyen de contourner la taille maximale des applications de 50 Mo imposée par Google Play (et uniquement Google Play). Il créera votre jeu en deux parties : un petit fichier <span class="inline">*.apk</span> et un plus grand fichier <span class="inline">*.zip</span> qui contiendra tous les actifs de votre jeu, tous deux étant téléchargés sur le magasin. Lorsque l'utilisateur lance votre jeu pour la première fois, le fichier zip est téléchargé et décompressé. Vous pouvez trouver plus de détails sur cette
    option <a href="https://help.yoyogames.com/hc/en-us/articles/115002418632-Android-Using-APK-Expansions-With-Google-Play">ici</a>.</p>
  <p>Vous pouvez également utiliser Google Dynamic Asset Delivery pour créer des paquets d'applications d'une taille allant jusqu'à 1 Go en utilisant l'option d'exportation <tt>*.aab</tt>. Cela permet de regrouper toutes les ressources du jeu en tant que ressources d'installation qui sont installées en même temps que l'application elle-même. Vous pouvez
    plus de détails sur cette fonctionnalité <a href="https://developer.android.com/guide/playcore/asset-delivery" title="Asset Delivery">ici</a>.</p>
  <p>Enfin, vous avez la possibilité de préparer le package final de l'application comme un jeu <strong><span class="notranslate">Android</span></strong> TV (vous ne devez cocher cette case que si votre jeu est conforme aux <a href="https://developer.android.com/training/tv/games/">directives<span class="notranslate">Android</span></a> TV).</p>
  <p> </p>
  <h2>Permissions</h2>
  <p><img alt="Android Permission Options" class="center" src="../../assets/Images/Settings/Android_Permissions_Options.png">Dans cet onglet, vous pouvez modifier certaines des autorisations que votre jeu peut demander dans le manifeste <span class="notranslate">Android</span>. <span class="notranslate">GameMaker Studio 2</span>
    attribuera automatiquement les autorisations requises en fonction des fonctions utilisées par le jeu. Toutefois, il se peut que vous ayez besoin d'une autorisation pour votre jeu qui n'a pas été correctement attribuée (par exemple, lorsque vous utilisez des extensions personnalisées).
    cochez la case de l'autorisation requise.</p>
  <p>La liste ci-dessous présente les autorisations disponibles :</p>
  <ul class="colour">
    <li><span class="inline">WRITE_EXTERNAL_STORAGE</span>: Permet à votre jeu d'écrire sur le stockage externe.</li>
    <li><span class="inline">READ_PHONE_STATE</span>: Autorise l'accès en lecture seule à l'état du téléphone.</li>
    <li><span class="inline">ACCESS_NETWORK_STATE</span>: Permet à votre jeu d'accéder à des informations sur les réseaux.</li>
    <li><span class="inline">INTERNET</span>: Permet à votre jeu d'ouvrir des sockets réseau.</li>
    <li><span class="inline">BLUETOOTH</span>: Permet à votre jeu de se connecter à des appareils Bluetooth jumelés.</li>
    <li><span class="inline">RECORD_AUDIO</span>: Permet à votre jeu d'enregistrer l'entrée audio du microphone.</li>
  </ul>
  <p class="note"><strong>REMARQUE</strong>: si vous n'êtes pas sûr d'avoir besoin de ces éléments, vous devriez probablement les laisser décochés par défaut et laisser <span class="notranslate">GameMaker Studio 2</span> s'occuper des autorisations pour votre jeu.</p>
  <p>La section Permissions <span class="notranslate">Android</span> comporte également une zone où vous pouvez injecter des permissions dans les <strong>balises de l'application<span class="notranslate">Android</span></strong> dans le manifest.xml de <span class="inline"><span class="notranslate">Android</span>. Vous pouvez trouver une liste complète des balises disponibles dans la documentation <span class="notranslate">Android</span> 
    ici :</p>
  <ul class="colour">
    <li><a href="https://developer.android.com/guide/topics/manifest/application-element">Développeur<span class="notranslate">Android</span>: Tags d'application</a></li>
  </ul>
  <p>Il convient de noter que pour les API cibles 28 et supérieures, vous ne serez plus autorisé à utiliser des appels Web externes à l'aide de &quot;<span class="inline">http</span>&quot; - &quot;<span class="inline">https</span>&quot; est requis à la place - sauf si vous ajoutez
    la balise suivante :</p>
  <p class="code">android:usesCl</p>
  <p> </p>
  <h2>Social</h2>
  <p><img class="center" src="../../assets/Images/Settings/Android_Social_Options.png">Cette section permet d'activer différentes fonctions <strong>sociales </strong>dans votre jeu <span class="notranslate">Android</span>. Les options suivantes peuvent être choisies :</p>
  <ul class="colour">
    <li><strong>Facebook</strong>: Si vous avez besoin des fonctions de Facebook, vous devez cocher cette case, puis fournir l'<strong>ID</strong> et le <strong>nom de l'</strong> <strong>application Facebook</strong>. Notez que toutes les fonctionnalités de Facebook sont accessibles via une extension
      et lorsque vous cochez la case Utiliser Facebook pour la première fois, vous serez invité à télécharger et à installer l'extension Facebook à partir du site Web de l'entreprise. <a href="../../Introduction/The_Marketplace.htm"><span class="notranslate">Place de marché</span></a>.</li>
    <li><strong>Google </strong>- <strong>Activer la sauvegarde dans le nuage</strong>: Si vous cochez cette case, Google Cloud Saving sera activé et vous serez invité à télécharger et à installer l'extension correspondante à partir du site Web de Google. <a href="../../Introduction/The_Marketplace.htm"><span class="notranslate">Marketplace</span></a>.
      Voir la section sur le Cloud Saving de la page <a href="../../GameMaker_Language/GML_Reference/Asynchronous_Functions/Asynchronous_Functions.htm">Fonctions asynchrones</a>.</li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="../Game_Options.htm">Options de jeu</a></div>
        <div style="float:right">Suivant : <a href="iOS.htm"><span class="notranslate">iOS</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
<span class="notranslate">Android</span> Game Options
-->
  <!-- TAGS
android_options
-->

</body></html>