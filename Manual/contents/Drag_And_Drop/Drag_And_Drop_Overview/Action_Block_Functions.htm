<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Fonctions du script du bloc d'action</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Article explaining how to make action block script functions" />
  <meta name="rh-index-keywords" content="DnD™ Overview - Action Block Script Functions" />
  <meta name="search-keywords" content="DnD,Code DnD,DnD Scripts,Drag and Drop Scripts" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Fonctions du script du bloc d'action</h1>
  <p>L'un des actifs les plus importants du <a href="../../Introduction/The_Asset_Browser.htm">navigateur d'actifs</a> est l'actif <a href="../../The_Asset_Editors/Scripts.htm">script</a>. Les scripts sont des ressources spéciales dans la mesure où ils sont essentiellement des &quot;conteneurs&quot; pour des fonctions définies par l'utilisateur.
    pour les fonctions définies par l'utilisateur et ne sont pas eux-mêmes appelés directement par vous dans vos jeux. Tous les scripts ont une portée <strong>globale</strong> et seront exécutés automatiquement par <span class="notranslate">GameMaker</span> au démarrage de votre jeu.
    Vous pouvez donc les utiliser pour définir les variables et fonctions globales que vous souhaitez utiliser dans votre jeu.</p>
  <p>Chaque script <span class="notranslate">DnD™</span>peut se voir ajouter une ou plusieurs fonctions définies par l'utilisateur, et ces fonctions sont créées à l'aide de l'action <a href="../Drag_And_Drop_Reference/Common/Declare_A_New_Function.htm">Déclarer une nouvelle fonction</a>:</p>
  <p><img alt="Declare A New Function Syntax" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Common_Declare_Function.png">Les fonctions que vous définissez ici auront une portée globale et agiront à peu près comme n'importe quelle action <span class="notranslate">DnD™</span>intégrée.
    action, c'est-à-dire qu'elles peuvent prendre différentes valeurs - ou aucune - appelées<span class="glossextra">arguments</span> (ou paramètres), puis effectuer une tâche, en renvoyant une valeur ou en ne renvoyant rien
    selon les besoins. Vous appelleriez ensuite la fonction dans vos jeux en utilisant l'action <a href="../Drag_And_Drop_Reference/Common/Function_Call.htm">Function Call</a> <img alt="Function Call Icon" class="icon" height="24" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/i_Execute_Function.png" width="24">, qui ressemble à ceci :</p>
  <p><img alt="Function Call Syntax" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Common_Execute_Function.png">Pour créer un script <span class="notranslate">DnD™</span>, il suffit d'utiliser le bouton droit de la souris <img alt="RMB Icon" class="icon" height="24" src="../../assets/Images/Icons/Icon_RMB.png" width="21"> n'importe où dans le navigateur d'actifs et de sélectionner <strong>Créer </strong>puis <strong>Script</strong>. Cela va créer un nouveau script <span class="notranslate">DnD™</span>et ouvrir la fenêtre de l'éditeur :</p>
  <p><img alt="D&amp;D Script editor" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Scripts.png">Vous pouvez nommer le script en cliquant avec le bouton droit de la souris sur <img alt="RMB Icon" class="icon" height="24" src="../../assets/Images/Icons/Icon_RMB.png" width="21"> dans le navigateur d'actifs et en sélectionnant <strong>Renommer ( </strong>ou en utilisant un double clic gauche lent <img alt="LMB Icon" class="icon" height="24" src="../../assets/Images/Icons/Icon_LMB.png" width="21">), mais notez que le nom du script doit être conforme aux règles générales des actifs.
    doit être conforme aux règles générales applicables aux ressources, c'est-à-dire qu'il doit commencer par une lettre et contenir uniquement des lettres, des chiffres ou le symbole &quot;_&quot; sous la barre. Votre script sera également pré-rempli avec une action <strong>Déclarer une nouvelle fonction</strong>,
    Vous pouvez ajouter d'autres déclarations de fonctions si nécessaire (un seul script peut contenir plusieurs fonctions, ce qui est utile pour regrouper des fonctions ayant une utilisation similaire ou connexe).</p>
  <p>Comme mentionné ci-dessus, vous pouvez passer un certain nombre d'arguments à une fonction, et elle les utilisera pour effectuer la tâche pour laquelle vous l'avez écrite. Pour mieux comprendre, prenez, par exemple, n'importe quelle action intégrée et réfléchissez à son fonctionnement... vous la placez dans un événement et fournissez un certain nombre de valeurs.
    vous la placez dans un événement et fournissez un certain nombre de valeurs et elle fera faire quelque chose à votre instance. Les fonctions définies par l'utilisateur sont exactement les mêmes, la seule différence étant que <em>vous </em>les écrivez.</p>
  <p>Lorsque vous définissez une nouvelle fonction, vous lui donnez un nom et vous définissez également le nom des arguments qu'elle prend, si elle en prend (les fonctions peuvent ne pas prendre d'arguments ou en prendre plusieurs, selon ce que vous voulez). Si vous donnez des noms d'arguments, ceux-ci seront alors
    utilisés dans les actions appelées par la fonction en tant que <strong>variables locales </strong>contenant les valeurs d'entrée de la fonction.</p>
  <p>Une bonne pratique consiste également à ajouter un commentaire pour l'action qui explique ce qu'elle fait, en suivant les <a href="../../The_Asset_Editors/Code_Editor_Properties/JSDoc_Script_Comments.htm">règles de JS Doc</a>. Par exemple, considérons cette fonction <span class="inline">set_vec()</span>:</p>
  <p><img alt="D&amp;D Function Example With Comments" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_FunctionExample.png">Pour appeler le script ci-dessus, il suffit d'utiliser l'action <strong>Call Function</strong>,
    comme ceci :</p>
  <p><img alt="Call A Function From A Script" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Declare_Function_2.png">Non seulement vous pouvez passer des arguments dans une fonction, mais vous pouvez également demander à une fonction de retourner une valeur (en utilisant l'action Return).
    valeur (en utilisant l'action <a href="../Drag_And_Drop_Reference/Common/Return.htm">Return</a> <img alt="Return Action Icon" class="icon" height="24" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/i_Return.png" width="24"> ).
    Ainsi, vous pouvez les utiliser pour (par exemple) construire des méthodes de calcul ou renvoyer un ID d'instance après une détection de collision complexe ou tout autre chose. Notez cependant que l'utilisation de return <strong>met fin à la fonction</strong>, et qu'aucune action placée après l'utilisation de return ne sera exécutée.
    ne sera exécutée, ce qui signifie qu'une certaine réflexion doit être menée sur la façon dont vos fonctions sont structurées.</p>
  <p>Vous trouverez ci-dessous une fonction de <span class="notranslate">glisser-déposer</span> qui renvoie une valeur :</p>
  <p><img alt="D&amp;D Script Return Example" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Script_Example_Return.png" /></p>
  <p>La fonction ci-dessus vérifie simplement toutes les instances d'une pièce pour voir quel est leur <span class="inline">object_index</span> et si l'une d'entre elles est l'objet du joueur, la fonction renverra <span class="inline">true</span> (mettant fin à l'appel de la fonction) ou
    <span class="inline">false</span> . Vous appelleriez cette fonction comme ceci :</p>
  <p><img alt="Call D&amp;D Script With Return Value" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Script_Call_Return.png">Donc, nous appelons la fonction et lui faisons créer une variable temporaire (locale) pour stocker la valeur retournée (qui dans ce cas est soit soit ).
    (qui, dans ce cas, est soit <span class="inline">true</span> soit <span class="inline">false</span>), puis cette variable est vérifiée et une action est entreprise.</p>
  <p>Lorsque vous créez des fonctions pour vos scripts <span class="notranslate">DnD™</span>, vous pouvez utiliser toutes les mêmes actions que lorsque vous ajoutez des actions dans un événement d'objet, et vous pouvez même appeler des fonctions à partir de fonctions, et de cette façon créer un code d'action plus &quot;modulaire&quot;. En construisant
    scripts avec des fonctions de cette manière peut vous faire gagner beaucoup de temps en créant les mêmes séquences d'action et peut également contribuer à rendre vos séquences d'action plus faciles à lire et à déboguer.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="../../Content.htm">Index</a></div>
        <div style="float:right">Suivant : <a href="Changing_DnD_To_Code.htm">Changer <span class="notranslate">DnD™</span>en code</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
<span class="notranslate">Drag And Drop</span> Scripts
<span class="notranslate">DnD</span> Scripts
-->
  <!-- TAGS
drag_and_drop_scripts
-->

</body></html>