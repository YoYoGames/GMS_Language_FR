<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Fonctions de script de bloc d&#39;action</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Article expliquant comment créer des fonctions de script de bloc d&#39;action" />
  <meta name="rh-index-keywords" content="DnD de DnD ™ - Fonctions de script de bloc d&#39;action" />
  <meta name="search-keywords" content="DnD,Code DnD,Scripts DnD,Drag and Drop scripts" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> Fonctions de script de bloc d&#39;action</h1><p> L&#39;un des actifs les plus importants du <a href="../../Introduction/The_Asset_Browser.htm">navigateur d&#39;actifs</a> est l&#39;actif <a href="../../The_Asset_Editors/Scripts.htm">Script.</a> Les scripts sont des actifs spéciaux en ce sens qu&#39;ils sont essentiellement des &quot;conteneurs&quot; pour des fonctions définies par l&#39;utilisateur et ne sont pas eux-mêmes appelés directement par vous dans vos jeux. Tous les scripts ont <strong>une</strong> portée globale et seront exécutés automatiquement par <span class="notranslate">GameMaker</span> démarrage de votre jeu, vous pouvez donc les utiliser pour définir les variables globales et les fonctions que vous souhaitez utiliser tout au long de votre jeu.</p><p> Chaque <span class="notranslate">DnD</span>™ peut avoir une ou plusieurs fonctions définies par l&#39;utilisateur, et ces fonctions sont créées à l&#39;aide de l&#39;action <a href="../Drag_And_Drop_Reference/Common/Declare_A_New_Function.htm">Déclarer une nouvelle fonction</a>:</p><p><img alt="Declare A New Function Syntax" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Common_Declare_Function.png" /> Les fonctions que vous définissez ici auront une portée globale et agiront comme n&#39;importe quelle <span class="notranslate">DnD</span>™ intégrée, c&#39;est-à-dire: elles peuvent prendre des valeurs différentes - ou aucune - appelées <a class="glossterm" data-glossterm="argument" href="#">argument</a> <span class="glossextra">s</span> (ou paramètres), puis effectuer une tâche, en retournant une valeur ou ne renvoyant rien comme requis. Vous appelleriez alors la fonction dans vos jeux en utilisant l&#39; <a href="../Drag_And_Drop_Reference/Common/Function_Call.htm">appel de fonction</a><img alt="Function Call Icon" class="icon" height="24" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/i_Execute_Function.png"
      width="24" /> action, qui ressemble à ceci:</p><p><img alt="Function Call Syntax" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Common_Execute_Function.png" /> Pour créer un <span class="notranslate">DnD</span>™, il vous suffit d&#39;utiliser le bouton droit de la souris<img alt="RMB Icon" class="icon" height="24"
      src="../../assets/Images/Icons/Icon_RMB.png" width="21" /> n&#39;importe où dans le navigateur de ressources et sélectionnez <strong>Créer</strong> puis <strong>Script</strong>. Cela créera un nouveau <span class="notranslate">DnD</span>™ et ouvrira la fenêtre de l&#39;éditeur:</p><p><img alt="D&amp;D Script editor" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Scripts.png" /> Vous pouvez nommer le script en cliquant avec le bouton droit de la souris<img alt="RMB Icon" class="icon" height="24" src="../../assets/Images/Icons/Icon_RMB.png"
      width="21" /> dessus dans le navigateur de ressources et en sélectionnant <strong>Renommer</strong> (ou en utilisant un double clic gauche lent<img alt="LMB Icon" class="icon" height="24" src="../../assets/Images/Icons/Icon_LMB.png" width="21" /> ), mais notez que le nom du script doit être conforme aux règles générales des actifs, ils doivent donc commencer par une lettre et ne contenir que des lettres, des chiffres ou le symbole sous-barre &quot;_&quot;. Votre script sera également pré- <strong>rempli avec une action Déclarer une nouvelle fonction</strong>, prête à être remplie, et vous pouvez ajouter plus de déclarations de fonction si nécessaire (un seul script peut contenir plusieurs fonctions, ce qui est utile pour regrouper des fonctions avec des ou utilisation connectée ensemble).</p><p> Comme mentionné ci-dessus, vous pouvez passer un certain nombre d&#39;arguments à une fonction, et elle les utilisera pour exécuter la tâche pour laquelle vous l&#39;avez écrite. Pour mieux comprendre cela, prenez - par exemple - l&#39;une des actions intégrées et réfléchissez à son fonctionnement... vous la placez dans un événement et fournissez un certain nombre de valeurs et votre instance fera quelque chose. Les fonctions définies par l&#39;utilisateur sont exactement les mêmes, la seule différence étant que <em>vous les</em> écrivez.</p><p> Lors de la définition d&#39;une nouvelle fonction, vous lui donnez un nom et définissez également le nom de tous les arguments qu&#39;elle prend, si elle en prend (les fonctions ne peuvent accepter aucun argument ou plusieurs arguments selon ce dont vous avez besoin). Si vous donnez des noms d&#39;argument, ceux-ci seront utilisés dans les actions que la fonction appelle en tant que <strong>variables locales</strong> contenant les valeurs d&#39;entrée de la fonction.</p><p> Il est également recommandé d&#39;ajouter un commentaire pour l&#39;action qui explique ce qu&#39;elle fait, en suivant les <a href="../../The_Asset_Editors/Code_Editor_Properties/JSDoc_Script_Comments.htm">règles JS Doc</a>. Par exemple, considérez cette fonction <span class="inline">set_vec()</span>:</p><p><img alt="D&amp;D Function Example With Comments" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_FunctionExample.png" /> Pour appeler le script ci-dessus, utilisez simplement l&#39; <strong>action Appeler une fonction</strong>, comme ceci:</p><p><img alt="Call A Function From A Script" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Declare_Function_2.png" /> Non seulement vous pouvez passer des arguments dans une fonction, mais vous pouvez également demander à une fonction de renvoyer une valeur également (en utilisant le <a href="../Drag_And_Drop_Reference/Common/Return.htm">paramètre Return</a><img alt="Return Action Icon" class="icon" height="24" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/i_Return.png" width="24" /> action), vous pouvez donc les utiliser pour (par exemple) créer des méthodes de calcul ou rendre un ID d&#39;instance après une détection de collision complexe ou un certain nombre de choses. Veuillez noter, cependant, que l&#39;utilisation de return <strong>met fin à la fonction</strong>, et donc aucune action placée après son utilisation ne sera exécutée, ce qui signifie qu&#39;une certaine réflexion doit être menée sur la manière dont vos fonctions sont structurées.</p><p> Vous trouverez ci-dessous une fonction de <span class="notranslate">Drag and Drop</span> qui renvoie une valeur:</p><p><img alt="D&amp;D Script Return Example" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Script_Example_Return.png" /></p><p> La fonction ci-dessus vérifie simplement toutes les instances d&#39;une pièce pour voir ce que leur <span class="inline">object_index</span> est et si l&#39;un d&#39;entre eux est l&#39;objet joueur, la fonction retournera <span class="inline">true</span> (fin de l&#39;appel de fonction) ou <span class="inline">false</span>. Vous appelleriez cette fonction comme ceci:</p><p><img alt="Call D&amp;D Script With Return Value" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Script_Call_Return.png" /> Donc, nous appelons la fonction et lui faisons créer une variable temporaire (locale) pour stocker la valeur retournée (qui dans ce cas est soit <span class="inline">true</span> ou <span class="inline">false</span> ), puis cette variable est vérifiée et une action est effectuée.</p><p> <span class="notranslate">DnD</span> fonctions pour vos scripts DnD™, vous pouvez utiliser toutes les mêmes actions que vous le feriez lors de l&#39;ajout d&#39;actions dans un événement d&#39;objet, et vous pouvez même appeler des fonctions à partir de fonctions, et ainsi créer un code d&#39;action plus «modulaire». Construire des scripts avec des fonctions de cette manière peut vous faire gagner beaucoup de temps en créant les mêmes séquences d&#39;action et peut également aider à rendre vos séquences d&#39;action plus faciles à lire et à déboguer. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="../../Content.htm">Index</a></div><div style="float:right"> Suivant: <a href="Changing_DnD_To_Code.htm">Modification du <span class="notranslate">DnD</span>™ en</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Drag And Drop Scripts
DnD Scripts
-->
  <!-- TAGS
drag_and_drop_scripts
-->
</body>
</html>