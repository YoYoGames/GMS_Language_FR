<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Événements de tirage au sort</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the draw event." />
  <meta name="rh-index-keywords" content="Objects - Draw Events" />
  <meta name="search-keywords" content="draw event,draw begin,draw end,pre-draw,post draw,draw GUI,draw order" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Les événements du tirage au sort</h1>
  <p><img alt="The Draw Event" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Draw.png">La catégorie des événements de dessin est celle qui regroupe tous les événements qui régissent ce que vous voyez à l'écran lorsque vous exécutez votre jeu. Elle est divisée en plusieurs
    événements distincts afin de mieux gérer les différentes exigences de dessin de votre jeu, et l'image ci-dessous illustre l'ordre dans lequel chaque événement est exécuté :</p>
  <p><img alt="Object Editor Draw Diagram" class="center" src="../../assets/Images/Asset_Editors/Editor_Events_DrawOrder.png">L'événement normal Draw se divise en trois sous-types : l'événement <strong>Draw Begin</strong>, l'<strong>événement Draw</strong> standard et l'événement Draw End.
   <strong>Draw End</strong>. En général, vous n'aurez besoin d'utiliser que l'événement Draw standard et vous devez savoir que toutes les instances d'une room verront cet événement déclenché à chaque étape du jeu.
    que l'instance a le drapeau <strong>visible </strong>à true. Il est important de comprendre que même si vous n'avez rien défini pour ce sous-événement dans les propriétés de l'objet (c'est-à-dire aucun code ni aucune action), <em>si l'objet a un sprite assigné, il aura toujours un événement de dessin qui sera déclenché</em>.
    Cela est dû au fait que <span class="notranslate">GameMaker Studio 2</span> dispose de deux façons de dessiner des objets dans l'événement Draw :</p>
  <ul class="colour">
    <li>le <strong>dessin par défaut</strong>, c'est-à-dire lorsque vous définissez le sprite dans les propriétés de l'objet et ne placez aucune action ou code dans l'événement normal Draw. Dans ce cas, <span class="notranslate">GameMaker Studio 2</span> dessinera automatiquement le sprite attribué. Notez que toutes les transformations
      que vous effectuez dans d'autres événements pour modifier l'échelle de l'image, l'index, le mélange, etc... seront également prises en compte tant que l'événement Draw est vide.</li>
    <li>le <strong>dessin personnalisé</strong>, qui consiste à placer du code ou des actions dans l'événement draw. Cela revient à dire à <span class="notranslate">GameMaker Studio 2</span> &quot;Je <em>veux contrôler ce que vous dessinez pour les instances de cet objet&quot; et</em> cela remplace complètement le dessin par défaut.
      par défaut. Cela signifie que, par exemple, vous pouvez avoir un objet auquel est attribué un sprite, puis définir l'événement draw pour dessiner du texte et le texte sera dessiné à l'écran, mais le sprite <em>ne sera pas </em>dessiné car vous n'avez pas demandé à <span class="notranslate">GameMaker Studio 2</span> de le dessiner avec le texte.
      de le dessiner en même temps que le texte.</li>
  </ul>
  <p>Les autres événements du tirage au sort sont expliqués dans les sections ci-dessous :</p>
  <p> </p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Début du dessin et fin du dessin</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">Outre l'événement principal Draw, vous disposez également d'un événement <strong> Draw Begin</strong> et d'un événement <strong>Draw End</strong>. Ceux-ci agissent exactement de la même manière qu'un événement Draw standard (c'est-à-dire qu'ils dessinent tout ce que vous leur attribuez à chaque étape du jeu et pour toutes les fenêtres).
      toutes les fenêtres), mais ils ne dessinent rien par défaut s'ils n'ont pas été explicitement ajoutés à un objet, et ils seront toujours exécutés avant/après l'événement Draw standard. Ainsi, lorsque le jeu est en cours d'exécution, vous aurez <em>toujours</em> l'événement
      Draw Begin pour toutes les instances, puis l'événement Draw pour toutes les instances, et enfin l'événement Draw End pour toutes les instances.</p>
    <p class="dropspot">De cette façon, vous pouvez dessiner des choses ou définir des propriétés de dessin dans l'étape Draw Begin d'une instance et être sûr que toutes les instances avec un événement Draw standard ou un événement Draw End utiliseront ces propriétés ou dessineront par-dessus ce que la première instance a dessiné. En gros,
      c'est un moyen sûr de garantir que certaines choses seront dessinées à certains moments, tout comme le font les événements <strong>Begin Step</strong> et <strong>End Step </strong>.</p>
    <p class="dropspot">Il y a quelques points à noter lorsque vous dessinez des objets dans <span class="notranslate">GameMaker Studio 2</span>, qu'il s'agisse d'un sprite, d'un shader <span class="notranslate">ou d'</span>un tampon 3D :</p>
    <ul class="colour">
      <li class="dropspot">L'événement draw est un événement très intensif, dans le sens où c'est l'un des événements qui prend le plus de temps et de ressources... à cette fin, ce n'est jamais une bonne idée de faire quoi que ce soit dans l'événement draw autre que dessiner. Gardez donc votre gros code ou vos actions complexes
        pour l'événement Step ou Alarmes ou tout autre événement approprié, mais laissez l'événement draw libre pour le dessin car c'est ce qu'il fait le mieux.</li>
      <li class="dropspot">Si le paramètre visible de votre objet est <em>désactivé </em>(afin que les instances de l'objet ne soient pas dessinées), <strong>tous les événements de dessin sont ignorés </strong>(à l'exception de l'événement <strong>Resize </strong>). Cela signifie que rendre une instance
        invisible empêchera tout code placé dans l'un de ces événements de s'exécuter. Par conséquent, ne placez pas de code essentiel dans les événements de dessin s'ils ne sont pas destinés à être visibles.</li>
      <li class="dropspot">Ce que vous dessinez n'a rien à voir avec le moteur de collision que vous choisissez (traditionnel ou physique) car il est défini par les propriétés de l'objet et le sprite (ou masque) qui lui a été attribué.</li>
    </ul>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">Dessiner l'interface graphique</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">Le type d'événement Draw GUI fait partie de la catégorie Draw Event et est spécifiquement conçu pour dessiner des éléments <a class="glossterm" data-glossterm="GUI" href="#">GUI</a> qui ne sont pas affectés par l'échelle ou la rotation de la caméra. Cela signifie que vous
      Cela signifie que vous pouvez demander à une instance de dessiner tous les éléments de votre <a class="glossterm" data-glossterm="HUD" href="#">HUD</a> ou de votre interface utilisateur sans avoir à baser le positionnement des éléments sur la position de l'instance dans la pièce ou sur la position de la vue caméra actuelle.
      de la vue actuelle de la caméra.</p>
    <p class="dropspot">Lorsque vous dessinez dans cet événement, il est important que vous compreniez que les coordonnées de dessin ne changent pas même lorsque les vues de la caméra sont actives et que (0,0) est <em>toujours </em>le coin supérieur gauche de la surface de l'application ou de l'affichage (voir la note au bas de cette section).
      au bas de cette section), et la largeur et la hauteur par défaut sont de 1:1 avec la surface de l'application. L'ordre de profondeur est toujours maintenu entre les différentes instances de différents calques (ainsi, une instance d'un calque supérieur sera dessinée sous une instance d'un calque inférieur).
      une instance d'une couche inférieure) et également dans les événements eux-mêmes, puisque l'événement <strong>Draw GUI Begin</strong> dessine d'abord toutes les instances, puis l'événement <strong>Draw GUI</strong> standard dessine toutes les autres instances, et enfin l'événement <strong>Draw Gui End </strong>
      est déclenché.</p>
    <p class="dropspot">De cette façon, vous pouvez dessiner des choses ou définir des propriétés de dessin dans Draw GUI Begin dans une instance et être sûr que toutes les instances avec un événement Draw GUI ou Draw GUI End standard utiliseront ces propriétés ou dessineront par-dessus ce que la première instance a dessiné. En gros,
      il s'agit d'un moyen sûr de garantir que certaines choses seront dessinées à certains moments, tout comme le font les événements <strong>Begin Step et</strong> End <strong>Step</strong>.</p>
    <p class="dropspot">Ces événements peuvent également être utilisés en conjonction avec les événements Draw normaux (qui seront affectés par la position, l'échelle et la rotation de la vue de la caméra comme d'habitude). Si vous n'avez pas d'événement Draw mais que vous avez un événement Draw GUI, alors <span class="notranslate">GameMaker Studio 2</span> dessinera toujours
      dessiner par défaut le sprite de l'instance (s'il en a un) comme d'habitude.</p>
    <p class="dropspot">En ce qui concerne les autres événements de dessin, les événements Draw GUI dessinent toujours par-dessus tout ce qui est dessiné dans les événements de dessin normaux. Ainsi, si vous avez une instance sur une couche inférieure avec un événement Draw GUI, elle sera dessinée par-dessus l'instance qui se trouve sur une couche supérieure
      avec un événement de dessin normal. Si les deux instances ont un événement Draw GUI, l'ordre des couches sera respecté.</p>
    <p class="note"><strong>REMARQUE</strong>: par défaut, cet événement sera dessiné à l'échelle 1:1 avec la taille de la surface de l'application, qui est normalement la taille de la pièce ou du port de vue. Cela signifie que lorsque vous avez activé la <strong>correction du rapport d'aspect</strong> dans les options du jeu
      l'interface graphique ne sera pas dessinée par-dessus les barres noires qui &quot;encadrent&quot; le jeu. Ce comportement peut être désactivé à l'aide de la fonction <a href="../../GameMaker_Language/GML_Reference/Cameras_And_Display/display_set_gui_maximise.htm"><span style="font-size:14px;"> <span class="inline" style="font-size: 14px">display_set_gui_maximise()</span></span></a> fonction,
      et vous pouvez également verrouiller l'événement GUI à une taille spécifique qui sera ensuite mise à l'échelle pour s'adapter aux dimensions de l'écran ou de la surface de l'application automatiquement en utilisant la fonction <a href="../../GameMaker_Language/GML_Reference/Cameras_And_Display/display_set_gui_size.htm"><span class="inline" style="font-size: 14px">display_set_gui_size()</span></a>.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Avant et après le tirage au sort</a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">Les événements Pre Draw et Post Draw font partie de la catégorie des événements Draw. Cependant, à la différence des autres événements Draw, ils dessinent <em>directement </em>dans la <a class="glossterm" data-glossterm="tampon d'affichage" href="#">mémoire tampon d'affichage</a>, qui aura la taille
      de l'espace écran combiné pour toutes les fenêtres d'affichage actuellement visibles, <em>ou </em>la taille de la fenêtre si vous n'utilisez qu'une seule fenêtre d'affichage ou aucune. L'image ci-dessous illustre cela :</p>
    <p class="dropspot"><img alt="Object Editor Post Draw" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_PostDraw.png">Donc, si vous utilisez les événements Pre ou Post draw, vous dessinez sur la cible de rendu plein écran (tampon d'affichage) qui aura la même taille que la fenêtre à laquelle toutes les fenêtres d'affichage s'adaptent.
      la même taille que la fenêtre à laquelle toutes les fenêtres d'affichage sont adaptées. Si vous n'avez pas de fenêtres d'affichage actives, la taille de la cible sera celle de la fenêtre elle-même.</p>
    <p class="dropspot">L'événement Pre Draw est déclenché avant tout autre événement de dessin, et dans cet événement, vous pouvez définir des valeurs, des propriétés de dessin et même dessiner des choses sans vous soucier des fenêtres d'affichage ou de la taille de la couche de l'interface graphique (la taille de la couche de l'interface graphique peut être la même que le tampon de l'écran, mais ce n'est pas forcément le cas puisque vous pouvez définir la résolution de l'interface graphique dans le code).
      mais il se peut qu'elle ne le soit pas puisque vous pouvez définir la résolution de l'interface graphique dans le code).</p>
    <p class="dropspot">Il convient de noter que cet événement se produit <em>avant que </em>le tampon d'affichage <em>ne </em>soit vidé pour le dessin normal, ce qui signifie que si vous ne désactivez pas la fonction d'effacement de l'affichage dans l'éditeur de salle, rien de ce qui est dessiné dans l'événement Pre Draw ne sera vu, car le premier dessin de la fenêtre d'affichage effacera le tampon.
      premier dessin de la fenêtre d'affichage l'effacera. Si vous voulez être en mesure de voir à travers les fenêtres d'affichage elles-mêmes, ou si vous n'utilisez pas de fenêtres d'affichage du tout, alors vous devez également définir la couleur d'arrière-plan pour avoir un alpha de 0 dans le fichier . <strong><a href="../Rooms.htm">Éditeur de pièces</a></strong>.</p>
    <p class="note"><strong>REMARQUE</strong>: si vous désactivez ces options, vous pourrez constater que des artefacts indésirables sont dessinés à l'écran lorsque le jeu est testé (comme les &quot;traînées&quot; des instances). Ceci est dû au fait que vous dessinez directement par-dessus l'image précédente du tampon d'affichage sans qu'elle soit effacée.
      précédente du tampon d'affichage sans qu'elle ait été effacée. Cependant, vous pouvez utiliser <span class="inline" style="font-size: 14px"><a href="../../GameMaker_Language/GML_Reference/Drawing/Colour_And_Alpha/draw_clear_alpha.htm">draw_clear_alpha()</a> </span>pour le faire
      vous-même.</p>
    <p class="dropspot">L'événement Post Draw est déclenché <em>après </em>tous les événements de dessin standard, mais <em>avant </em>les événements Draw GUI. Comme l'événement Pre Draw, il est basé sur la taille du tampon d'affichage et est placé avant les événements Draw GUI pour vous permettre de
      d'effectuer des effets de post-traitement et d'autres choses en plein écran, de manière simple et facile, sans interférer avec les éléments <a class="glossterm" data-glossterm="HUD" href="#">HUD/</a> <a class="glossterm" data-glossterm="GUI" href="#">GUI</a> que vous pouvez avoir dans votre jeu.
      que vous pouvez avoir dans votre jeu.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">Redimensionnement de la fenêtre</a></p>
  <div class="droptext" data-targetname="drop-down3">
    <p class="dropspot">Ce type d'événement fait partie de la catégorie Draw Event et, bien qu'il ne dessine rien, il réagit aux changements de la mémoire tampon d'affichage.
      lorsque la fenêtre de jeu est &quot;accrochée&quot;.</p>
    <p class="dropspot">Sur la plate-forme cible UWP, il est important que vous récupériez tout redimensionnement du tampon d'affichage à partir du &quot;snapping&quot; de la fenêtre de jeu (lorsque l'utilisateur fait glisser la fenêtre sur le côté de l'écran, par exemple). C'est ce que fait cet événement.
      est déclenché à chaque fois que la fenêtre est modifiée, ce qui vous permet d'ajouter ici du code personnalisé qui redimensionnera l'affichage ou repositionnera les éléments <a class="glossterm" data-glossterm="HUD" href="#">HUD</a> si nécessaire. Cette fonction est fournie comme un moyen pratique
      pratique pour éviter d'avoir un code d'événement échelonné qui vérifie ces choses tout le temps.</p>
    <p class="note"><strong>NOTE</strong>: Vous ne pouvez pas dessiner dans cet événement ! Il est déclenché par le redimensionnement de la fenêtre et ne sert qu'à capter ce changement... tout dessin qui doit être effectué doit l'être dans l'un des autres événements de dessin.</p>
    <p class="dropspot"> </p>
  </div>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Object_Events.htm">Événements relatifs aux objets</a></div>
        <div style="float:right">Suivant : <a href="Async_Events.htm">Événements asynchrones</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Draw Events
Pre Draw Event
Post Draw Event
Draw Begin Event
Draw End Events
Draw GUI Events
Draw GUI Begin Event
Draw GUI End Event
Pre Draw Event
Post Draw Event
Window Resize Event
-->
  <!-- TAGS
draw_events
-->

</body></html>