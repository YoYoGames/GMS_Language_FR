<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Objets</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how the object editor works" />
  <meta name="rh-index-keywords" content="Object Editor" />
  <meta name="search-keywords" content="objects,object editor" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>L'éditeur d'objets</h1>
  <p><img alt="The Object Editor" class="center" src="../assets/Images/Asset_Editors/Editor_Objects.png">Les objets sont les ressources que nous utilisons pour contrôler certains aspects d'un jeu et pour faire des choses spécifiques. La plupart du temps, un sprite leur est associé.
    afin que vous puissiez les voir dans les salles de jeu, mais parfois ils sont utilisés comme contrôleur &quot;en coulisse&quot; pour faire des choses liées à l'utilisateur ou pour le timing, etc... On peut leur donner des comportements et ils peuvent réagir à certains événements ainsi qu'entre eux.
    La plupart des choses que vous voyez dans un jeu sont basées sur les objets et leurs interactions. Nous disons &quot;basé sur&quot; parce que vous ne placez pas directement des objets dans les salles de jeu, mais plutôt des instances <strong>de ces</strong> objets qui sont en fait des copies (ou des clones si vous préférez) de la ressource objet. Il est très important de s'en souvenir car les instances et les objets <em>ne sont pas</em> la même chose et chacun a son propre ensemble de fonctions qui peuvent les affecter.
    les affecter.</p>
  <p>Pour clarifier cela, pensez à un jeu réalisé avec <span class="notranslate">GameMaker Studio 2</span>. Tous les personnages, monstres, balles, murs, etc... sont tous des objets que vous créez dans le <a href="../Introduction/The_Asset_Browser.htm">navigateur d'actifs.</a> Vous faites ensuite glisser l'<em>objet </em>dans
    une pièce dans l'<a href="Rooms.htm">éditeur de pièce</a> pour créer une <em>instance </em>copiée à partir du modèle d'objet de base. L'instance dans la pièce peut ensuite être modifiée dans l'éditeur lui-même ou par le biais du code, de sorte qu'elle peut être mise à l'échelle, colorée, ou avoir d'autres détails modifiés par rapport à la "base".
    d'autres détails modifiés à partir de l'objet &quot;de base&quot;. Ainsi, lorsque nous parlons de quelque chose qui affecte ou modifie une <strong>instance</strong>, nous voulons dire que cela affecte cette <em>copie particulière d'un objet dans une pièce</em>. Seule cette instance unique est
    instance est affectée alors que toutes les autres ne le sont pas. Mais lorsque nous parlons d'affecter ou de modifier un <strong>objet</strong>, nous voulons dire que nous modifions l'objet dans l'Asset Browser et que tout ce que nous faisons sera répercuté sur toutes les instances créées à partir de ce point.
    à partir de ce point. Ainsi, l'objet est le modèle de l'instance, et l'instance est ce que nous plaçons dans une pièce pour créer notre jeu.</p>
  <p>Pour créer un objet dans votre jeu, vous pouvez faire un clic droit sur <img alt="RMB Icon" class="icon" src="../assets/Images/Icons/Icon_RMB.png" style=""> dans le navigateur d'actifs et cliquer sur l'option <em>Créer un objet</em>. Cela ouvrira la fenêtre illustrée en haut de cette
    en haut de cette page, avec les sections suivantes :</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Détails</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">Ici, vous pouvez donner un nom à votre objet. Ce nom ne doit jamais contenir d'espaces ni de caractères non autorisés (seuls les caractères alphanumériques et la barre inférieure &quot;_&quot; sont autorisés) et doit être court mais mémorable afin que vous puissiez facilement identifier les ressources
      plus tard, lorsque vous en aurez peut-être plusieurs. Par exemple, de nombreuses personnes utilisent un préfixe ou un suffixe pour identifier les différences entre les ressources, comme &quot;<span class="inline">obj_Ship</span>&quot; ou &quot;<span class="inline">Ship_obj</span>&quot;.</p>
    <p class="dropspot">Ensuite, vous pouvez choisir le sprite de l'objet si vous souhaitez qu'il en ait un. Cliquez avec le bouton gauche de la souris <img alt="LMB Icon" class="icon" src="../assets/Images/Icons/Icon_LMB.png"> sur la case du sprite et l'<strong>Asset Explorer</strong> apparaîtra avec une liste de tous les sprites disponibles dans l'Asset Browser :</p>
    <p class="dropspot"><img alt="The Asset Explorer" class="center" src="../assets/Images/Asset_Editors/Editor_Objects_AssetExplorer.png">Vous pouvez ensuite sélectionner celui que vous souhaitez utiliser pour l'objet. Lorsqu'un sprite est affecté à l'objet, vous pouvez cliquer sur le bouton <em>Edit Sprite</em> <img alt="Edit Sprite Icon" class="icon" src="../assets/Images/Icons/Icon_EditSprite.png"> <a href="Sprites.htm">pour e</a>n modifier les propriétés ou, si vous n'avez pas de sprite pour l'objet mais souhaitez en créer un, vous pouvez cliquer sur le bouton Add Sprite pour créer un nouveau sprite et l'affecter.
      le bouton <em>Ajouter un sprite</em> <img alt="Add Sprite Icon" class="icon" height="24" src="../assets/Images/Icons/Icon_NewSprite.png" width="24"> pour créer un nouveau sprite et l'affecter. Vous pouvez également modifier l'image de l'actif sprite qui a été attribué
      assignée en cliquant sur le bouton <em>Edit Image</em> <img alt="Edit Image Icon" class="icon" src="../assets/Images/Icons/Icon_EditImage.png"> pour ouvrir l'<a href="Image_Editor.htm">éditeur d'images</a>.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">Masque de collision</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">Sous la zone d'affectation du sprite, vous disposez d'un bouton pour choisir un <strong>masque de collision</strong> spécifique. Par défaut, un objet génère des propriétés de collision basées sur le sprite qui lui est assigné, mais dans certains cas, vous pouvez souhaiter que les collisions soient basées sur une forme différente d'un sprite différent.
      que les collisions soient basées sur une forme différente d'un sprite différent. Par exemple, vous pouvez avoir un jeu de haut en bas où le sprite principal a un masque de collision rectangulaire, mais pour rendre les collisions plus fluides, un masque circulaire peut être préférable. Dans ce cas
      vous pouvez cliquer sur le bouton Masque de collision et sélectionner une autre ressource de sprite. Ainsi, les instances de l'objet <em>dessineront </em>le sprite attribué, mais baseront les <em>collisions </em>sur le sprite du masque. Vous pouvez trouver plus d'informations sur les masques de collision
      masques de collision dans la page sur l'<a href="Sprites.htm">éditeur de sprites</a>.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Propriétés</a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">Les options suivantes s'offrent à vous pour votre objet :<strong></strong></p>
    <ul class="dropspotlist">
      <li class="dropspot"><strong>Visible</strong>: Visible indique si les instances de cet objet sont visibles au démarrage de la room. Normalement, la plupart des instances sont visibles, mais il est parfois utile d'en avoir d'invisibles - par exemple, vous pouvez les utiliser comme points de passage pour contrôler un monstre en mouvement ou pour garder une trace des valeurs et effectuer certaines actions dans le temps.
        par exemple, vous pouvez les utiliser comme points de repère pour contrôler un monstre en mouvement, ou pour garder une trace des valeurs et effectuer certaines actions dans le temps. Les objets invisibles réagiront toujours aux événements et s'ils ont un sprite ou un masque qui leur est assigné, ils réagiront également si d'autres instances entrent en collision avec eux...
        Ils ne peuvent simplement pas être vus et <em>n'</em>exécutent <em>pas </em>leur <strong>événement de dessin</strong>. Par défaut, l'indicateur visible est coché.<strong></strong></li>
      <li class="dropspot"><strong>Solide</strong>: Lorsque vous marquez une instance comme étant solide, vous indiquez à <span class="notranslate">GameMaker Studio 2</span> qu'il doit essayer de résoudre les collisions éventuelles avant de déclencher un <strong>événement de collision</strong>. Il s'agit d'une fonctionnalité très basique, et en réalité
        tout ce qu'elle fait est de ramener l'instance à la position dans laquelle elle se trouvait au moment où une collision a été détectée avant d'exécuter tout code ou <span class="notranslate">DnD™</span>qui se trouve dans l'événement de collision lui-même, et en tant que tel, son utilité est limitée.</li>
      <li class="dropspot"><strong>Persistant</strong>: Un objet persistant est un objet qui ne disparaît pas lorsque la pièce est modifiée, mais qui &quot;persiste&quot; et est transféré dans la nouvelle pièce. Il ne disparaîtra que si vous le détruisez explicitement, soit avec une action de destruction, soit dans le code.
        une action de destruction ou dans le code. Cela signifie que si vous placez un objet persistant dans une pièce, il sera toujours disponible dans toutes les pièces suivantes et continuera d'exécuter toutes les actions attribuées aux événements dans les propriétés de l'objet, <em>à l'exception de </em>l'événement de création, qui n'est déclenché qu'une fois.
       <strong>Create Event</strong>, qui n'est déclenché qu'<em>une seule fois </em>lors de sa création initiale et non lorsque vous changez de pièce. Ceci est pratique lorsque vous avez, par exemple, un personnage principal qui se déplace d'une room à l'autre et que vous souhaitez conserver les mêmes variables au sein de l'instance.
        Mais vous devez faire très attention à créer et détruire correctement les objets persistants, car des erreurs peuvent facilement se glisser dans votre projet par erreur.</li>
    </ul>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#" style="margin-left:88px">Persistance et couches de la pièce</a>  </p>
    <div class="droptext" data-targetname="drop-down7">
      <p class="dropspot" style="margin-left: 132px">Lorsque vous créez une instance avec la persistance activée dans une room, une couche ou une profondeur lui est attribuée (selon la fonction que vous avez utilisée pour créer l'instance de l'objet). Lorsque la pièce est changée, et si la pièce suivante ne possède pas
        un calque avec le même nom ou la même profondeur que celui attribué, alors<strong> un nouveau calque sera créé pour l'instance qui persiste à travers les pièces</strong>. Si vous avez donné un nom à la couche lors de la création de l'instance, alors la nouvelle couche sera également nommée de la même façon que la couche originale.
        Si vous avez donné un nom à la couche lors de la création de l'instance, la nouvelle couche portera également le même nom que la couche d'origine, tandis que si vous avez attribué une profondeur à l'instance, la nouvelle couche sera nommée &quot;<span class="inline">_layer_XXX</span>&quot;, où &quot;<span class="inline">XXX</span>&quot; est une valeur hexadécimale utilisée pour donner un nom unique à la couche.
        un nom unique à la couche. Ces calques seront supprimés de la pièce à la <strong>fin de la pièce</strong>. <br>
        <br> Une autre chose à noter à propos des couches et des instances persistantes est que si vous avez assigné à l'instance une couche nommée lors de la création, et qu'il y a une autre couche dans les salles suivantes avec le même nom, alors l'instance persistante sera assignée à la couche avec le même nom sans tenir compte du fait que l'instance persiste.
        l'instance persistante sera affectée à la couche portant le même nom, quelle que soit la profondeur de la couche.<br>
        <br> Enfin, si une instance persistante se déplace dans une pièce dont la couche a la <em>même</em> profondeur que celle où l'instance a été créée, elle <em>ne </em>sera <em>pas </em>affectée à cette couche, mais une nouvelle couche sera créée à la même profondeur (en suivant la convention d'appellation expliquée ci-dessus).
        la convention de dénomination expliquée ci-dessus).</p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#" style="margin-left: 88px">Persistance et événements</a></p>
    <div class="droptext" data-targetname="drop-down6">
      <p class="dropspot" style="margin-left: 132px">Comme indiqué précédemment, un objet persistant n'exécutera son <strong>événement de création</strong> qu'<em>une seule fois</em>, mais ses événements de <strong>début</strong> et de <strong>fin de</strong> <strong>partie</strong>, de <strong>début</strong> et de <strong>fin de</strong> <strong>pièce</strong> seront également déclenchés aux moments appropriés. Toutefois, si vous redémarrez le jeu (avec, par exemple, la fonction <span class="inline">game_restart()</span> ), <em>tous les objets persistants seront supprimés et n'existeront que lorsqu'ils seront créés à nouveau par le jeu</em>.<br>
        <br> Notez également que si vous <strong>désactivez </strong>un objet persistant, il ne passera plus d'une salle à l'autre, à moins qu'il ne soit réactivé avant le déclenchement de l'événement de <strong>fin de salle</strong>. La réactivation <em>nécessite un pas de jeu complet pour se produire</em>,
        L'utilisation de l'événement de <strong>fin de salle</strong> ne fonctionne donc pas, car le jeu n'a pas le temps de réactiver l'objet. Vous devez donc garder cela à l'esprit lorsque vous utilisez la désactivation avec des objets persistants et planifier votre code en conséquence.
        code en conséquence.</p>
    </div>
    <ul class="dropspotlist">
      <li class="dropspot"><strong>Utilise la physique</strong>: Lorsque vous cochez la case Uses Physics, vous indiquez à <span class="notranslate">GameMaker Studio 2</span> que cet objet doit faire partie d'un monde physique (tel que défini dans l'<a href="Rooms.htm">éditeur de pièces</a> <strong></strong>). En cochant cette case, vous
        ouvrir une autre fenêtre chaînée dans laquelle vous pouvez définir les propriétés physiques de toutes les instances de cet objet. Vous trouverez de plus amples informations à ce sujet dans la section consacrée aux <a href="Object_Properties/Physics_Objects.htm">objets physiques</a>.</li>
    </ul>
  </div>
  <p> </p>
  <p>La dernière partie de l'éditeur d'objets est consacrée aux différentes <strong>options d'</strong>objets, chacune d'entre elles étant traitée sur sa propre page, dont le lien figure ci-dessous :</p>
  <ul class="colour">
    <li><a href="Object_Properties/Object_Events.htm">Événements relatifs aux objets</a></li>
    <li><a href="Object_Properties/Parent_Objects.htm">Objets parents</a></li>
    <li><a href="Object_Properties/Physics_Objects.htm">Objets de physique</a></li>
    <li><a href="Object_Properties/Object_Variables.htm">Variables d'objet</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="The_Asset_Editors.htm">Les éditeurs d'actifs</a></div>
        <div style="float:right">Suivant : <a href="Paths.htm">Chemins d'accès</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Object Editor
Objects
-->
  <!-- TAGS
object_editor
-->
</body>
</html>