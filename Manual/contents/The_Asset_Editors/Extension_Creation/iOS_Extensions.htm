<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Extensions iOS</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page détaillant le fonctionnement des extensions iOS" />
  <meta name="rh-index-keywords" content="Extensions - Création d&#39;extensions iOS / tvOS" />
  <meta name="search-keywords" content="Extensions iOS,iOS,Extensions tvOS,tvOS" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> Extensions <span class="notranslate">iOS</span> / <span class="notranslate">tvOS</span></h1><p> Pour créer une extension pour <span class="notranslate">iOS</span> ou <span class="notranslate">tvOS</span> vous devez le faire en deux parties. La première partie serait d&#39;ajouter l&#39;extension elle-même, ainsi que les fichiers requis, etc... et la seconde consiste à créer les fonctions et les macros / constantes dont l&#39;extension a besoin. Les fonctions et les constantes sont ajoutées à l&#39;aide de <strong>fichiers d&#39;espace réservé</strong> pour les regrouper, vous devez donc ajouter un espace réservé, puis définir les fonctions et les macros comme expliqué dans la section <a href="Creating_An_Extension.htm">ici</a>. Pour ajouter le reste des fichiers, vous devez d&#39;abord cocher la case <em><span class="notranslate">iOS</span></em> et / ou <em><span class="notranslate">tvOS</span></em> dans la <strong>section Fonctionnalités supplémentaires</strong> de l&#39;éditeur pour ouvrir la <strong>fenêtre Propriétés d&#39;extension</strong> appropriée (l&#39;image ci-dessous montre la fenêtre des propriétés <span class="notranslate">iOS</span> la <span class="notranslate">tvOS</span> est exactement la même):</p><p class="dropspot"><img alt="iOS Editor" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_iOS.png" /></p><p> Ici, vous donnez les détails suivants:</p><ul class="colour"><li class="dropspot"> <strong>Indicateurs</strong> de liens / indicateurs de compilateur: certains frameworks et SDK tiers nécessitent l&#39;ajout d&#39;indicateurs de liens supplémentaires et d&#39;indicateurs de compilateur pour fonctionner, qui peuvent être spécifiés ici (voir la documentation qui accompagne le SDK ou le framework en question pour plus de détails).</li><li class="dropspot"> <strong>Nom de la classe</strong>: votre extension peut avoir plusieurs classes, chaque classe ayant ses propres fonctions et constantes, vous devez donc lui donner un nom qui reflète son objectif</li><li class="dropspot"> <strong>Nom de classe de délégué d&#39;application</strong>: nom de votre classe de délégué d&#39;application personnalisée. Ce paramètre permet à l&#39;extension de remplacer / d&#39;étendre les fonctionnalités principales de l&#39;application. Pour utiliser cette fonctionnalité, vous devez procéder comme suit:<ol><li> Assurez-vous que les fichiers source du délégué portent le même nom que la classe du délégué (par ex. <span class="inline">@interface MyCustomAppDelegate</span> doit être défini dans &quot; <span class="inline">MyCustomAppDelegate.h</span> &quot;)</li><li> Ajouter le <span class="inline">${YYExtAppDelegateIncludes}</span> variable d&#39;environnement en haut de votre fichier d&#39;en-tête de délégué d&#39;application. Cela sera remplacé au moment de la compilation par les fichiers d&#39;inclusion appropriés pour la classe de délégué parent.</li><li> Utilisez le <span class="inline">${YYExtAppDelegateBaseClass}</span> variable d&#39;environnement comme classe de base pour votre délégué d&#39;application personnalisé. Cela sera remplacé au moment de la compilation par la classe de délégué de base correcte.<br/><br/> Pour vous assurer que votre extension fonctionne avec toutes les autres extensions qui utilisent des délégués d&#39;application personnalisés, vous devez appeler toutes les méthodes de classe de base à partir de méthodes remplacées dans votre classe enfant. Avant d&#39;appeler la méthode superclass, vous devez vous assurer qu&#39;elle est implémentée dans la hiérarchie des classes pour éviter les erreurs, par exemple:</li></ol><p class="code">- (BOOL)application:(UIApplication *)application willFinishLaunchingWithOptions:(NSDictionary *)launchOptions<br/> {
        <br/>     // Check if any superclasses implement this method and call it<br/>     if([[self superclass] instancesRespondToSelector:@selector(application:willFinishLaunchingWithOptions:)])<br/>       return [super application:application willFinishLaunchingWithOptions:launchOptions];<br/>            else<br/>         return TRUE;<br/> }
      </p></li><li class="dropspot"> <strong>Cadres système:</strong> Vous pouvez ajouter dans un <span class="notranslate">iOS</span> système <a class="glossterm" data-glossterm="cadre" href="#">cadre</a> <span class="glossextra">est</span> à votre poste. Ceux-ci sont ajoutés en cliquant sur le<img alt="Add Argument Icon"
        class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png" width="18" /> bouton qui ajoutera un cadre d&#39;espace réservé, que vous pourrez ensuite modifier en cliquant lentement<img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png"
      /> dessus. Vous pouvez en savoir plus sur les frameworks système disponibles <a href="https://developer.apple.com/documentation/">ici</a>. Pour supprimer une infrastructure système, sélectionnez-la simplement puis cliquez sur le bouton<img alt="Remove Argument Icon" class="icon" src="../../assets/Images/Icons/Icon_RemoveArgument.png"
      /> bouton.</li><li class="dropspot"> <strong>Injecter dans Info.plist</strong>: Ici, vous pouvez ajouter n&#39;importe quel code à injecter dans le <span class="inline">info.plist</span> déposer.</li><li class="dropspot"> <strong>Frameworks et</strong> bundles tiers: cette section concerne l&#39;ajout de bundles tiers et SDK. Comme pour le cadre système, vous cliquez sur le bouton<img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png"
        width="18" /> bouton pour les ajouter, puis cliquez lentement<img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png" /> pour les modifier, et en les sélectionnant puis en cliquant sur<img alt="Remove Argument Icon" class="icon" src="../../assets/Images/Icons/Icon_RemoveArgument.png"
      /> les supprimera (voir la documentation fournie avec le SDK que vous avez choisi pour plus d&#39;informations sur le nom du framework). Si le bundle framework / SDK se trouve sur votre Mac de développement, vous devez ajouter le chemin dans &quot; <em>Entrez le chemin du framework sur Mac</em> &quot; et cliquez sur le bouton<img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png" width="18" /> ou si le SDK ou le code source se trouve sur votre PC, utilisez le bouton <em>Ajouter une source.</em></li><li class="dropspot"> <strong><span class="notranslate">CocoaPods</span></strong>: Ici, vous pouvez donner le nom de tous les <span class="notranslate">CocoaPods</span> que l&#39;extension va utiliser à la place (ou ainsi que) de tous les SDK et frameworks qui ont été ajoutés. Notez qu&#39;il existe une option de jeu <a href="../../Settings/Game_Options/iOS.htm">pour <span class="notranslate">iOS</span></a> et <a href="../../Settings/Game_Options/tvOS.htm">pour <span class="notranslate">tvOS</span></a> pour ajouter un fichier Pod à <span class="notranslate">GameMaker Studio</span> 2, ce qui est requis si vous ajoutez des <span class="notranslate">CocoaPods</span> dans cette section.</li><li class="dropspot"> <strong>Dépendances des <span class="notranslate">CocoaPods</span></strong>: Cette section est l&#39;endroit où vous pouvez lister les différentes dépendances requises par les <span class="notranslate">CocoaPods</span> ajoutés dans la section précédente. Notez qu&#39;il existe une option de jeu <a href="../../Settings/Game_Options/iOS.htm">pour <span class="notranslate">iOS</span></a> et <a href="../../Settings/Game_Options/tvOS.htm">pour <span class="notranslate">tvOS</span></a> pour ajouter un Podfile.lock à <span class="notranslate">GameMaker Studio</span> 2, ce qui est requis si vous ajoutez des dépendances CocoaPod dans cette section.</li></ul><p> Si des cadres système ou des cadres tiers ont été ajoutés à votre extension, ceux-ci seront désormais répertoriés dans la <strong>fenêtre Propriétés de</strong> l&#39;extension, chacun d&#39;eux ayant une case à cocher à côté. Si vous cochez la case, vous activez la liaison faible, ce qui est utile si vous avez besoin de &quot;remplacer&quot; un symbole de la bibliothèque incluse par votre propre valeur, mais il convient de noter que cela ralentira la liaison.</p><p> Pour plus d&#39;informations sur la création d&#39; <span class="notranslate">iOS</span> et <span class="notranslate">tvOS</span>, veuillez consulter la <a href="https://help.yoyogames.com/hc/en-us/articles/360012504971-iOS-and-Android-Creating-A-Simple-Extension">base de connaissances <span class="notranslate">YoYo Games</span></a>, et pour plus d&#39;informations sur l&#39;utilisation de <span class="notranslate">CocoaPods</span> dans les extensions, veuillez consulter le guide suivant:</p><ul class="colour"><li> <a href="https://help.yoyogames.com/hc/en-us/articles/360008958858"><span class="notranslate">iOS</span> et <span class="notranslate">tvOS</span>: utilisation des cosses de cacao</a> </li></ul><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="../Extensions.htm">L&#39;éditeur d&#39;extensions</a></div><div style="float:right"> Suivant: <a href="Creating_An_Extension.htm">Créer une extension</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
iOS Extensions
tvOS Extensions
-->
  <!-- TAGS
extensions_ios
-->
</body>
</html>