<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Extensions iOS</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how iOS extensions work" />
  <meta name="rh-index-keywords" content="Extensions - Creating iOS / tvOS Extensions" />
  <meta name="search-keywords" content="iOS Extensions,iOS, tvOS Extensions, tvOS" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Extensions<span class="notranslate">iOS</span> / <span class="notranslate">tvOS</span> </h1>
  <p>Pour créer une extension pour <span class="notranslate">iOS</span> ou <span class="notranslate">tvOS</span>, vous devez le faire en deux parties. La première partie consiste à ajouter l'extension elle-même, avec les fichiers requis, etc... et la seconde consiste à créer les fonctions et les macros/constantes dont l'extension a besoin.
    Les fonctions et les constantes sont ajoutées en utilisant des fichiers <strong>placeholder </strong>pour les regrouper, donc vous ajoutez un placeholder et ensuite vous définissez les fonctions et les macros comme expliqué dans la section ici <a href="Creating_An_Extension.htm">.</a>
    Pour ajouter le reste des fichiers, vous devez d'abord cocher l'option <em><span class="notranslate">iOS</span> </em>et/ou la <em><span class="notranslate">tvOS</span> </em>dans la section <strong>Additional Features</strong> de l'éditeur pour ouvrir la fenêtre <strong>Extension Properties</strong> correspondante (l'image ci-dessous montre la fenêtre iOS Properties).
    l'image ci-dessous montre la fenêtre de propriétés <span class="notranslate">iOS</span>, mais la fenêtre <span class="notranslate">tvOS</span> est exactement la même) :</p>
  <p class="dropspot"><img alt="iOS Editor" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_iOS.png" /></p>
  <p>Ici, vous donnez les détails suivants :</p>
  <ul class="colour">
    <li class="dropspot"><strong>Drapeaux du linker / drapeaux du compilateur</strong>: Certains frameworks et SDK tiers nécessitent l'ajout de drapeaux de liaison et de compilation supplémentaires pour fonctionner, qui peuvent être spécifiés ici (voir la documentation qui accompagne le SDK ou le framework en question pour plus de détails).
      en question pour plus de détails).</li>
    <li class="dropspot"><strong>Nom de la classe</strong>: Votre extension peut avoir plusieurs classes, chaque classe ayant ses propres fonctions et constantes. Vous devez donc lui donner un nom qui reflète son objectif.</li>
    <li class="dropspot"><strong>Nom de la classe du délégué d'application</strong>: Le nom de votre classe de délégué d'application personnalisée. Ce paramètre permet à l'extension de remplacer/étendre la fonctionnalité de base de l'application. Pour utiliser cette fonctionnalité, vous devez procéder comme suit :
      <ol>
        <li>Assurez-vous que les fichiers source du délégué portent le même nom que la classe du délégué (par exemple, <span class="inline">@interface MyCustomAppDelegate</span> doit être défini dans &quot; <span class="inline">MyCustomAppDelegate.h</span>&quot;).</li>
        <li>Ajoutez la variable d'environnement <span class="inline">${YYExtAppDelegateIncludes}</span> au début du fichier d'en-tête du délégué de votre application. Elle sera remplacée au moment de la compilation par les fichiers inclus pertinents pour la classe de délégué parent.</li>
        <li>Utilisez la variable d'environnement <span class="inline">${YYExtAppDelegateBaseClass}</span> comme classe de base pour votre délégué d'application personnalisé. Elle sera remplacée lors de la compilation par la classe de délégué de base correcte.<br>
          <br> Pour vous assurer que votre extension fonctionne avec toutes les autres extensions qui utilisent des délégués d'applications personnalisées, vous devez appeler toutes les méthodes de la classe de base à partir des méthodes surchargées de votre classe enfant. Avant d'appeler la méthode de la superclasse, vous devez vous assurer que celle-ci
          est implémentée dans la hiérarchie de la classe pour éviter les erreurs, par ex :</li>
      </ol>
     <p class="code">- (BOOL)application :(UIApplication *)application willFinishLaunchingWithOptions :(NSDictionary *)launchOptions<br> {
        <br> // Vérifiez si une superclasse implémente cette méthode et appelez-la<br> if([[self superclass] instancesRespondToSelector:@selector(application:willFinishLaunchingWithOptions :)])<br> return [super application:application willFinishLaunchingWithOptions:launchOptions] ;<br> else<br> return TRUE ;<br> }
     </p>
    </li>
    <li class="dropspot"><strong>System Frameworks</strong>: Ici, vous pouvez ajouter n'importe quel <a class="glossterm" data-glossterm="cadre" href="#">cadre du</a>système <span class="notranslate">iOS</span> à votre extension. Vous pouvez les ajouter en cliquant sur le bouton <img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png" width="18">, ce qui ajoutera un cadre virtuel, que vous pourrez ensuite modifier en cliquant lentement sur <img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png">. Vous pouvez en savoir plus sur les frameworks système disponibles <a href="https://developer.apple.com/documentation/">ici</a>. Pour supprimer un framework système, il suffit de le sélectionner puis de cliquer sur le bouton <img alt="Remove Argument Icon" class="icon" src="../../assets/Images/Icons/Icon_RemoveArgument.png">.</li>
    <li class="dropspot"><strong>Injecter dans Info.plist</strong>: Ici vous pouvez ajouter n'importe quel code à injecter dans le fichier <span class="inline">info.plist</span>.</li>
    <li class="dropspot"><strong>Cadres et paquets tiers</strong>: Cette section permet d'ajouter des bundles tiers et SDK. Comme pour les frameworks système, cliquez sur le bouton <img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png" width="18"> pour les ajouter, puis cliquez lentement sur <img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png"> pour les modifier. En les sélectionnant puis en cliquant sur <img alt="Remove Argument Icon" class="icon" src="../../assets/Images/Icons/Icon_RemoveArgument.png">, vous les supprimerez (consultez la documentation fournie avec le SDK choisi pour obtenir des informations sur le nom du framework). Si le paquet de frameworks/SDK se trouve sur votre Mac de développement, vous devez ajouter le chemin dans &quot; Enter <em>framework path on Mac &quot;</em>.
      et cliquez sur le bouton <img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png" width="18">, ou si le SDK ou le code source se trouve sur votre PC, utilisez le bouton <em>Add Source</em>.</li>
    <li class="dropspot"><strong><span class="notranslate">CocoaPods</span></strong>: Ici, vous pouvez donner le nom de tous les <span class="notranslate">CocoaPods</span> que l'extension va utiliser à la place (ou en plus) de tous les SDK et frameworks qui ont été ajoutés. Notez qu'il existe une option de jeu <a href="../../Settings/Game_Options/iOS.htm">pour <span class="notranslate">iOS</span></a> et <a href="../../Settings/Game_Options/tvOS.htm">pour <span class="notranslate">tvOS</span></a> permettant d'ajouter un podfile à <span class="notranslate">GameMaker Studio2</span>, qui est nécessaire si vous ajoutez des <span class="notranslate">CocoaPods</span> dans cette section.</li>
    <li class="dropspot"><strong>Dépendances<span class="notranslate">CocoaPods</span></strong>: Cette section vous permet de lister les différentes dépendances requises par les <span class="notranslate">CocoaPods</span> ajoutés dans la section précédente. Notez qu'il existe une option de jeu <a href="../../Settings/Game_Options/iOS.htm">pour <span class="notranslate">iOS</span></a> et <a href="../../Settings/Game_Options/tvOS.htm">pour <span class="notranslate">tvOS</span></a> permettant d'ajouter un Podfile.lock à <span class="notranslate">GameMaker Studio2</span>, qui est nécessaire si vous ajoutez des dépendances CocoaPod dans cette section.</li>
  </ul>
  <p>Si des cadres de système ou des cadres tiers ont été ajoutés à votre extension, ils seront désormais répertoriés dans la fenêtre <strong>Propriétés de l'extension </strong>, avec une case à cocher à côté de chacun d'eux. Si vous cochez la case, vous activez la liaison faible.
    ce qui est utile si vous avez besoin de &quot;remplacer&quot; un symbole de la bibliothèque incluse par votre propre valeur, mais il faut noter que cela ralentira l'établissement des liens.</p>
  <p>Pour plus d'informations sur la création d'extensions <span class="notranslate">iOS</span> et <span class="notranslate">tvOS</span>, veuillez consulter la <a href="https://help.yoyogames.com/hc/en-us/articles/360012504971-iOS-and-Android-Creating-A-Simple-Extension">base de connaissances<span class="notranslate">YoYo Games</span></a>, et pour des informations sur l'utilisation de <span class="notranslate">CocoaPods</span>
    dans les extensions, veuillez consulter le guide suivant :</p>
  <ul class="colour">
    <li><a href="https://help.yoyogames.com/hc/en-us/articles/360008958858"><span class="notranslate">iOS</span> et <span class="notranslate">tvOS</span>: utilisation des pods Cocoa</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="../Extensions.htm">L'éditeur d'extension</a></div>
        <div style="float:right">Suivant : <a href="Creating_An_Extension.htm">Création d'une extension</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
<span class="notranslate">iOS</span> Extensions
<span class="notranslate">tvOS</span> Extensions
-->
  <!-- TAGS
extensions_ios
-->

</body></html>