<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Variables et port√©e variable</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page d√©crivant les variables et leur port√©e dans GML" />
  <meta name="rh-index-keywords" content="Variables et port√©e variable" />
  <meta name="search-keywords" content="variables,port√©e,variables locales,variables d&#39;instance,variables globales" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> Variables et port√©e variable</h1><p> Comme tout langage de programmation, <b><span class="notranslate">GML</span></b> utilise des <i>variables</i> comme unit√© de base pour la plupart des op√©rations de programmation. Les variables sont utilis√©es pour stocker des informations dans la m√©moire des p√©riph√©riques pour une utilisation ult√©rieure (ou instantan√©e), et elles re√ßoivent un nom afin que vous puissiez y faire r√©f√©rence dans les fonctions d&#39; <span class="notranslate">runtime</span> et de script. Une variable dans <b><span class="notranslate">GML</span></b> peut stocker de nombreux <a href="Data_Types.htm"><strong>types de donn√©es diff√©rents</strong></a>, comme un nombre r√©el (par exemple: 100, 2.456575, -56 etc...), une cha√Æne (par exemple: &quot;Hello world!&quot;), Un entier (par exemple: 1, 556, -7) ou un bool√©en (<tt>true</tt> ou <tt>false</tt> ), ainsi que d&#39;autres choses:</p><p class="code">var _num = 126.4545;<br/> var _str = &quot;Hello World&quot;;<br/> new_num = _num * 100;<br/> global.my_string = _str + &quot; I said&quot;;</p><p> Vous pouvez √©galement utiliser des variables pour contenir les valeurs renvoy√©es par les fonctions, par exemple:</p><p class="code">var _id = instance_nearest(x, y, obj_Tree);<br/> root = sqrt(1000);<br/> global.str = string_upper(&quot;Hello World&quot;);</p><p> Ainsi, une variable est quelque chose que nous pouvons nommer et utiliser pour stocker une valeur pour une utilisation ult√©rieure dans une ou plusieurs op√©rations. Un bon exemple &quot;r√©el&quot; d&#39;une variable est <b>pi ùúã</b>... c&#39;est une variable que tout le monde conna√Æt et elle d√©tient la valeur 3.14159265 (etc...). Pourquoi l&#39;avons-nous dans notre langue? Eh bien, il est beaucoup plus facile de dire √† quelqu&#39;un &quot;pi&quot; que &quot;trois virgule un quatre un cinq neuf deux six cinq&quot;! Nommer des choses comme cela rend la vie beaucoup plus simple et il a √©galement signifie que si la valeur de cette variable ne changera jamais, on n&#39;a pas de changer le nombre partout comme le <i>nom</i> de la variable est toujours le m√™me.</p><p> Lors de la formation de variables dans <b><span class="notranslate">GML</span></b> il doit avoir un nom qui commence par une lettre ou le symbole de soulignement &quot;_&quot; et ne peut contenir que des lettres, des chiffres et le symbole de soulignement &quot;_&quot; avec une longueur maximale de 64 symboles. Ainsi, les variables valides sont des choses comme <tt>fish</tt>, <tt>foo_bar</tt>, <tt>num1</tt>, ou <tt>_str</tt>, tandis que les variables invalides seraient <tt>6fish</tt>, <tt>foo bar</tt>, ou <tt>*num</tt>.</p><p> Maintenant, dans de nombreux langages de programmation, vous devez cr√©er une &quot;affectation&quot; de variable avant de pouvoir l&#39;utiliser. Cela signifie essentiellement que vous indiquez √† l&#39;ordinateur le nom que vous souhaitez utiliser pour la variable et lui attribuez une valeur initiale. La variable se voit alors attribuer une place en m√©moire pour stocker la valeur ou y effectuer des op√©rations. L&#39;affectation d&#39;une variable prend la forme de:</p><p class="code">&lt;variable&gt; = &lt;expression&gt;;</p><p> Une expression peut √™tre une valeur simple mais peut aussi √™tre plus compliqu√©e, donc, plut√¥t que d&#39;attribuer une valeur √† une variable, on peut √©galement ajouter une valeur √† la valeur actuelle de la variable en utilisant <span class="inline"><b>+=</b></span>, par exemple:</p><p class="code">a = 100;¬†¬†¬†// Assigning a simple value<br/> b = 200;<br/> c = 300;<br/> a += b;¬†¬†¬†¬†// Assigning with operation<br/> a = b + c; // Assigning with expression</p><p class="note"> <b>REMARQUE</b>: le <span class="notranslate">GameMaker Language</span> accepte √©galement &quot;<span class="inline">:=</span> &quot;pour les devoirs, bien que ce ne soit g√©n√©ralement pas la mani√®re la plus courante de le faire:</p><p class="code">&lt;variable&gt; := &lt;expression&gt;;</p><p> De m√™me, vous pouvez soustraire en utilisant <span class="inline"><b>-=</b></span>, multipliez en utilisant <span class="inline"><b>*=</b></span>, divisez en utilisant <span class="inline"><b>/=</b></span>, ou utilisez des op√©rateurs au niveau du bit en utilisant <span class="inline"><b>|=</b></span>, <span class="inline"><b>&amp;=</b></span>, ou <span class="inline"><b>^=</b></span>. Vous pouvez √©galement en ajouter ou en soustraire <i>une</i> √† une valeur en utilisant <span class="inline"><b>++</b></span>, <span class="inline"><b>--</b></span>. Pour plus d&#39;informations, consultez la section sur les <a href="Expressions_And_Operators.htm">expressions et les op√©rateurs</a>.</p><p> Notez que vous <i>ne pouvez pas</i> effectuer les op√©rations suivantes (ni aucune variante):</p><p class="code">a = b = c = 4;</p><p> Et √† la place, cela devrait √™tre fait comme:</p><p class="code">a = 4;<br/> b = 4;<br/> c = 4;</p><p> Les affectations de variables pr√©sent√©es ci-dessus sont toutes des <strong>variables d&#39;instance</strong>, mais il existe en fait trois autres cat√©gories de variables principales lorsque vous programmez avec <span class="notranslate">GameMaker Studio 2</span> et chacune a sa propre <strong>port√©e</strong> (qui peut √™tre consid√©r√©e comme sa zone d&#39;op√©ration ou sa port√©e). Les diff√©rents types de variables et leur port√©e sont tous d√©crits dans les pages suivantes:</p><ul class="colour"><li> <a href="Variables/Local_Variables.htm">Variables locales</a></li><li> <a href="Variables/Instance_Variables.htm">Variables d&#39;instance</a></li><li> <a href="Variables/Global_Variables.htm">Variables globales</a></li><li> <a href="Variables/Constants.htm">Constantes</a></li></ul><p> Le <span class="notranslate">GameMaker Language</span> a √©galement plusieurs variables int√©gr√©es diff√©rentes qui peuvent avoir l&#39;une des port√©es mentionn√©es ci-dessus (sauf <i>locale</i> ). Ces variables sont sp√©ciales car elles sont incluses par d√©faut dans le cadre des objets et des salles dans le monde du jeu. Certaines variables globales int√©gr√©es sont r√©pertori√©es dans la section mentionn√©e ci-dessus, et les diff√©rentes parties du manuel pour les sprites, les salles, les objets, etc... d√©crivent √©galement les variables int√©gr√©es disponibles dans chaque cas. Des exemples de telles variables d&#39;instance int√©gr√©es seraient:</p><p class="code"><tt><a href="../GML_Reference/Asset_Management/Sprites/Sprite_Instance_Variables/sprite_index.htm">sprite_index</a></tt><br/>
    <a href="../GML_Reference/Asset_Management/Paths/Path_Variables/path_index.htm"><tt>path_scale</tt></a><br/>
    <a href="../GML_Reference/Asset_Management/Instances/Instance_Variables/speed.htm"><tt>speed</tt></a></p><p> Et des exemples de variables globales int√©gr√©es seraient:</p><p class="code"><a href="../GML_Reference/Cameras_And_Display/Cameras_And_Viewports/view_xport.htm"><tt>view_xport</tt></a><br/>
    <a href="../GML_Reference/OS_And_Compiler/GM_version.htm"><tt>GM_version</tt></a><br/>
    <a href="../GML_Reference/Asset_Management/Rooms/room.htm"><tt>room</tt></a></p><p> La plupart des variables int√©gr√©es peuvent √™tre modifi√©es et d√©finies comme d&#39;autres variables, et certaines peuvent m√™me √™tre des <a href="Arrays.htm">tableaux</a>, mais vous n&#39;avez pas √† les d√©finir pour les cr√©er comme vous le feriez pour une variable r√©guli√®re car elles seront d√©j√† initialis√©es √† une valeur par d√©faut.</p><p> Enfin, il existe un certain nombre de fonctions d√©di√©es √† la d√©finition, √† l&#39;obtention ou √† la v√©rification des variables d&#39;une mani√®re ou d&#39;une autre, disponibles √† partir de la page suivante:</p><ul class="colour"><li> <a href="../GML_Reference/Variable_Functions/Variable_Functions.htm">Fonctions variables</a> </li></ul><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="GML_Overview.htm">Pr√©sentation de <span class="notranslate">GML</span></a></div><div style="float:right"> Suivant: <a href="Arrays.htm">Tableaux</a></div></div></div><h5> <span data-keyref="Copyright Notice">¬© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits r√©serv√©s</span></h5>
  </div>
  <!-- KEYWORDS
variables
variables - built-in
variables - scope
declaring variables
scope
built-in variables
-->
  <!-- TAGS
variables
-->
</body>
</html>