<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>nouveau</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the new function" />
  <meta name="rh-index-keywords" content="new" />
  <meta name="search-keywords" content="new" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>nouveau</h1>
  <p>L'opérateur <tt>new</tt> peut être utilisé pour créer une structure avec une fonction qui est appelée avec les arguments donnés. La fonction peut alors remplir la structure avec les variables des arguments - de la même manière que l'événement de création d'une instance définira les variables initiales de l'instance.
    pour l'instance - et ensuite l'opérateur <tt>new</tt> retournera la structure. Avant d'utiliser cet opérateur, il est important de noter que la fonction donnée <i>doit être marquée comme une fonction <tt>constructrice</tt></i>, sinon l'opérateur <tt>new</tt> ne créera pas la structure (l'exemple de code ci-dessous le montre, et pour plus d'informations, veuillez consulter la page sur les <a href="../Structs.htm">structures</a>).</p>
  <p class="note"><strong>NOTE</strong>: Vous pouvez vérifier une structure pour savoir quelle fonction a été utilisée pour la créer en utilisant la fonction d'<span class="notranslate">exécution</span> <a href="../../GML_Reference/Variable_Functions/instanceof.htm"><tt>instanceof()</tt></a>.</p>
  <p>Cet opérateur a la syntaxe suivante :</p>
  <p class="code"><span>&lt;variable&gt; = nouvelle &lt;fonction&gt; </span>(&lt;argument&gt;, &lt;argument&gt;, ...) ;</p>
  <p>Lorsque vous utilisez l'opérateur new avec une fonction, il renvoie une référence de structure qui est stockée dans la variable donnée, ce qui vous permet d'accéder à la structure et à toutes les variables qui ont été créées par la fonction.</p>
  <p>L'exemple suivant montre une fonction qui a été définie pour être utilisée comme constructeur :</p>
  <p class="code">function init_struct(_a, _b, _c) constructor<br> {
    <br> a = _a ;<br> b = _b ;<br> c = _c ;<br> }
  </p>
  <p>Cette fonction peut ensuite être utilisée avec l'opérateur <tt>new</tt> pour créer une structure et la remplir avec les variables définies par les valeurs des arguments utilisés dans la fonction, comme ceci :</p>
  <p class="code">mystruct = new init_struct(10, 100, &quot;Hello World&quot;) ;</p>
  <p>Il est important de noter que l'appel de new sur une fonction qui <em>n'a pas</em> été marquée comme un constructeur provoquera une <a href="../../../Additional_Information/Errors/Runner_Errors.htm">exception</a> d <a href="../../../Additional_Information/Errors/Runner_Errors.htm">'<span class="notranslate">exécution</span></a>.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="../Language_Features.htm">Caractéristiques de la langue</a></div>
        <div style="float:right">Suivant : <a href="delete.htm">supprimer</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
new
-->
  <!-- TAGS
new
-->

</body></html>