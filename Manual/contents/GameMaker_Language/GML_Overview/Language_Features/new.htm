<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>new</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page décrivant la nouvelle fonction"/>
  <meta name="rh-index-keywords" content="new"/>
  <meta name="search-keywords" content="new"/>
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>new</h1><p> Le <tt>new</tt> L&#39;opérateur peut être utilisé pour créer une structure avec une fonction qui est appelée avec les arguments donnés. La fonction peut ensuite remplir la structure avec les variables des arguments - un peu comme l&#39;événement create d&#39;une instance définira les variables initiales de l&#39;instance - puis le <tt>new</tt> L&#39;opérateur retournera la structure. Avant d&#39;utiliser cet opérateur, il est important de noter que la fonction donnée <i>doit être marquée comme <tt>constructor</tt> fonctionner</i> sinon le <tt>new</tt> L&#39;opérateur ne créera pas la structure (l&#39;exemple de code ci-dessous le montre, et pour plus d&#39;informations, veuillez consulter la page sur <a href="../Structs.htm">Structs</a> ).</p><p class="note"> <strong>REMARQUE</strong>: vous pouvez vérifier une structure pour savoir quelle fonction a été utilisée pour la créer à l&#39;aide de la fonction d&#39; <span class="notranslate">runtime </span><a href="../../GML_Reference/Variable_Functions/instanceof.htm"><tt>instanceof()</tt></a>.</p><p> Cet opérateur a la syntaxe suivante:</p><p class="code"><span>&lt;variable&gt; = </span>new &lt;function&gt; (&lt;argument&gt;, &lt;argument&gt;, ...);</p><p> Lorsque vous utilisez l&#39;opérateur new avec une fonction, il renverra une référence de structure qui est stockée dans la variable donnée, vous permettant d&#39;accéder à la structure et à toutes les variables qui y ont été créées par la fonction.</p><p> L&#39;exemple suivant montre une fonction qui a été définie pour être utilisée comme constructeur:</p><p class="code">function init_struct(_a, _b, _c) constructor<br/>     {
    <br/>     a = _a;<br/>     b = _b;<br/>     c = _c;<br/>     }
  </p><p> Cette fonction peut ensuite être utilisée avec le <tt>new</tt> opérateur pour créer une structure et la remplir avec les variables définies sur les valeurs des arguments utilisés dans la fonction, comme ceci:</p><p class="code">mystruct = new init_struct(10, 100, &quot;Hello World&quot;);</p><p> Il est important de noter que l&#39;appel de new sur toute fonction qui n&#39;a <em>pas</em> été marquée comme constructeur provoquera une <a href="../../../Additional_Information/Errors/Runner_Errors.htm">exception d&#39; <span class="notranslate">runtime</span></a>. </p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="../Language_Features.htm">Caractéristiques linguistiques</a></div><div style="float:right"> Suivant:<a href="delete.htm">delete</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
new
-->
  <!-- TAGS
new
-->

</body></html>