<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>continue</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page décrivant la fonction continue" />
  <meta name="rh-index-keywords" content="continue" />
  <meta name="search-keywords" content="continue" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>continue</h1><p> Le <tt>continue</tt> l&#39;instruction a la syntaxe de base suivante:</p><p class="code">continue;</p><p> S&#39;il est utilisé à l&#39;intérieur d&#39;une instruction qui forme une boucle (<a href="for.htm"><tt>for</tt></a>, <a href="repeat.htm"><tt>repeat</tt></a>, <a href="while.htm"><tt>while</tt></a> ou <a href="do___until.htm"><tt>do / until</tt></a> ), il mettra immédiatement fin à l&#39; <a class="glossterm" data-glossterm="itération" href="#">itération en cours</a> et reviendra au début de la boucle en commençant une nouvelle itération et en omettant tout code qui suit le <span class="inline">continue</span> dans la boucle. Il peut également être utilisé dans le <a href="with.htm"><tt>with</tt></a> instruction, où il fera passer le code à l&#39;instance suivante et s&#39;exécutera à nouveau. Notez que si <tt>continue</tt> est utilisé en dehors de l&#39;un de ces contextes, il donnera une erreur.</p><p> Voici un exemple d&#39;utilisation dans un <tt>for</tt> boucle:</p><p class="code">var _val = 0;<br/> for (var i = 0; i &lt; 10; i += 1)<br/>     {
    <br/>     if (val_array[i] &lt;= 0)<br/>         {<br/>         continue;<br/>         }<br/>     _val += val_array[i];<br/>     }
    <br/> draw_text(32, 32, &quot;Positive Values Total = &quot; + string(_val));</p><p> Voici un exemple d&#39;utilisation dans un <span class="inline">while</span> boucle:</p><p class="code">var file = file_text_open_read(&quot;Game_Data.txt&quot;);<br/> var _num = 0;<br/> while (!file_text_eof(file))<br/>     {<br/>     var _s = file_text_readln(file);<br/>     if (_s == &quot;&quot;)<br/>         {<br/>         continue;<br/>       }<br/>        str[num++] = _s;<br/>     }<br/> file_text_close(file);
  </p><p> Voici un exemple d&#39;utilisation dans un <span class="inline">do / until</span> boucle:</p><p class="code">do<br/>     {
    <br/>     var _x = random(room_width);<br/>     var _y = random(room_height);<br/>     if (instance_position(_x, y, obj_Enemy)<br/>         {
    <br/>         continue;
    <br/>         }
    <br/>     instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br/>     }
    <br/> until (instance_count(obj_Enemy) &gt;= 10);</p><p> Vous trouverez ci-dessous un exemple d&#39;utilisation dans un <span class="inline">repeat</span> boucle:</p><p class="code">repeat(10)<br/>     {   <br/>     var _x = random(room_width);<br/>     var _y = random(room_height);<br/>     if (instance_position(_x, y, obj_Enemy)<br/>         {
    <br/>         continue;
    <br/>         }
    <br/>     instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br/>     }</p><p> Enfin, un exemple d&#39;utilisation dans un <span class="inline">with</span> déclaration: </p><p class="code">with (obj_Enemy_Parent)<br/>     {<br/>     if (object_index == obj_Enemy_InDestructible)<br/>         {<br/>         continue;<br/>         }<br/>     hp -= 100;<br/>     if (hp &lt;= 0)<br/>         {<br/>         instance_destroy();<br/>       }<br/>        }</p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="../Language_Features.htm">Caractéristiques linguistiques</a></div><div style="float:right"> Suivant:<a href="exit.htm">exit</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
continue
-->
  <!-- TAGS
continue
-->
</body>
</html>