<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Types de données</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining Data Types" />
  <meta name="rh-index-keywords" content="Data Types" />
  <meta name="search-keywords" content="Data Types" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Types de données</h1>
  <p>Dans les sections précédentes, nous avons abordé les <a href="Variables_And_Variable_Scope.htm">variables et leurs règles de délimitation</a>, mais nous avons peu parlé des différents <b>types de données</b> qu'une variable peut stocker. C'est pourquoi cette section explique les différents
    types et ce à quoi ils peuvent servir.</p>
  <p>Avant de poursuivre, expliquons brièvement ce que nous entendons par &quot;types de données&quot;. Lorsque vous créez une variable, elle peut être utilisée pour contenir des informations, et lorsque vous appelez une fonction, elle peut également stocker les informations retournées. Cependant, ces informations
    peuvent avoir différentes &quot;saveurs&quot; - par exemple, il peut s'agir d'un <em>nombre</em> réel <em>ou</em> d'une chaîne de caractères. Les différents types de valeurs utilisés sont appelés <b>types de données</b> et, dans <i>le </i><span class="notranslate">langage GameMaker</span>, ils peuvent être les suivants
    être l'un des suivants :</p>
  <p> </p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Cordes</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot"><label for="one">Une chaîne de caractères est simplement un texte placé entre guillemets &quot;...&quot;. Vous pouvez effectuer certaines opérations sur les chaînes de caractères, comme ajouter deux chaînes de caractères ensemble pour créer une chaîne plus longue (concaténation) et vous pouvez également modifier les propriétés des chaînes de caractères et même en extraire des nombres réels. Pour plus d'informations sur les chaînes de caractères et les fonctions de chaîne de caractères, voir : <a href="../GML_Reference/Strings/Strings.htm">Référence<span class="notranslate">GML</span></a>- Chaînes de caractères.</label></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">Les chiffres réels</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">Les nombres réels sont toute valeur qui n'est pas une chaîne de caractères, ni aucun des autres types de données possibles. Ainsi, 124, 45639.566546456, 0, -45.5 etc... sont tous des exemples de nombres réels. Tous les nombres réels sont stockés sous forme de valeurs à virgule flottante en double précision ou de valeurs entières (soit des nombres entiers 32 bits
      (soit des entiers 32 bits - <span class="inline">int32</span> - soit des entiers 64 bits - <span class="inline">int64</span>), et le compilateur les optimisera si possible (par exemple, 0,0 sera optimisé à la valeur entière de 0). Lorsque vous traitez
      avec une valeur qui n'est pas un nombre entier, vous pouvez rencontrer de légères erreurs d'arrondi dues à la nature des mathématiques à virgule flottante. Pour plus d'informations sur cette fonction et d'autres fonctions liées aux nombres, veuillez consulter : <a href="../GML_Reference/Maths_And_Numbers/Number_Functions/Number_Functions.htm">Référence<span class="notranslate">GML</span></a>- Fonctions numériques.</p>
    <p class="note"><b>NOTE</b>: Sur la cible <b>HTML5</b>, tous les nombres réels sont des doubles.</p>
    <p class="dropspot">Notez que si les variables créées dans <span class="notranslate">GameMaker Studio 2</span> sont toutes stockées sous forme de nombres à virgule flottante ou d'entiers en double précision, vous pouvez toujours utiliser d'autres formats lorsque vous traitez avec des extensions. Celles-ci peuvent être transmises à <span class="notranslate">GameMaker Studio 2</span> depuis une extension
      puis vérifiés à l'aide de la fonction <tt>is_*()</tt> appropriée, dont la liste est disponible <a href="../GML_Reference/Variable_Functions/Variable_Functions.htm">ici</a>.</p>
    <p> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Tableaux</a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot"><label for="three">Un tableau est un type de données spécial qui peut être utilisé pour contenir plusieurs valeurs. Vous affectez le tableau à une variable, puis vous &quot;remplissez&quot; les différents indices du tableau avec des valeurs. Ce tableau peut ensuite être transmis à des scripts et à des fonctions sur la base d'un passage par référence. Toutefois, si vous modifiez le tableau transmis, il deviendra alors une copie du tableau original et devra donc être renvoyé à la variable originale pour que le tableau soit mis à jour. Pour plus d'informations sur les tableaux, veuillez consulter : <a href="Arrays.htm">Aperçu<span class="notranslate">GML</span></a>- Tableaux.</label></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">Structures</a></p>
  <div class="droptext" data-targetname="drop-down3">
    <p class="dropspot"><label for="eleven">Une structure (parfois appelée &quot;objet léger&quot;) est une structure de données brute qui sert de conteneur pour les variables de tous types de données. Vous attribuez une structure à une variable et dans la structure, vous pouvez ensuite définir d'autres variables, qui peuvent être lues ou écrites selon les besoins. Pour des informations plus détaillées sur les structures, veuillez consulter la section <a href="Structs.htm">Vue d'ensemble du<span class="notranslate">GML</span></a>- Structures.</label></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">Variables de la méthode</a></p>
  <div class="droptext" data-targetname="drop-down4">
    <p class="dropspot"><label for="twelve">Une variable de méthode est une variable à laquelle on a attribué une fonction et qui peut être utilisée exactement de la même manière qu'une fonction d'<span class="notranslate">exécution</span> <span class="notranslate">GML</span>. Pour des informations plus détaillées, veuillez consulter la section <a href="Method_Variables.htm">Variables de méthode</a>.</label></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#">Valeurs hexadécimales</a></p>
  <div class="droptext" data-targetname="drop-down5">
    <p class="dropspot"><span class="notranslate">GameMaker Studio 2</span> peut accepter les <b>littéraux hexadécimaux</b> comme des valeurs légitimes. Les valeurs hexadécimales sont particulièrement courantes lorsqu'on travaille avec des couleurs, mais elles peuvent être utilisées partout où une valeur entière positive est nécessaire. Notez que les valeurs hexadécimales peuvent
      être formatées de l'une des deux manières suivantes, où <span class="inline">&lt;<em>abcd</em>&gt;</span> est la valeur hexadécimale réelle :</p>
    <p class="code"><span style="background-color: transparent;">$&lt; abcd&gt;</span><span style="background-color: transparent;"></span><br> 0x&lt;
     <em>abcd&gt;</em></p>
    <p class="dropspot">Par exemple, les valeurs suivantes peuvent être exprimées en hexadécimal comme indiqué :</p>
    <p class="code">11406 = $2c8e = 0x2c8e<br> 16777215 = $ffffff = 0xffffff</p>
    <p> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#">Booléen</a></p>
  <div class="droptext" data-targetname="drop-down6">
    <p class="dropspot">Un booléen est simplement une valeur qui peut être soit <tt>vraie</tt>, soit <tt>fausse</tt>. Notez qu'actuellement, <span class="notranslate">GameMaker Studio 2</span> interprète un nombre réel égal ou inférieur à 0,5 comme une valeur <tt>fausse</tt>, et tout nombre réel supérieur à 0,5 comme une valeur <tt>vraie</tt>.
      Cela <i>ne</i> signifie <i>pas</i> pour autant que vous devez vérifier 1 et 0 (ou tout autre nombre réel) pour vrai et faux, car vous disposez également des <b>constantes</b> <tt>true</tt> et <tt>false</tt> qui doivent toujours être utilisées dans votre code pour
      pour éviter tout problème si des types de données booléennes réelles sont ajoutés dans une future mise à jour.</p>
    <p class="dropspot">Vous pouvez convertir tout nombre réel en une valeur implicitement booléenne à l'aide de la fonction suivante :</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="../GML_Reference/Variable_Functions/bool.htm">bool</a></li>
    </ul>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#">Pointeur</a></p>
  <div class="droptext" data-targetname="drop-down7">
    <p class="dropspot">Un pointeur est un type de données qui &quot;pointe&quot; vers un emplacement mémoire. Vous ne pouvez pas effectuer d'opérations sur un pointeur et il n'est utilisé que pour certaines fonctions très spécifiques, comme récupérer une adresse de texture ou de tampon en mémoire pour une autre fonction. Pour des exemples
      de fonctions qui renvoient un pointeur, vous pouvez voir <a href="../GML_Reference/Buffers/buffer_get_address.htm"><tt>buffer_get_address()</tt></a> ou <a href="../GML_Reference/Asset_Management/Sprites/Sprite_Information/sprite_get_texture.htm"><tt>sprite_get_texture()</tt></a>.</p>
    <p class="dropspot">Il existe également une fonction permettant de vérifier si une valeur est un pointeur (voir &quot; Vérification des<b>types de données &quot;,</b> ci-dessous) et une fonction permettant de convertir une valeur en un pointeur :</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="../GML_Reference/Variable_Functions/ptr.htm" style="background-color: transparent;">ptr</a></li>
    </ul>
    <p class="dropspot">Vous pouvez également utiliser (et obtenir en retour) les constantes intégrées suivantes lorsque vous utilisez des pointeurs :</p>
    <p class="dropspot"> </p>
    <table class=" cke_show_border">
      <tbody>
        <tr>
          <th>Constant</th>
          <th>Description</th>
        </tr>
        <tr>
          <td><span class="inline">pointer_null</span></td>
          <td>Cette constante indique que le pointeur ne pointe vers rien de significatif (comme <tt>NULL</tt> en C++ ou null en C#).</td>
        </tr>
        <tr>
          <td><span class="inline">pointer_invalid</span></td>
          <td>Cette constante signifie simplement que la valeur n'est pas un pointeur valide.</td>
        </tr>
      </tbody>
    </table>
    <p> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#">Enum</a></p>
  <div class="droptext" data-targetname="drop-down8">
    <p class="dropspot">Un enum est un &quot;énumérateur&quot;, et il vous permet essentiellement de créer votre propre type de données limité avec une liste de valeurs constantes. Les enums sont expliqués en détail sur la page consacrée aux <a href="Variables/Constants.htm">constantes</a>.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down9" href="#">Indéfini</a></p>
  <div class="droptext" data-targetname="drop-down9">
    <p class="dropspot"><label for="seven">Une valeur indéfinie (également connue sous le nom de valeur &quot;nulle&quot;) est une expression qui n'a pas de valeur correcte, bien qu'elle soit syntaxiquement correcte, et qui doit donc retourner quelque chose. Par exemple, disons que vous avez une <a href="../GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">carte DS</a> et que vous utilisez la fonction <a href="../GML_Reference/Data_Structures/DS_Maps/ds_map_find_value.htm"><tt>ds_map_find_value()</tt></a>. Que se passe-t-il lorsque la carte ne contient pas la valeur recherchée ? Eh bien, puisque la fonction est correctement formatée, et que le problème est que cette valeur n'existe pas, elle renvoie la <b>constante</b> <tt>undefined</tt>, et vous pouvez vérifier cette constante comme vous le feriez pour <tt>true</tt> ou toute autre valeur.</label></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down10" href="#">NaN</a></p>
  <div class="droptext" data-targetname="drop-down10">
    <p class="dropspot"><label for="nine"><tt>NaN</tt> signifie &quot;not a number&quot; (pas un nombre) et est une constante qui peut être renvoyée lorsque le compilateur ne peut pas évaluer les résultats d'une opération comme un nombre. Par exemple, 0/0 ne peut pas être défini comme un nombre réel, et est donc représenté par <tt>NaN</tt>, ou la racine carrée d'un nombre négatif - qui est considéré comme un nombre &quot;imaginaire&quot; - ne peut pas être représentée comme un nombre réel, et est donc représentée par NaN.</label></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down11" href="#">Infinity</a></p>
  <div class="droptext" data-targetname="drop-down11">
    <p class="dropspot">La constante <tt>infini</tt> fait référence à un nombre considéré comme infini, tel que le résultat que vous obtiendriez en divisant une valeur à virgule flottante par zéro, par exemple : 1,0/0.</p>
  </div>
  <p> </p>
  <p>Vous pouvez vérifier le type de données de n'importe quelle variable à l'aide des fonctions énumérées à la page suivante :</p>
  <ul class="colour">
    <li><a href="../GML_Reference/Variable_Functions/Variable_Functions.htm">Fonctions variables</a></li>
  </ul>
  <p>Vous pouvez également trouver ici des tableaux de types arithmétiques qui montrent les résultats de différentes opérations utilisant des types de données variables mixtes :</p>
  <ul class="colour">
    <li><a href="../../Additional_Information/Type_Tables.htm">Tableaux de type</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="GML_Overview.htm">Aperçu du<span class="notranslate">GML</span></a></div>
        <div style="float:right">Suivant : <a href="Instance_Keywords.htm">Mots clés d'instance</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Data Type - Real
Data Type - String
Data Type - Pointer
Data Type - Undefined
Data Type - Enum
Data Type - True
Data Type - False
Data Type - Array
Data Type - Boolean
Data Type - NaN
Data Type - Infinite
Data Type - Struct
real
string
pointer
undefined
enum
true
false
arrays
boolean
NaN
infinite
ptr
struct
pointer_null
pointer_invalid
-->
  <!-- TAGS
data_type
real
string
pointer
undefined
enum
true
false
arrays
boolean
ptr
struct
pointer_null
pointer_invalid
-->
</body>
</html>