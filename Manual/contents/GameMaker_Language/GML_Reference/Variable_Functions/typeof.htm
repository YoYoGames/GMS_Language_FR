<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>typeof</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function typeof" />
  <meta name="rh-index-keywords" content="typeof" />
  <meta name="search-keywords" content="typeof" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>typeof</h1>
  <p>Cette fonction renvoie le type de données d'une variable donnée sous forme de chaîne. Les valeurs de retour possibles sont énumérées dans le tableau ci-dessous :</p>
  <table>
    <tbody>
      <tr>
        <th>Chaîne de caractères</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>numéro</td>
        <td>La variable contient un nombre réel (à virgule flottante) - cela peut inclure <tt>NaN</tt> et l'<tt>infini</tt>.</td>
      </tr>
      <tr>
        <td>chaîne de caractères</td>
        <td>La variable contient une chaîne de caractères</td>
      </tr>
      <tr>
        <td>tableau</td>
        <td>La variable fait référence à un tableau</td>
      </tr>
      <tr>
        <td>bool</td>
        <td>La variable contient un booléen<tt>(vrai</tt> / <tt>faux</tt>).</td>
      </tr>
      <tr>
        <td>int32</td>
        <td>La variable contient un entier de 32 bits</td>
      </tr>
      <tr>
        <td>int64</td>
        <td>La variable contient un entier de 64 bits</td>
      </tr>
      <tr>
        <td>ptr</td>
        <td>La variable contient un pointeur</td>
      </tr>
      <tr>
        <td>indéfini</td>
        <td>La variable est indéfinie</td>
      </tr>
      <tr>
        <td>null</td>
        <td>La variable contient une valeur nulle (cela ne devrait pas être vu normalement).</td>
      </tr>
      <tr>
        <td>vec3</td>
        <td>La variable contient un vecteur de 3 valeurs</td>
      </tr>
      <tr>
        <td>vec4</td>
        <td>La variable contient un vecteur de 4 valeurs</td>
      </tr>
      <tr>
        <td>méthode</td>
        <td>La variable contient une référence de fonction</td>
      </tr>
      <tr>
        <td>struct</td>
        <td>La variable contient une référence de structure</td>
      </tr>
      <tr>
        <td>inconnu</td>
        <td>La valeur est inconnue. Ce message <i>ne</i> devrait <i>jamais</i> être vu et signifie que quelque chose a mal tourné au niveau le plus basique, comme un écrasement de la mémoire.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>Veuillez noter qu'il existe des cas où cette fonction peut ne pas retourner la valeur correcte pour une <strong>méthode</strong>. Considérons les deux définitions de fonction suivantes :</p>
  <p class="code">a = fonction()<br> {<br> // quelque chose<br> } <br>
    <br> function b()<br> {<br> // quelque chose<br> }</p>
  <p>Techniquement, ils sont tous deux considérés comme des méthodes puisqu'ils lient une fonction à une variable de portée d'instance. Cependant, l'appel de <span class="inline">typeof()</span> sur la fonction <span class="inline">b</span> renverra &quot;nombre&quot; et non &quot; <em>méthode&quot;, </em>
    alors que l'appeler sur <span class="inline">a</span> retournera &quot;méthode&quot;. Cela est dû au fait que les méthodes créées comme celle de <span class="inline">b</span> se voient attribuer des indices de script (qui sont des valeurs entières), puisque c'est la manière dont le compilateur reconnaît les scripts.
    manière dont le compilateur reconnaît les fonctions de script, même si la fonction n'a pas été définie dans un script.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">typeof(variable) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>variable</td>
        <td>La variable dont on veut obtenir le type de données.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">String (voir tableau, ci-dessus)</p>
  <p> </p>
  <h4><b>Exemple :</b></h4>
  <p class="code">var _str = typeof(global.ExtensionInput) ;<br> show_debug_message(&quot; <strong>global.ExtensionInput est un &quot; + _str) ;</strong></p>
  <p>Le code ci-dessus récupère le type de données détenu par la variable globale donnée et renvoie la chaîne de caractères à une variable locale qui est ensuite utilisée pour afficher un message sur la console.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Variable_Functions.htm">Fonctions variables</a></div>
        <div style="float:right">Suivant : <a href="bool.htm">bool</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
typeof
-->
  <!-- TAGS
typeof
-->
</body>
</html>