<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>get_string_async</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for get_string_async" />
  <meta name="rh-index-keywords" content="get_string_async" />
  <meta name="search-keywords" content="get_string_async" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>get_string_async</h1>
  <p>Cette fonction ouvre une fenêtre et affiche un message ainsi qu'un espace permettant à l'utilisateur de saisir une chaîne (qui contiendra la chaîne par défaut fournie pour commencer). Il s'agit d'une fonction asynchrone et, à ce titre, <span class="notranslate">GameMaker Studio 2</span> <i>ne</i> bloque <i>pas</i> le périphérique sur lequel elle est exécutée en attendant une réponse.
    le périphérique sur lequel elle est exécutée en attendant une réponse, mais continue à exécuter les événements normalement. Une fois que l'utilisateur a tapé sa chaîne de caractères et appuyé sur le bouton &quot;OK&quot;, un <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Dialog.htm">événement </a>asynchrone <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Dialog.htm">Dialog est </a>déclenché.
    déclenché qui, pour la durée de cet événement <i>uniquement</i>, aura une carte DS stockée dans la variable <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a>.</p>
  <p>Cette carte contiendra les trois clés suivantes : &quot; id &quot;,<strong>&quot;</strong> status &quot; et &quot;<strong>result</strong>&quot;.
    sera soit <tt>vrai</tt> si le bouton &quot;Okay&quot; a été pressé, soit faux si <tt>le</tt> message a été annulé (le cas échéant, car toutes les plateformes cibles ne permettent pas d'annuler le message). Enfin, &quot;result&quot; renverra la chaîne
    que l'utilisateur a saisie (ou une chaîne vide &quot;&quot; si aucune n'a été fournie).</p>
  <p class="note"><strong><em>NOTE :</em></strong><em> Cette fonction est <span data-keyref="Dialog for debug only"> <strong>réservée à un usage de débogage et de test</strong></span>et ne doit pas être utilisée dans les jeux publiés. Dans ce cas, vous devez créer une interface utilisateur personnalisée pour recevoir les entrées des joueurs, de manière à avoir un contrôle total sur l'apparence et le comportement des boîtes de dialogue.</em></p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">get_string_async(string, default) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>Chaîne de caractères</td>
        <td>Le message à afficher dans la boîte de dialogue.</td>
      </tr>
      <tr>
        <td>par défaut</td>
        <td>La chaîne par défaut.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Exemple étendu :</h4>
  <p> </p>
  <p>L'<b>événement de pression de la souris gauche</b> (par exemple) de l'objet qui affiche le message aurait le code suivant :</p>
  <p class="code">msg = get_string_async(&quot;What's your name ?&quot;, &quot;Anon&quot;) ;</p>
  <p>L'exemple ci-dessus affiche un message demandant à l'utilisateur de saisir une chaîne de caractères et d'appuyer sur &quot;Okay&quot;. L'identifiant de la fonction est stocké dans la variable &quot;msg&quot; et sera utilisé dans l'événement asynchrone Dialogs, comme indiqué ci-dessous :</p>
  <p class="code">var i_d = ds_map_find_value(async_load, &quot;id&quot;) ;<br> if i_d == msg<br> {
    <br> if ds_map_find_value(async_load, &quot;status&quot;)<br> {
    <br> if ds_map_find_value(async_load, &quot;result&quot;) != &quot;&quot;<br> {
    <br> global.Name = ds_map_find_value(async_load, &quot;result&quot;) ;<br> }
    <br> }
    <br> }
  </p>
  <p>Le code ci-dessus vérifie la clé &quot;id&quot; de la carte DS retournée <tt>par rapport à</tt> la valeur stockée dans la variable &quot;msg&quot;. S'il s'agit de la même chose, il vérifie ensuite si l'utilisateur a appuyé sur &quot;Okay&quot; (plutôt que de fermer/annuler la fenêtre).
    et s'il retourne <tt>vrai</tt>, il vérifie ensuite le &quot;résultat&quot; d'une chaîne de caractères pour s'assurer qu'aucune chaîne vide n'a été retournée avant de définir une variable globale.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Dialog.htm">Dialogue</a></div>
        <div style="float:right">Suivant : <a href="get_integer_async.htm">get_integer_async</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
get_string_async
-->
  <!-- TAGS
get_string_async
-->
</body>
</html>