<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>get_integer_async</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for get_integer_async" />
  <meta name="rh-index-keywords" content="get_integer_async" />
  <meta name="search-keywords" content="get_integer_async" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>get_integer_async</h1>
  <p>Cette fonction ouvre une fenêtre et affiche un message ainsi qu'un espace pour que l'utilisateur puisse saisir une valeur (qui contiendra la valeur par défaut fournie pour commencer). Il s'agit d'une fonction asynchrone, et en tant que telle, <span class="notranslate">GameMaker Studio 2</span> <i>ne</i> bloque <i>pas</i> le périphérique sur lequel elle est exécutée pendant qu'elle attend le chargement du message.
    le périphérique sur lequel elle est exécutée en attendant une réponse, mais continue à exécuter les événements normalement. Une fois que l'utilisateur a tapé sa chaîne de caractères et appuyé sur le bouton &quot;OK&quot;, un événement asynchrone est déclenché. <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Dialog.htm"><b>Dialogue</b></a>    est déclenché et, pendant la durée de cet événement <i>uniquement</i>, une carte DS est stockée dans la variable <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a>.</p>
  <p>Cette carte contiendra les trois clés, &quot; id &quot;,<tt>&quot;</tt> status &quot; et &quot;<tt>value &quot;</tt>. &quot; id &quot; est la<tt>valeur</tt> renvoyée<tt>par la</tt> fonction lorsqu'elle est appelée, le &quot; status &quot; sera soit vrai si le bouton &quot; Okay &quot; a été pressé, soit <tt>faux</tt> si le message a été annulé (le cas échéant, car <tt>toutes les</tt> plateformes cibles ne permettent pas d'annuler les messages). Enfin, &quot;value<tt>&quot;</tt> renverra l'entier que l'utilisateur a entré sous forme de chaîne (une chaîne vide &quot;...&quot;).
    sous la forme d'une chaîne (une chaîne vide &quot;&quot; sera renvoyée si aucune entrée n'a été donnée).</p>
  <p class="note"><strong><em>NOTE :</em></strong><em> Cette fonction est <span data-keyref="Dialog for debug only"> <strong>réservée à un usage de débogage et de test</strong></span>et ne doit pas être utilisée dans les jeux publiés. Dans ce cas, vous devez créer une interface utilisateur personnalisée pour recevoir les entrées des joueurs, de manière à avoir un contrôle total sur l'apparence et le comportement des boîtes de dialogue.</em></p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">get_integer_async(string, default) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>Chaîne de caractères</td>
        <td>Le message à afficher dans la boîte de dialogue.</td>
      </tr>
      <tr>
        <td>par défaut</td>
        <td>La valeur par défaut.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Exemple étendu :</h4>
  <p>L'<b>événement de pression de la souris gauche</b> (par exemple) de l'objet qui affiche le message aurait le code suivant :</p>
  <p class="code">msg = get_integer_async(&quot;Quel âge as-tu ?&quot;, 0) ;</p>
  <p>L'exemple ci-dessus affiche un message demandant à l'utilisateur de saisir une chaîne de caractères et d'appuyer sur &quot;Okay&quot;. L'identifiant de la fonction est stocké dans la variable &quot;msg&quot; et sera utilisé dans l'événement asynchrone Dialogs, comme indiqué ci-dessous :</p>
  <p class="code">var i_d = ds_map_find_value(async_load, &quot;id&quot;) ;<br> if i_d == msg<br> {
    <br> if ds_map_find_value(async_load, &quot;status&quot;)<br> {
    <br> global.Age = ds_map_find_value(async_load, &quot;value&quot;) ;<br> }
    <br> }
  </p>
  <p>Le code ci-dessus vérifie la<tt>clé</tt>&quot; id &quot; de la carte DS retournée <tt>par rapport à</tt> la valeur stockée dans la variable &quot; msg &quot;. S'il s'agit de la même chose, il vérifie ensuite si l'on a appuyé sur &quot;Okay&quot; (plutôt que de fermer/annuler la fenêtre).
    la fenêtre a été fermée/annulée) et s'il retourne <tt>vrai</tt>, il définit alors une variable globale à partir de l'entier retourné.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Dialog.htm">Dialogue</a></div>
        <div style="float:right">Suivant : <a href="show_message_async.htm">show_message_async</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
get_integer_async
-->
  <!-- TAGS
get_integer_async
-->
</body>
</html>