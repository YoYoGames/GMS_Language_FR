<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>show_message_async</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for show_message_async" />
  <meta name="rh-index-keywords" content="show_message_async" />
  <meta name="search-keywords" content="show_message_async" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>show_message_async</h1>
  <p>Cette fonction ouvre une fenêtre et affiche le message que vous avez défini dans la fonction à l'utilisateur. Il s'agit d'une fonction asynchrone et, à ce titre, <span class="notranslate">GameMaker Studio 2</span> <i>ne</i> bloque <i>pas</i> le périphérique sur lequel elle est exécutée en attendant une réponse.
    mais continue à exécuter les événements normalement. Une fois que l'utilisateur a appuyé sur le bouton &quot;OK&quot;, un événement asynchrone est déclenché. <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Dialog.htm"><b>Dialogue</b></a> asynchrone est déclenché qui, pendant la durée
    de cet événement <i>seulement</i>, un ds_map sera stocké dans la variable <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a>.</p>
  <p>Cette carte contiendra les deux clés, &quot;id&quot; et &quot;status&quot;, &quot;id&quot; étant la valeur renvoyée par la fonction lorsqu'elle a été appelée, et &quot;status&quot; étant soit vrai si le bouton &quot;Okay&quot; a été pressé, soit faux si le message a été annulé (si disponible, car toutes les plateformes cibles ne permettent pas l'annulation des dialogues).
    appuyé, ou <tt>false</tt> si le message a été annulé (si disponible, car toutes les plateformes cibles ne permettent pas l'annulation des dialogues).</p>
  <p class="note"><strong><em>NOTE :</em></strong><em> Cette fonction est <span data-keyref="Dialog for debug only"> <strong>réservée à un usage de débogage et de test</strong></span>et ne doit pas être utilisée dans les jeux publiés. Dans ce cas, vous devez créer une interface utilisateur personnalisée pour recevoir les entrées des joueurs, de manière à avoir un contrôle total sur l'apparence et le comportement des boîtes de dialogue.</em></p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">show_message_async(string) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>Chaîne de caractères</td>
        <td>Le message à montrer à l'utilisateur.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Exemple étendu :</h4>
  <p>L'<b>événement de pression de la souris gauche</b> (par exemple) de l'objet qui affiche le message aurait le code suivant :</p>
  <p class="code">msg = show_message_async(&quot;Vous allez maintenant être conduit au magasin&quot;) ;</p>
  <p>L'exemple ci-dessus affichera un message avec la chaîne de caractères donnée. L'identifiant du message est stocké dans la variable &quot;msg&quot; et sera utilisé dans l'événement asynchrone Dialogs comme indiqué ci-dessous :</p>
  <p class="code">var i_d, stat ;<br> i_d = ds_map_find_value(async_load, &quot;id&quot;) ;<br> if i_d == msg<br> {
    <br> if ds_map_find_value(async_load, &quot;status&quot;)<br> {
    <br> url_open(&quot;https://play.google.com/store&quot;) ;
    <br> }
    <br> }
  </p>
  <p>Le code ci-dessus vérifie la clé &quot;id&quot; de la carte DS retournée <tt>par rapport à</tt> la valeur stockée dans la variable &quot;msg&quot;. S'il s'agit de la même chose, il vérifie ensuite si le bouton &quot;Okay&quot; a été pressé (plutôt que de fermer/annuler la fenêtre).
    fermée/annulée) et s'il retourne <tt>vrai</tt>, il ouvre une url.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Dialog.htm">Dialogue</a></div>
        <div style="float:right">Suivant : <a href="show_question_async.htm">show_question_async</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
show_message_async
-->
  <!-- TAGS
show_message_async
-->
</body>
</html>