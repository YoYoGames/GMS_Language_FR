<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>show_message_async</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page de référence pour show_message_async" />
  <meta name="rh-index-keywords" content="show_message_async" />
  <meta name="search-keywords" content="show_message_async" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>show_message_async</h1><p> Cette fonction ouvre une fenêtre et affiche le message que vous définissez dans la fonction à l&#39;utilisateur. Il s&#39;agit d&#39;une fonction asynchrone et, en tant que telle, <span class="notranslate">GameMaker Studio 2</span> ne <i>bloque pas</i> le périphérique sur lequel il est exécuté en attendant une réponse, mais continue plutôt à exécuter les événements normalement. Une fois que l&#39;utilisateur a appuyé sur le bouton &quot;Okay&quot;, un <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Dialog.htm"><b>événement de dialogue</b></a> asynchrone est déclenché qui, pour la durée de cet événement <i>uniquement</i>, aura un ds_map stocké dans la variable <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a>.</p><p> Cette carte contiendra les deux clés, &quot;id&quot; et &quot;status&quot;, avec &quot;id&quot; étant la valeur qui a été retournée par la fonction lors de l&#39;appel, et le &quot;status&quot; étant soit <tt>true</tt> pour le bouton &quot;OK&quot; enfoncé, ou <tt>false</tt> si le message a été annulé (si disponible car toutes les plates-formes cibles ne permettent pas l&#39;annulation des dialogues).</p><p></p><h4> Syntaxe:</h4><p class="code">show_message_async(string);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">String</span></td><td> Le message à montrer à l&#39;utilisateur.</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">Real</p><p></p><h4> Exemple étendu:</h4><p> L&#39; <b>événement de pression gauche de la souris</b> (par exemple) de l&#39;objet qui affiche le message aurait le code suivant:</p><p class="code">msg = show_message_async(&quot;You will now be taken to the store&quot;);</p><p> Ce qui précède affichera un message avec la chaîne donnée. L&#39;identifiant du message est stocké dans la variable &quot;msg&quot; et sera utilisé dans l&#39;événement Dialogues asynchrones comme indiqué ci-dessous:</p><p class="code">var i_d, stat;<br/> i_d = ds_map_find_value(async_load, &quot;id&quot;);<br/> if i_d == msg<br/>     {
    <br/>     if ds_map_find_value(async_load, &quot;status&quot;)<br/>         {
    <br/>         url_open(&quot;https://play.google.com/store&quot;);
    <br/>         }
    <br/>     }
  </p><p> Le code ci-dessus vérifie la clé &quot;id&quot; du retour <tt>DS Map</tt> par rapport à la valeur stockée dans la variable &quot;msg&quot;. S&#39;ils sont identiques, il vérifie alors si le bouton &quot;Okay&quot; a été enfoncé (plutôt que la fenêtre étant fermée / annulée) et s&#39;il revient <tt>true</tt> il ouvre une URL. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Dialog.htm">Dialogue</a></div><div style="float:right"> Suivant:<a href="show_question_async.htm">show_question_async</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
show_message_async
-->
  <!-- TAGS
show_message_async
-->
</body>
</html>