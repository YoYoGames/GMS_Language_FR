<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>http_post_string</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page de référence pour http_post_string" />
  <meta name="rh-index-keywords" content="http_post_string" />
  <meta name="search-keywords" content="http_post_string" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>http_post_string</h1><p> En informatique, une <b>demande de publication</b> est utilisée lorsque le client a besoin d&#39;envoyer des données au serveur dans le cadre de la demande de récupération, par exemple lors du téléchargement d&#39;un fichier ou de la soumission d&#39;un formulaire rempli, et il en va de même pour cette fonction dans <span class="notranslate">GameMaker Studio 2</span>. Contrairement à la <span class="inline"><a href="http_get.htm">http_get()</a></span> méthode de requête où seule une URL est envoyée au serveur, <tt>http_post_string()</tt> inclut également une chaîne qui est envoyée au serveur et peut entraîner la création d&#39;une nouvelle ressource ou la mise à jour d&#39;une ressource existante ou les deux. Il convient de noter que les paramètres de requête HTTP (les bits parfois «cloués» à la fin d&#39;une URL lorsque vous soumettez un formulaire sur une page Web) sont parfaitement acceptables lors de l&#39;utilisation de cette fonction également.</p><p class="note"> <b>REMARQUE:</b> vous devez savoir qu&#39;en raison de la protection XSS dans les navigateurs, les demandes et les tentatives de chargement de ressources à partir de plusieurs domaines sont bloquées et peuvent sembler renvoyer des résultats vides. Veuillez consulter la partie sur les <a href="HTTP.htm">problèmes interdomaines</a> pour plus de détails.</p><p> Cet événement générera un &quot;rappel&quot; qui est capté par tous <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/HTTP.htm">les événements HTTP</a>, auquel cas il générera une <a href="../../Data_Structures/DS_Maps/DS_Maps.htm">carte DS</a> (plus communément appelée &quot;dictionnaire&quot;) qui est exclusive à cet événement et est stockée dans la variable spéciale <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><b>async_load</b></a>. Cette carte DS contiendra des valeurs différentes selon que des données sont renvoyées ou non. Par exemple, si vous avez demandé un fichier, l&#39;événement se déclenchera plusieurs fois lorsque chaque paquet de données est reçu afin que vous puissiez afficher une barre de progression, par exemple. La structure générale de la carte DS sera la suivante:</p><ul class="colour"><li> <b>id:</b> l&#39;ID renvoyé par la commande. Si vous déclenchez une série de <tt>http_</tt> demandes, vous devez savoir à laquelle vous obtenez la réponse, et vous utiliserez donc cette valeur pour la comparer à la valeur que vous avez stockée lorsque vous avez initialement envoyé la demande pour trouver la bonne.</li><li> <b>status:</b> renvoie une valeur inférieure à 0 pour une erreur, 0 pour complet et 1 pour recevoir des paquets (voir ci-dessous pour plus de détails).</li><li> <b>résultat:</b> les données reçues (chaîne uniquement).</li><li> <b>url: l&#39;</b> URL complète que vous avez demandée.</li><li> <b>http_status:</b> Le code d&#39;état http brut (si disponible). Cela renvoie le code d&#39;état Web standard pour la plupart des navigateurs, par exemple: 304 pour &quot;Non modifié&quot; ou 204 pour &quot;Aucun contenu&quot;, etc...</li></ul><p> S&#39;il y a plusieurs paquets retournés à votre jeu, la touche de rappel &quot;status&quot; renverra 1, auquel cas la carte DS aura les clés supplémentaires suivantes:</p><ul class="colour"><li> <b>&quot;contentLength&quot;:</b> C&#39;est la taille du fichier que le serveur Web a dit que vous devriez vous attendre à recevoir (peut être -1 si le serveur ne renvoie pas ces données).</li><li> <b>&quot;sizeDownloaded&quot;:</b> la taille des données déjà téléchargées.</li></ul><p></p><h4> Syntaxe:</h4><p class="code">http_post_string(url, string);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">url</span></td><td> L&#39;adresse Web du serveur dont vous souhaitez obtenir des informations</td></tr><tr><td> <span class="notranslate">string</span></td><td> La chaîne que vous souhaitez envoyer à l&#39;URL spécifiée</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">Real</p><p></p><h4> Exemple étendu:</h4><p> Le <tt>http_post_string()</tt> La fonction peut être appelée à partir de n&#39;importe quel événement, et comme elle est asynchrone, le rappel peut être presque instantané ou prendre plusieurs secondes. L&#39;appel de la fonction est simple et ressemblerait à ceci:</p><p class="code">var str = &quot;name=&quot; + global.player_name + &quot;&amp;score=&quot; + string(global.player_score);<br/> post = http_post_string(&quot;http://www.angusgames.com/game?game_id=&quot; + string(global.game_id), str);</p><p> Le code ci-dessus envoie une demande de récupération à l&#39;URL spécifiée avec les paramètres donnés ainsi que l&#39;envoi des données supplémentaires (nom du joueur et score au format URL encodé) stockées dans la variable str. Cela déclenchera tous les <b>événements Http</b> asynchrones définis si un rappel est reçu, et vous pouvez vérifier l &#39;«id» renvoyé par rapport à celui stocké dans la variable <tt>post</tt> pour vous assurer que vous exécutez le bon code si vous avez utilisé divers <tt>http_post_string()</tt> les fonctions. L&#39;exemple de code suivant montre comment procéder:</p><p class="code">var r_str = &quot;null&quot;;<br/> if ds_map_find_value(async_load, &quot;id&quot;) == post<br/>     {
    <br/>     if ds_map_find_value(async_load, &quot;status&quot;) == 0<br/>         {
    <br/>         r_str = ds_map_find_value(async_load, &quot;result&quot;);<br/>         }
    <br/>     }
  </p><p> Le code ci-dessus vérifiera d&#39;abord l&#39;identifiant de la carte DS créée, puis vérifiera l&#39;état du rappel. Si la valeur est égale à 0 (signalant le succès), le résultat du rappel sera alors stocké dans une variable pour une utilisation future, sinon la variable contiendra simplement une valeur par défaut (dans ce cas &quot;null&quot;). </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="HTTP.htm">HTTP</a></div><div style="float:right"> Suivant:<a href="http_get_request_crossorigin.htm">http_get_request_crossorigin</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
http_post_string
-->
  <!-- TAGS
http_post_string
-->
</body>
</html>