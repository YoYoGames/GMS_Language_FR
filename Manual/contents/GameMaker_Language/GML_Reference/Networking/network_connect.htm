<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>réseau_connect</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for network_connect" />
  <meta name="rh-index-keywords" content="network_connect" />
  <meta name="search-keywords" content="network_connect" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>réseau_connect</h1>
  <p>Avec cette fonction, vous pouvez envoyer une requête pour vous connecter à un serveur. La fonction prend l'<i>identifiant de la socket</i> à utiliser pour se connecter (voir <a href="network_create_socket.htm"><tt>réseau_créer_socket()</tt></a>) et vous demande d'indiquer l'adresse IP à laquelle se connecter (une chaîne de caractères) ainsi que le nom du serveur.
    Si la connexion échoue, une valeur inférieure à 0 sera renvoyée. La connexion utilise un protocole spécial qui garantit que seuls les jeux <span class="notranslate">GameMaker Studio 2</span> se connectent les uns aux autres.
    de vous connecter à un serveur qui n'est pas un jeu <span class="notranslate">GameMaker Studio 2</span>, vous pouvez utiliser la commande <a href="network_connect_raw.htm"><tt>réseau_connect_raw()</tt></a>. Notez que, par défaut, la fonction est synchrone, ce qui signifie que votre jeu peut sembler &quot; se bloquer &quot; pendant que la connexion est établie.
    pendant que la connexion est établie. Vous pouvez définir une valeur de timeout pour la connexion, ou alternativement rendre la création asynchrone, en utilisant la fonction <tt><a href="network_set_config.htm">réseau_set_config()</a></tt>ou encore utiliser la fonction
    <span class="inline"><a href="network_connect_async.htm">network_connect_async()</a></span> à la place.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">network_connect(socket, url, port) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>prise de courant</td>
        <td>L'identifiant du socket à utiliser.</td>
      </tr>
      <tr>
        <td>url</td>
        <td>L'URL ou l'IP à laquelle se connecter (une chaîne).</td>
      </tr>
      <tr>
        <td>port</td>
        <td>Le port auquel se connecter.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">client = network_create_socket(network_socket_tcp) ;<br> network_connect(client, &quot;192.134.0.1&quot;, 6510) ;</p>
  <p>Le code ci-dessus va créer un nouveau socket TCP et tenter de se connecter à travers celui-ci à l'adresse IP donnée sur le port 6510.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Networking.htm">Mise en réseau</a></div>
        <div style="float:right">Suivant : <a href="network_connect_async.htm">network_connect_async</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
network_connect
-->
  <!-- TAGS
network_connect
-->
</body>
</html>