<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>La mise en réseau</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Section de référence pour les fonctions de mise en réseau" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="La mise en réseau" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> La mise en réseau</h1><p> Les fonctions de mise en réseau de <span class="notranslate">GameMaker Studio 2</span> <i>sont basées sur des sockets</i>, ce qui est une norme de l&#39;industrie sur toutes les plates-formes. Avec les sockets, vous avez la possibilité de créer à la fois des clients et des serveurs en utilisant un simple <span class="notranslate">GML</span> qui vous permet de créer même une partie solo en utilisant le modèle client / serveur (quelque chose qui permettra d&#39;ajouter facilement le multijoueur plus tard).</p><p> Fondamentalement, une socket est un objet qui peut envoyer, recevoir, se connecter et écouter des <i>ports</i> sur le réseau. Ces fonctions ne concernent que les connexions TCP / IP, sur lesquelles Internet est basé (IPv4 pour être plus précis). En substance, cela vous permet de connecter un socket en utilisant une adresse IP (disons 192.168.1.10) à un autre socket sur une autre adresse IP (par exemple 192.168.1.11). Une fois connectés, ces deux sockets peuvent envoyer des données dans les deux sens en utilisant le <tt>network_send_*</tt> fonctions (comme <a href="network_send_packet.htm"><tt>network_send_packet()</tt></a> ) et l&#39;événement asynchrone dédié qui est déclenché par eux. Cet événement asynchrone générera une <a href="../Data_Structures/DS_Maps/DS_Maps.htm">carte DS</a> contenant les données reçues ainsi que d&#39;autres détails, et vous pouvez trouver les détails complets dans la section sur l&#39; <a href="../../../The_Asset_Editors/Object_Properties/Async_Events/Networking.htm">événement asynchrone réseau</a>.</p><p> Au lieu que les programmes aient à lire et à gérer chaque bit de trafic réseau entrant dans une machine, les adresses IP traitent également des ports, qui sont numérotés de 0 à 65535. Cela permet à chaque programme d&#39;obtenir uniquement les paquets de données qui l&#39;intéressent, et pas tout ce qui a été envoyé par chaque programme. Cela permet également de gagner un temps CPU considérable, car cela réduit considérablement le traitement des données, donc avec <span class="notranslate">GameMaker Studio 2</span> vous pouvez également «écouter» les ports. Ainsi, un serveur créera un socket, puis le liera à un port spécifique pour l&#39;écouter. Il sera alors informé des connexions, des déconnexions et des transferts de données à partir de ce socket.</p><p> Les &quot;paquets&quot; de données eux-mêmes sont constitués de données binaires extraites d&#39;un tampon. Ce tampon peut être créé et manipulé à l&#39;aide des <a href="../Buffers/Buffers.htm">fonctions de tampon de</a> <span class="notranslate">GameMaker Studio 2</span>.</p><p> Il est à noter que si vous créez un projet pour la cible HTML5, vous ne pourrez pas utiliser les fonctions de création du serveur en raison des restrictions du navigateur et devrez écrire votre propre serveur pour cette plate-forme en utilisant quelque chose comme <strong>Electron</strong> ou <strong>NodeJS</strong>. Notez également que si votre jeu est multiplateforme et que vous prévoyez de vous connecter à une instance HTML5 du jeu à partir d&#39;un serveur fonctionnant sur un appareil mobile ou de bureau, alors votre serveur ne peut communiquer avec l&#39;instance HTML5 qu&#39;en utilisant le protocole Web Socket (ceci est fait en utilisant la constante <tt>network_socket_ws</tt> - voir <a href="network_create_server.htm"><tt>network_create_server()</tt></a> pour plus d&#39;informations). Cela signifie que votre serveur devra peut-être créer deux sockets sur des ports différents, un pour se connecter à des cibles non HTML5 ( <span class="notranslate">Android</span>, <span class="notranslate">Windows</span>, etc...) et un pour se connecter à la cible HTML5.</p><p> Vous pouvez utiliser les fonctions suivantes pour la mise en réseau: </p><p></p><ul class="colour"><li><a href="network_create_server.htm">network_create_server</a></li><li><a href="network_create_server_raw.htm">network_create_server_raw</a></li><li><a href="network_create_socket.htm">network_create_socket</a></li><li><a href="network_create_socket_ext.htm">network_create_socket_ext</a></li><li><a href="network_connect.htm">network_connect</a></li><li><a href="network_connect_async.htm">network_connect_async</a></li><li><a href="network_connect_raw.htm">network_connect_raw</a></li><li><a href="network_connect_raw_async.htm">network_connect_async_raw</a> </li><li><a href="network_resolve.htm">network_resolve</a></li><li><a href="network_set_config.htm">network_set_config</a></li><li><a href="network_set_timeout.htm">network_set_timeout</a></li><li><a href="network_send_broadcast.htm">network_send_broadcast</a></li><li><a href="network_send_packet.htm">network_send_packet</a></li><li><a href="network_send_raw.htm">network_send_raw</a></li><li><a href="network_send_udp.htm">network_send_udp</a></li><li><a href="network_send_udp_raw.htm">network_send_udp_raw</a></li><li><a href="network_destroy.htm">network_destroy</a></li></ul><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="../GML_Reference.htm">Référence <span class="notranslate">GML</span></a></div><div style="float:right"> Suivant: <a href="../Web_And_HTML5/Web_And_HTML5.htm">Web</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Networking
-->
  <!-- TAGS
networking_functions
-->
</body>
</html>