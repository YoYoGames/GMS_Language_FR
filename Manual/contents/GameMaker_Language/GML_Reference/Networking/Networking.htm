<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Mise en réseau</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for the Networking  functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Networking" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Mise en réseau</h1>
  <p>Les fonctions de mise en réseau de <span class="notranslate">GameMaker Studio 2</span> sont basées sur les <i>sockets</i>, qui constituent une norme industrielle sur toutes les plates-formes. Avec les sockets, vous avez la possibilité de créer des clients et des serveurs à l'aide d'un simple <span class="notranslate">GML</span>, ce qui vous permet de créer même un jeu à un seul joueur en utilisant le modèle client/serveur (ce qui permettra d'ajouter facilement le multijoueur plus tard).
    joueur en utilisant le modèle client/serveur (ce qui permettra d'ajouter facilement le multijoueur par la suite).</p>
  <p>Fondamentalement, un socket est un objet qui peut envoyer, recevoir, se connecter et écouter des <i>ports</i> sur le réseau. Ces fonctions traitent uniquement les connexions TCP/IP, sur lesquelles Internet est basé (IPv4 pour être plus précis). En substance, cela vous permet de
    connecter un socket utilisant une adresse IP (disons 192.168.1.10) à un autre socket sur une autre adresse IP (disons 192.168.1.11). Une fois connectées, ces deux sockets peuvent envoyer des données dans les deux sens à l'aide des fonctions <tt>network_send_*</tt> (par exemple <a href="network_send_packet.htm"><tt>réseau_send_packet()</tt></a>)
    et l'événement asynchrone dédié qui est déclenché par celles-ci. Cet événement asynchrone génère une <a href="../Data_Structures/DS_Maps/DS_Maps.htm">carte DS</a> contenant les données reçues ainsi que d'autres détails, et vous pouvez trouver tous les détails
    dans la section sur l'<a href="../../../The_Asset_Editors/Object_Properties/Async_Events/Networking.htm">événement asynchrone réseau</a>.</p>
  <p>Au lieu que les programmes aient à lire et à traiter chaque partie du trafic réseau entrant dans une machine, les adresses IP traitent également les ports, qui sont numérotés de 0 à 65535. Cela permet à chaque programme de ne recevoir que les paquets de données qui l'intéressent.
    et non pas tout ce qui a été envoyé par chaque programme. Cela permet également de gagner un temps considérable sur le processeur, car cela réduit considérablement le traitement des données. Avec <span class="notranslate">GameMaker Studio 2</span>, vous pouvez donc également "écouter" les ports. Ainsi, un serveur créera un socket, puis le liera à un port spécifique afin d'écouter les ports.
    l'associer à un port spécifique à écouter. Il sera alors informé des connexions, déconnexions et transferts de données à partir de ce socket.</p>
  <p>Les &quot;paquets&quot; de données sont eux-mêmes constitués de données binaires extraites d'un tampon. Ce tampon peut être créé et manipulé à l'aide des <a href="../Buffers/Buffers.htm">fonctions Buffer de</a> <span class="notranslate">GameMaker Studio 2</span>.</p>
  <p>Il convient de noter que si vous créez un projet pour la cible HTML5, vous ne pourrez pas utiliser les fonctions de création de serveur en raison des restrictions du navigateur et devrez écrire votre propre serveur pour cette plateforme en utilisant quelque chose comme <strong>Electron </strong>ou
   <strong>NodeJS</strong>. Notez également que si votre jeu est multiplateforme et que vous prévoyez de vous connecter à une instance HTML5 du jeu à partir d'un serveur fonctionnant sur un appareil mobile ou de bureau, votre serveur peut uniquement communiquer avec l'instance HTML5
    en utilisant le protocole Web Socket (cela se fait à l'aide de la constante <tt>network_socket_ws</tt> - cf. <a href="network_create_server.htm"><tt>network_create_server()</tt></a> pour plus d'informations). Cela signifie que votre serveur devra peut-être créer deux sockets
    sur des ports différents, l'un pour se connecter aux cibles non HTML5<span class="notranslate">(Android</span>, <span class="notranslate">Windows</span>, etc...) et l'autre pour se connecter à la cible HTML5.</p>
  <p>Les fonctions suivantes peuvent être utilisées pour la mise en réseau :</p>
  <p> </p>
  <ul class="colour">
    <li><a href="network_create_server.htm">réseau_créer_serveur</a></li>
    <li><a href="network_create_server_raw.htm">réseau_créer_serveur_raw</a></li>
    <li><a href="network_create_socket.htm">réseau_créer_socket</a></li>
    <li><a href="network_create_socket_ext.htm">réseau_créer_socket_ext</a></li>
    <li><a href="network_connect.htm">réseau_connect</a></li>
    <li><a href="network_connect_async.htm">réseau_connexion_asynchrone</a></li>
    <li><a href="network_connect_raw.htm">réseau_connexion_raw</a></li>
    <li><a href="network_connect_raw_async.htm">réseau_connect_async_raw</a></li>
    <li><a href="network_resolve.htm">résolution de réseau</a></li>
    <li><a href="network_set_config.htm">réseau_set_config</a></li>
    <li><a href="network_set_timeout.htm">réseau_set_timeout</a></li>
    <li><a href="network_send_broadcast.htm">réseau_send_broadcast</a></li>
    <li><a href="network_send_packet.htm">réseau_envoi_paquet</a></li>
    <li><a href="network_send_raw.htm">réseau_send_raw</a></li>
    <li><a href="network_send_udp.htm">réseau_send_udp</a></li>
    <li><a href="network_send_udp_raw.htm">réseau_send_udp_raw</a></li>
    <li><a href="network_destroy.htm">réseau_destruction</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="../GML_Reference.htm">Référence<span class="notranslate">GML</span></a></div>
        <div style="float:right">Suivant : <a href="../Web_And_HTML5/Web_And_HTML5.htm">Web</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Networking
-->
  <!-- TAGS
networking_functions
-->
</body>
</html>