<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Structures de données</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Section de référence pour les structures de données" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Structures de données" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> Structures de données</h1><p> Dans les jeux, vous devez souvent stocker des informations de manière précise et ordonnée. Par exemple, vous devrez peut-être stocker des listes d&#39;articles qu&#39;une personne transporte ou vous souhaiterez peut-être stocker une grille d&#39;endroits qui doivent encore être visités. Maintenant, vous <i>pouvez</i> utiliser les tableaux pour cela, mais si vous voulez effectuer des opérations plus compliquées, comme trier les données ou rechercher un élément particulier, vous devez écrire de gros morceaux de <span class="notranslate">GML</span> qui peuvent être lents à exécuter, difficiles à déboguer et une vraie douleur à écrire!</p><p> Pour y remédier, <span class="notranslate">GameMaker Studio 2</span> dispose d&#39;un certain nombre de <b>structures de données intégrées</b> accessibles via des fonctions spécialisées. Il existe six types différents de structure de données disponibles, chacun ayant ses propres avantages en fonction du type d&#39;informations que vous souhaitez stocker et de la manière dont vous souhaitez les manipuler plus tard: piles, files d&#39;attente, listes, cartes, files d&#39;attente prioritaires et grilles..</p><p> Essentiellement, toutes les structures de données fonctionnent de la même manière - Vous créez une structure de données et stockez sa <i>valeur d&#39;index</i> dans une variable. Vous utilisez ensuite cet index pour référencer la structure de données dans tous les autres appels de fonction qui peuvent y effectuer des opérations. Enfin, une fois que vous avez terminé, vous détruisez à nouveau la structure de données pour la supprimer de la mémoire. Vous pouvez utiliser autant de structures en même temps que nécessaire, et toutes les structures peuvent stocker n&#39;importe lequel des <a href="../../GML_Overview/Data_Types.htm">types de données</a> disponibles.</p><p class="note"> <b>REMARQUE:</b> comme pour toutes les ressources dynamiques, les structures de données occupent de la mémoire et doivent donc <b>toujours</b> être détruites lorsqu&#39;elles ne sont plus nécessaires pour éviter les fuites de mémoire qui ralentiront et finiront par planter votre jeu.</p><p class="note"> <b>IMPORTANT!</b> Lorsque vous créez une structure de données, la valeur d&#39;index pour l&#39;identifier est une valeur entière commençant à 0. Cela signifie que différentes structures de données peuvent avoir la <b>même</b> valeur d&#39;index, donc en cas de doute, vous devez utiliser la <span style="font-size:1px;"><tt style="font-size: 14px">fonction ds_exists</tt></span> avant d&#39;y accéder. Notez également que les index sont réutilisés, de sorte qu&#39;une valeur d&#39;index de structure de données détruite peut être utilisée par une valeur nouvellement créée par la suite, et nous vous recommandons de définir toute variable contenant un index DS sur -1 après avoir détruit la structure de données.</p><p> Vous trouverez des informations sur les différentes structures de données dans les sections suivantes:</p><p></p><ul class="colour"><li> <a href="DS_Grids/DS_Grids.htm">Grilles</a></li><li> <a href="DS_Lists/DS_Lists.htm">Listes</a></li><li> <a href="DS_Maps/DS_Maps.htm">Plans</a></li><li> <a href="DS_Priority_Queues/DS_Priority_Queues.htm">Files d&#39;attente prioritaires</a></li><li> <a href="DS_Queues/DS_Queues.htm">Files d&#39;attente</a></li><li> <a href="DS_Stacks/DS_Stacks.htm">Piles</a></li></ul><p></p><p> Avant d&#39;utiliser des structures de données dans votre jeu, vous devez également savoir qu&#39;il y a certains moments où, en raison d&#39;erreurs d&#39;arrondi, vous pouvez obtenir un résultat qui ne correspond pas à ce que vous attendiez. Cela peut être résolu en modifiant la précision DS à l&#39;aide de la fonction suivante:</p><p></p><ul class="colour"><li><a href="ds_set_precision.htm">ds_set_precision</a></li></ul><p></p><p> Il existe également une fonction spéciale pour vérifier si une structure de données d&#39;un type donné existe:</p><p></p><ul class="colour"><li><a href="ds_exists.htm">ds_exists</a></li></ul><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="../GML_Reference.htm">Référence <span class="notranslate">GML</span></a></div><div style="float:right"> Suivant: <a href="../Strings/Strings.htm">Cordes</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Data Structures
-->
  <!-- TAGS
data_structure_functions
-->
</body>
</html>