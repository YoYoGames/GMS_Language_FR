<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>ajouts cliquables</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for clickable_add" />
  <meta name="rh-index-keywords" content="clickable_add" />
  <meta name="search-keywords" content="clickable_add" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>ajouts cliquables</h1>
  <p>Avec cette fonction, vous pouvez créer une icône personnalisée et cliquable qui agit comme un &quot;bouton&quot; en dehors du canevas de jeu, mais dans la fenêtre du navigateur elle-même. La fonction renvoie une valeur d'identification qui doit être stockée dans une variable qui sera utilisée dans toutes les autres fonctions de bouton faisant référence à la nouvelle icône.
    fonctions de bouton ultérieures qui font référence à la nouvelle icône. Cette fonction est très utile pour éviter que le navigateur ne crée une fenêtre pop-up lorsqu'on clique sur le bouton, car tout est fait par <span class="notranslate">GameMaker Studio 2</span> lui-même.</p>
  <p>Vous devez d'abord définir la position, qui est relative au (0,0) de la fenêtre du navigateur (coin supérieur gauche), puis donner l'entrée de la page de texture pour le sprite que vous souhaitez pour l'icône du bouton (voir : <a href="../Asset_Management/Sprites/Sprite_Information/sprite_get_tpe.htm"><tt>sprite_get_tpe()</tt></a>).
    Vous pouvez ensuite spécifier soit une URL à ouvrir, soit un script (du navigateur d'actifs de <span class="notranslate">GameMaker Studio 2</span>) à ouvrir ou à exécuter. Le paramètre &quot; target &quot; que vous spécifiez est identique à la valeur &quot; name &quot; standard de JavaScript lorsque vous utilisez la méthode open().
    utilisez la méthode <tt>open()</tt> (sachez que toutes les valeurs sauf '_self' peuvent entraîner le blocage du navigateur ou demander à l'utilisateur s'il souhaite l'autoriser) et l'argument &quot;params&quot; est le même que le paramètre JavaScript &quot;specs&quot; pour contrôler les propriétés de la nouvelle fenêtre/du nouvel onglet.
    contrôler les propriétés que la nouvelle fenêtre/onglet doit afficher (tous les navigateurs ne prennent pas forcément en charge toutes les fonctionnalités). Si vous utilisez l'icône pour exécuter un script interne, ces deux derniers arguments peuvent être laissés sous forme de chaînes vides &quot;&quot;.</p>
  <p>Les cibles valides sont :</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Cible</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>_blank</td>
        <td>Ouvre le document lié dans une nouvelle fenêtre ou un nouvel onglet.</td>
      </tr>
      <tr>
        <td>_self</td>
        <td>Ouvre le document lié dans le même cadre que celui dans lequel il a été cliqué (c'est la valeur par défaut).</td>
      </tr>
      <tr>
        <td>_parent</td>
        <td>Ouvre le document lié dans le cadre parent.</td>
      </tr>
      <tr>
        <td>_haut</td>
        <td>Ouvre le document lié dans le corps complet de la fenêtre.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>Les paramètres valides sont :</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Paramètres</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><b>height=[px]</b></td>
        <td>La hauteur de la fenêtre, la valeur minimale étant de 100.</td>
      </tr>
      <tr>
        <td><b>width=[px]</b></td>
        <td>La largeur de la fenêtre, la valeur minimale étant de 100.</td>
      </tr>
      <tr>
        <td><b>left=[px]</b></td>
        <td>La position gauche de la fenêtre.</td>
      </tr>
      <tr>
        <td><b>top=[px]</b></td>
        <td>La position supérieure de la fenêtre (IE uniquement).</td>
      </tr>
      <tr>
        <td><b>location=[booléen</b>]</td>
        <td>Affichage ou non du champ d'adresse (1 par défaut).</td>
      </tr>
      <tr>
        <td><b>menubar=[booléen</b>]".</td>
        <td>Affichage ou non de la barre de menu (1 par défaut).</td>
      </tr>
      <tr>
        <td><b>resizable=[boolean</b>]".</td>
        <td>Si la fenêtre est redimensionnable ou non (la valeur par défaut est 1).</td>
      </tr>
      <tr>
        <td><b>scrollbars=[boolean</b>]".</td>
        <td>Affichage ou non des barres de défilement (la valeur par défaut est 1).</td>
      </tr>
      <tr>
        <td><b>status=[booléen</b>]</td>
        <td>Ajout ou non d'une barre d'état (la valeur par défaut est 1).</td>
      </tr>
      <tr>
        <td><b>barre de titre = [booléen</b>] ".</td>
        <td>Affichage ou non de la barre de titre. Cette option est ignorée, sauf si l'application appelante est une application HTML ou une boîte de dialogue sécurisée (la valeur par défaut est 1) ;</td>
      </tr>
      <tr>
        <td><b>toolbar=[boolean</b>]".</td>
        <td>Affichage ou non de la barre d'outils du navigateur (par défaut, oui).</td>
      </tr>
    </tbody>
  </table>
  <p><br> Il convient également de noter que si l'argument URL que vous transmettez est le nom d'une <a href="../../GML_Overview/Script_Functions.htm">fonction de script</a> (c'est-à-dire qu'il ne commence pas par &quot;http://&quot;) ET que le script est appelé <tt><b>gmcallback_*</b></tt>    alors vous pouvez obtenir des flux directs dans un événement html5. Les noms des fonctions de script de <span class="notranslate">GameMaker Studio 2</span> <i>ne</i> sont <i>pas</i> obscurcis s'ils commencent par <tt>gmcallback_</tt>.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">clickable_add(x, y, tpe, url, target, params) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>x</td>
        <td>La position x dans la <i>fenêtre</i>.</td>
      </tr>
      <tr>
        <td>y</td>
        <td>La position y dans la <i>fenêtre</i>.</td>
      </tr>
      <tr>
        <td>tpe</td>
        <td>L'entrée de la page de texture pour le sprite à utiliser.</td>
      </tr>
      <tr>
        <td>url</td>
        <td>L'URL (adresse du site Web) vers lequel le lien doit être établi, ou le script à exécuter.</td>
      </tr>
      <tr>
        <td>cible</td>
        <td>Il s'agit de la zone cible dans laquelle il faut ouvrir l'URL (voir la description).</td>
      </tr>
      <tr>
        <td>paramètres</td>
        <td>Les différents paramètres de l'icône (voir description).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">home_but = clickable_add(32, 32, sprite_get_tpe(spr_MS_Home, 0), &quot;http://macsweeney_games.com&quot;, &quot;_blank&quot;, &quot;width=700, height=500, menubar=0, toolbar=0, scrollbars=0&quot;) ;</p>
  <p>Le code ci-dessus crée une icône DOM cliquable à la position (32, 32) de la page sur laquelle le canevas de jeu est exécuté. L'icône utilise le sprite référencé à partir de la page de texture comme &quot;spr_MS_Home&quot; et, lorsqu'on clique dessus, l'icône ouvre une nouvelle fenêtre
    pour l'URL spécifiée et avec les propriétés définies pour cette fenêtre.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Web_And_HTML5.htm">Web et HTML5</a></div>
        <div style="float:right">Suivant : <a href="clickable_add_ext.htm">clickable_add_ext</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
clickable_add
-->
  <!-- TAGS
clickable_add
-->
</body>
</html>