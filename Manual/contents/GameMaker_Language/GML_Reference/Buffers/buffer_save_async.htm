<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_save_async</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_save_async" />
  <meta name="rh-index-keywords" content="buffer_save_async" />
  <meta name="search-keywords" content="buffer_save_async" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>buffer_save_async</h1>
  <p>Avec cette fonction, vous pouvez sauvegarder une partie du contenu d'un tampon dans un fichier, prêt à être relu en mémoire à l'aide de la fonction <a href="buffer_load.htm"><tt>buffer_load()</tt></a> (ou toute autre fonction de chargement de tampon). L'option &quot;offset
    définit la position de départ dans le tampon à sauvegarder (en octets), et la &quot;taille&quot; est la taille de la zone du tampon à sauvegarder à partir de ce décalage (également en octets). Cette fonction fonctionne de manière asynchrone, et le jeu continuera donc de tourner pendant la sauvegarde.
    pendant la sauvegarde, et tous les fichiers sauvegardés à l'aide de cette fonction seront placés dans un dossier &quot;par défaut&quot;. Ce dossier <i>n'a pas</i> besoin d'être inclus dans le nom du fichier car il est ajouté automatiquement par <span class="notranslate">GameMaker</span>. Par exemple, le chemin du nom de fichier &quot; Data\Player_Save<tt>.sav&quot;</tt>
    sera en fait enregistré dans le dossier &quot;<tt>defaultData\Player_Save.sav &quot;.</tt> Toutefois, si vous chargez ensuite le fichier à l'aide de la fonction <a href="buffer_load_async.htm"><tt>buffer_load_async()</tt></a>vous n'avez pas besoin de fournir la partie &quot;default&quot; du chemin d'accès.
    du chemin d'accès (mais toute autre fonction de fichier l <i>'</i> exigera, sauf sur les consoles Xbox One, PS4 et <span class="notranslate">Nintendo</span> <span class="notranslate">Switch</span>).</p>
  <p class="note"><b>NOTE</b>: En HTML5, &quot;default/&quot; n'est pas ajouté automatiquement et vous devrez peut-être en tenir compte dans votre code.</p>
  <p>La fonction renverra une valeur d'ID unique et déclenchera un <a href="../../../The_Asset_Editors/Object_Properties/Async_Events/Save_Load.htm">événement de sauvegarde/chargement asynchrone</a> où vous pourrez utiliser l'ID renvoyé pour vérifier la valeur de l'ID <tt>async_load</tt>,
    comme le montre l'exemple étendu ci-dessous. La carte <a href="../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a> dans l'événement aura les deux paires clé/valeur suivantes :</p>
  <ul>
    <li><b>&quot;id&quot; : l'ID de la </b>fonction asynchrone tel que retourné par la fonction de sauvegarde.</li>
    <li><b>&quot;status&quot; : </b>retournera true si <tt>les</tt> données ont été sauvegardées/chargées correctement, et false <tt>sinon</tt>.</li>
  </ul>
  <p>Notez que vous pouvez sauvegarder plusieurs tampons en un seul en appelant cette fonction plusieurs fois entre les appels à <a href="buffer_async_group_begin.htm"><tt>buffer_async_group_begin()</tt></a> et <a href="buffer_async_group_end.htm"><tt>buffer_async_group_end()</tt></a>    (voir ces fonctions pour plus d'informations à ce sujet).</p>
  <p class="note"><b>REMARQUE</b>: En HTML5, les résultats renvoyés sont enregistrés sous forme de chaînes codées en base64 lorsqu'ils sont enregistrés dans un fichier.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">buffer_save_async(buffer, filename, offset, size) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>tampon</td>
        <td>L'index du tampon à sauvegarder.</td>
      </tr>
      <tr>
        <td>nom de fichier</td>
        <td>Le nom du fichier à enregistrer sous.</td>
      </tr>
      <tr>
        <td>décalage</td>
        <td>Le décalage dans la mémoire tampon à sauvegarder (en octets).</td>
      </tr>
      <tr>
        <td>taille</td>
        <td>La taille de la zone tampon à sauvegarder (en octets).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Exemple étendu :</h4>
  <p>La fonction <tt>buffer_save_async()</tt> peut être appelée à partir de n'importe quel événement, et comme elle est asynchrone, le rappel peut être presque instantané ou prendre plusieurs secondes. L'appel de la fonction est simple et ressemble à quelque chose comme ceci :</p>
  <p class="code">saveid = buffer_save_async(buff, &quot;Player_Save.sav&quot;, 0, 16384) ;</p>
  <p>Le code ci-dessus enregistre le contenu du tampon &quot; buff &quot;<i>dans le</i> fichier de sauvegarde donné, en stockant l'ID de l'appel de fonction dans la variable &quot; saveid &quot;. Lorsque la sauvegarde est terminée, l'événement asynchrone Save/Load est déclenché.
    et vous pouvez analyser la carte <tt>async_load</tt> pour trouver l'ID correct de la fonction, comme ceci :</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == saveid<br> {
    <br> if ds_map_find_value(async_load, &quot;status&quot;) == false<br> {
    <br> show_debug_message(&quot;Save failed !&quot;) ;<br> }
    <br> }
  </p>
  <p>Le code ci-dessus vérifiera d'abord l'id de la carte DS qui a été créée, puis le statut de la callback, en affichant un message de débogage s'il y a eu des problèmes.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Buffers.htm">Tampons</a></div>
        <div style="float:right">Suivant : <a href="buffer_load.htm">buffer_load</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
buffer_save_async
-->
  <!-- TAGS
buffer_save_async
-->
</body>
</html>