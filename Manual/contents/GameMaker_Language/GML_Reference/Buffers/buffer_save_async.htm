<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_save_async</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page de référence pour buffer_save_async" />
  <meta name="rh-index-keywords" content="buffer_save_async" />
  <meta name="search-keywords" content="buffer_save_async" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>buffer_save_async</h1><p> Avec cette fonction, vous pouvez enregistrer une partie du contenu d&#39;un tampon dans un fichier, prêt à être relu en mémoire à l&#39;aide du <a href="buffer_load.htm"><tt>buffer_load()</tt></a> fonction (ou l&#39;une des autres fonctions de chargement des tampons). Le &quot;décalage&quot; définit la position de départ dans le tampon pour l&#39;enregistrement (en octets), et la &quot;taille&quot; est la taille de la zone de tampon à enregistrer à partir de ce décalage (également en octets). Cette fonction fonctionne de manière asynchrone, et ainsi le jeu continuera à fonctionner pendant son enregistrement, et tous les fichiers enregistrés à l&#39;aide de cette fonction seront placés dans un dossier «par défaut». Ce dossier n&#39;a <i>pas</i> besoin d&#39;être inclus dans le nom de fichier car il est ajouté automatiquement par <span class="notranslate">GameMaker</span>. Par exemple, le chemin du nom de fichier &quot;<tt>Data\Player_Save.sav</tt> &quot;serait en fait enregistré dans &quot;<tt>default\Data\Player_Save.sav</tt> &quot;. Cependant, si vous chargez ensuite le fichier à l&#39;aide de la fonction <a href="buffer_load_async.htm"><tt>buffer_load_async()</tt></a>, vous n&#39;avez pas non plus besoin de fournir la partie &quot;par défaut&quot; du chemin (mais toute autre fonction de fichier <i>le</i> nécessitera, sauf sur les consoles Xbox One, PS4 et <span class="notranslate">Nintendo</span> <span class="notranslate">Switch</span> ).</p><p class="note"> <b>REMARQUE</b>: sur HTML5, &quot;default /&quot; n&#39;est pas ajouté automatiquement et vous devrez peut-être en tenir compte dans votre code.</p><p> La fonction renvoie une valeur d&#39;ID unique et déclenche un <a href="../../../The_Asset_Editors/Object_Properties/Async_Events/Save_Load.htm">événement de sauvegarde / chargement asynchrone</a> où vous pouvez utiliser l&#39;ID renvoyé pour vérifier le <tt>async_load</tt> Valeur d&#39;ID, comme indiqué dans l&#39;exemple étendu ci-dessous. Le <a href="../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a> map dans l&#39;événement aura les deux paires clé / valeur suivantes:</p><ul><li> <b>&quot;id&quot;:</b> l&#39;ID de la fonction asynchrone tel que renvoyé par la fonction de sauvegarde.</li><li> <b>&quot;status&quot;:</b> retournera <tt>true</tt> si les données ont été enregistrées / chargées correctement, et <tt>false</tt> autrement.</li></ul><p> Notez que vous pouvez enregistrer plusieurs tampons en un en appelant cette fonction plusieurs fois entre les appels à <a href="buffer_async_group_begin.htm"><tt>buffer_async_group_begin()</tt></a> et <a href="buffer_async_group_end.htm"><tt>buffer_async_group_end()</tt></a> (voir ces fonctions pour plus d&#39;informations à ce sujet).</p><p class="note"> <b>REMARQUE</b>: sur HTML5, les résultats renvoyés sont enregistrés sous forme de chaînes codées en base64 lors de l&#39;enregistrement dans un fichier.</p><p></p><h4> Syntaxe:</h4><p class="code">buffer_save_async(buffer, filename, offset, size);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">buffer</span></td><td> L&#39;index du tampon à enregistrer.</td></tr><tr><td> <span class="notranslate">filename</span></td><td> Le nom du fichier sous lequel enregistrer.</td></tr><tr><td> <span class="notranslate">offset</span></td><td> Décalage dans le tampon à partir duquel enregistrer (en octets).</td></tr><tr><td> <span class="notranslate">size</span></td><td> La taille de la zone tampon à enregistrer (en octets).</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">Real</p><p></p><h4> Exemple étendu:</h4><p> Le <tt>buffer_save_async()</tt> La fonction peut être appelée à partir de n&#39;importe quel événement, et comme elle est asynchrone, le rappel peut être presque instantané ou prendre plusieurs secondes. L&#39;appel de la fonction est simple et ressemblerait à ceci:</p><p class="code">saveid = buffer_save_async(buff, &quot;Player_Save.sav&quot;, 0, 16384);</p><p> Le code ci-dessus enregistre le contenu du tampon &quot; <i>buff</i> &quot; dans le fichier de sauvegarde donné, en stockant l&#39;ID de l&#39;appel de fonction dans la variable &quot; <i>saveid</i> &quot;. Lorsque la sauvegarde est terminée, l&#39;événement asynchrone Save / Load sera déclenché et vous pourrez analyser le <tt>async_load</tt> map pour l&#39;ID correct de la fonction, comme ceci:</p><p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == saveid<br/>     {
    <br/>     if ds_map_find_value(async_load, &quot;status&quot;) == false<br/>         {
    <br/>         show_debug_message(&quot;Save failed!&quot;);<br/>         }
    <br/>     }
  </p><p> Le code ci-dessus vérifiera d&#39;abord l&#39;ID de la carte DS qui a été créée, puis vérifiera l&#39;état du rappel, en publiant un message de débogage s&#39;il y a eu des problèmes. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Buffers.htm">Tampons</a></div><div style="float:right"> Suivant:<a href="buffer_load.htm">buffer_load</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
buffer_save_async
-->
  <!-- TAGS
buffer_save_async
-->
</body>
</html>