<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>création d'un tampon</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_create" />
  <meta name="rh-index-keywords" content="buffer_create,buffer_fixed,buffer_grow,buffer_wrap,buffer_fast,buffer_vbuffer" />
  <meta name="search-keywords" content="buffer_create,buffer_fixed,buffer_grow,buffer_wrap,buffer_fast,buffer_vbuffer" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>création d'un tampon</h1>
  <p>Vous utilisez cette fonction pour allouer une partie de la mémoire comme tampon dans votre jeu. La fonction renvoie l'<i>identifiant</i> unique <i>du tampon</i> qui doit être stocké dans une variable et utilisé pour tous les autres appels de fonction au tampon. Le tampon peut ensuite être
    être utilisé pour stocker différents types de données (spécifiées lorsque vous écrivez dans le tampon à l'aide de la fonction). <a href="buffer_write.htm"><tt>buffer_write()</tt></a> les constantes suivantes étant utilisées pour définir le type de tampon :</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Constant</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>tampon_fixe</td>
        <td>Un tampon de taille fixe.</td>
      </tr>
      <tr>
        <td>buffer_grow</td>
        <td>Un tampon qui &quot;croît&quot; dynamiquement au fur et à mesure que des données sont ajoutées.</td>
      </tr>
      <tr>
        <td>buffer_wrap</td>
        <td>Un tampon où les données seront &quot;enveloppées&quot;. Lorsque les données ajoutées atteignent la limite de la taille du tampon, l'écrasement sera replacé au début du tampon, et l'écriture se poursuivra à partir de ce point.</td>
      </tr>
      <tr>
        <td>buffer_fast</td>
        <td>Tampon spécial &quot;dépouillé&quot; dont la lecture/écriture est extrêmement rapide. Ne peut être utilisé qu'avec les <a href="buffer_read.htm">types de données</a> <tt>buffer_u8</tt>, et <i>doit</i> être aligné sur 1 octet.</td>
      </tr>
      <tr>
        <td>tampon_vbuffer</td>
        <td>Ce type de tampon ne doit être utilisé que pour les sommets.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>Outre le type de tampon, vous devrez également définir l'<i>alignement des octets</i> du tampon. Cette valeur varie en fonction des données que vous souhaitez stocker dans le tampon. Dans la plupart des cas, une valeur de 1 convient parfaitement. Toutefois, sachez que
    pour certaines opérations, un alignement spécifique est <i>essentiel</i>, et un alignement incorrect peut provoquer des erreurs (pour plus de détails sur l'alignement, voir <a href="../../../Additional_Information/Guide_To_Using_Buffers.htm">Tampons</a>). Ce qui suit est un guide général
    général pour montrer quelles valeurs sont les plus appropriées pour chaque type de données (en cas de doute, utilisez un alignement de 1) :</p>
  <ul class="colour">
    <li>Les chaînes de caractères doivent être alignées sur un octet.</li>
    <li>Les entiers 8 bits signés ou non signés peuvent être alignés sur n'importe quelle valeur, mais notez que pour un tampon rapide (voir <a href="buffer_write.htm"><tt>buffer_write()</tt></a>), ils <i>doivent</i> être alignés sur 1.</li>
    <li>Les entiers 16 bits signés ou non signés doivent être alignés sur 2 octets.</li>
    <li>Les entiers 32 bits signés ou non signés doivent être alignés sur 4 octets.</li>
    <li>Les flottants jusqu'à 16 bits doivent être alignés sur 2 octets. <i>(Non supporté actuellement !)</i></li>
    <li>Les flottants jusqu'à 32 bits doivent être alignés sur 4 octets.</li>
    <li>Les flottants jusqu'à 64 bits doivent être alignés sur 8 octets.</li>
  </ul>
  <p class="note"><b>REMARQUE</b>: L'alignement des octets peut être très important car un mauvais choix peut nuire aux performances.</p>
  <p class="note"><b>REMARQUE</b>: Il est important de supprimer de la mémoire toute ressource créée dynamiquement comme celle-ci lorsque vous n'en avez plus besoin afin d'éviter les fuites de mémoire. Ainsi, lorsque vous avez fini d'utiliser le tampon que vous avez créé, vous devez le libérer à nouveau.
    en utilisant <span style="font-size:1px;"><a href="buffer_delete.htm"><tt style="font-size: 14px">buffer_delete()</tt></a></span>.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">buffer_create(taille, type, alignement)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>taille</td>
        <td>La taille (en octets) du tampon.</td>
      </tr>
      <tr>
        <td>type</td>
        <td>Le type de tampon à créer (voir la liste des constantes ci-dessus).</td>
      </tr>
      <tr>
        <td>alignement</td>
        <td>L'alignement des octets pour le tampon</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Int (ID du tampon de sommets)</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">player_buffer = buffer_create(16384, buffer_fixed, 2) ;</p>
  <p>Le code ci-dessus alloue 16384 octets de mémoire à un tampon et renvoie l'index de ce tampon, qui est stocké dans la variable &quot;player_buffer&quot;, pour une utilisation future. Le tampon est aligné sur une frontière de deux octets.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Buffers.htm">Tampons</a></div>
        <div style="float:right">Suivant : <a href="buffer_create_from_vertex_buffer.htm">buffer_create_from_vertex_buffer</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
buffer_create
buffer_fixed
buffer_grow
buffer_wrap
buffer_fast
buffer_vbuffer
-->
  <!-- TAGS
buffer_create
-->
</body>
</html>