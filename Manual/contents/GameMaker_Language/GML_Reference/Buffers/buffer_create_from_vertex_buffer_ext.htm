<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>tampon_créer_à partir de_vertex_buffer_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_create_from_vertex_buffer_ext" />
  <meta name="rh-index-keywords" content="buffer_create_from_vertex_buffer_ext" />
  <meta name="search-keywords" content="buffer_create_from_vertex_buffer_ext,buffer_fixed,buffer_grow,buffer_wrap,buffer_fast,buffer_vbuffer" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>tampon_créer_à partir de_vertex_buffer_ext</h1>
  <p>Cette fonction permet d'allouer une partie de la mémoire comme tampon dans votre jeu, remplie des données d'un <a href="../Drawing/Primitives/Primitives_And_Vertex_Formats.htm">tampon de sommets</a> précédemment créé. La fonction renvoie un <i>identifiant de tampon</i> unique qui doit être stocké dans une variable et utilisé pour tous les autres appels de fonction au tampon. La fonction prend l'identifiant du tampon de sommets à utiliser (tel que renvoyé par la fonction <a href="../Drawing/Primitives/vertex_create_buffer.htm"><tt>vertex_create_buffer()</tt></a>,
    par exemple) et les constantes suivantes sont utilisées pour définir le type de tampon :</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Constant</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>tampon_fixe</td>
        <td>Un tampon de taille fixe.</td>
      </tr>
      <tr>
        <td>buffer_grow</td>
        <td>Un tampon qui &quot;croît&quot; dynamiquement au fur et à mesure que des données sont ajoutées.</td>
      </tr>
      <tr>
        <td>buffer_wrap</td>
        <td>Un tampon où les données seront &quot;enveloppées&quot;. Lorsque les données ajoutées atteignent la limite de la taille du tampon, l'écrasement sera replacé au début du tampon, et l'écriture se poursuivra à partir de ce point.</td>
      </tr>
      <tr>
        <td>buffer_fast</td>
        <td>Tampon spécial &quot;dépouillé&quot; dont la lecture/écriture est extrêmement rapide. Ne peut être utilisé qu'avec les <a href="buffer_write.htm">types de données</a> <tt>buffer_u8</tt>, et <i>doit</i> être aligné sur 1 octet.</td>
      </tr>
      <tr>
        <td>tampon_vbuffer</td>
        <td>Ce type de tampon ne doit être utilisé que pour les sommets.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>Outre le type de tampon, vous devrez également définir l'<i>alignement des octets</i> du tampon. Cette valeur varie en fonction des données que vous souhaitez stocker dans le tampon. Dans la plupart des cas, une valeur de 1 convient parfaitement. Toutefois, sachez que
    pour certaines opérations, un alignement spécifique est <i>essentiel</i>, et un alignement incorrect peut provoquer des erreurs (pour plus de détails sur l'alignement, voir <a href="../../../Additional_Information/Guide_To_Using_Buffers.htm">Alignement du tampon</a>). Le tableau suivant
    est un guide général qui indique les valeurs les plus appropriées pour chaque type de données (en cas de doute, utilisez un alignement de 1) :</p>
  <ul class="colour">
    <li>Les chaînes de caractères doivent être alignées sur un octet.</li>
    <li>Les entiers 8 bits signés ou non signés peuvent être alignés sur n'importe quelle valeur, mais notez que pour un tampon rapide (voir <a href="buffer_write.htm"><tt>buffer_write()</tt></a>), ils <i>doivent</i> être alignés sur 1.</li>
    <li>Les entiers 16 bits signés ou non signés doivent être alignés sur 2 octets.</li>
    <li>Les entiers 32 bits signés ou non signés doivent être alignés sur 4 octets.</li>
    <li>Les flottants jusqu'à 16 bits doivent être alignés sur 2 octets. <i>(Non supporté actuellement !)</i></li>
    <li>Les flottants jusqu'à 32 bits doivent être alignés sur 4 octets.</li>
    <li>Les flottants jusqu'à 64 bits doivent être alignés sur 8 octets.</li>
  </ul>
  <p class="note"><b>REMARQUE</b>: les tampons de sommets sont alignés sur 1 octet, mais vous pouvez créer le tampon avec n'importe quel alignement selon la façon dont vous souhaitez traiter les données, car les données de sommets sont simplement une copie mémoire brute dans le tampon.</p>
  <p>Les deux derniers arguments sont utilisés pour spécifier la plage de données de sommets que vous souhaitez copier dans le tampon nouvellement créé. Le sommet de départ peut être n'importe où entre 0 et le nombre de sommets -1, puis vous donnez le nombre de sommets à copier à partir de ce point.
    à copier. Vous pouvez utiliser la fonction <tt><a href="../Drawing/Primitives/vertex_get_number.htm">vertex_get_number()</a></tt> sur le tampon de sommets pour obtenir le nombre total de sommets stockés.</p>
  <p class="note"><b>NOTE</b>: Il est important de supprimer de la mémoire toute ressource créée dynamiquement comme celle-ci lorsque vous n'en avez plus besoin afin d'éviter les fuites de mémoire. Ainsi, lorsque vous avez terminé avec le tampon que vous avez créé, vous devez le libérer à nouveau.
    en utilisant <span style="font-size:1px;"><a href="buffer_delete.htm"><tt style="font-size: 14px">buffer_delete()</tt></a></span>. Notez également que le tampon de sommets utilisé pour créer le nouveau tampon n'est pas non plus supprimé de la mémoire et que vous devez utiliser la fonction
    <span style="font-size:1px;"><a href="../Drawing/Primitives/vertex_delete_buffer.htm"><tt style="font-size: 14px">vertex_delete_buffer()</tt></a></span> lorsqu'elle n'est plus nécessaire.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">buffer_create_from_vertex_buffer_ext(vertex_buffer, type, alignment, start_vertex, num_vertices)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>tampon_de_vertex</td>
        <td>L'index de la mémoire tampon des sommets à utiliser.</td>
      </tr>
      <tr>
        <td>type</td>
        <td>Le type de tampon à créer (voir la liste des constantes ci-dessous).</td>
      </tr>
      <tr>
        <td>alignement</td>
        <td>L'alignement des octets pour le tampon</td>
      </tr>
      <tr>
        <td>start_vertex</td>
        <td>Le sommet de départ.</td>
      </tr>
      <tr>
        <td>num_vertices</td>
        <td>Le nombre total de sommets à copier.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Int (ID du tampon de sommets)</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">var_num = vertex_get_number(model_buff) ; player_buffer = buffer_create_from_vertex_buffer(model_buffer, buffer_grow, 1, 0, v_num - 1) ;</p>
  <p>Le code ci-dessus alloue de la mémoire à un tampon, puis copie les données de tous les sommets du tampon de sommets donné dans celui-ci, renvoyant l'index du nouveau tampon qui est stocké dans la variable &quot;player_buffer&quot;, pour une utilisation future.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Buffers.htm">Tampons</a></div>
        <div style="float:right">Suivant : <a href="buffer_delete.htm">buffer_delete</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
buffer_create_from_vertex_buffer_ext
buffer_fixed
buffer_grow
buffer_wrap
buffer_fast
buffer_vbuffer
-->
  <!-- TAGS
buffer_create_from_vertex_buffer_ext
-->

</body></html>