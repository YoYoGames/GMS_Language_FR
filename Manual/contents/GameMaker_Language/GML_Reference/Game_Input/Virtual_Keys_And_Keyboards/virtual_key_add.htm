<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>virtual_key_add</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page de référence pour virtual_key_add" />
  <meta name="rh-index-keywords" content="virtual_key_add" />
  <meta name="search-keywords" content="virtual_key_add" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>virtual_key_add</h1><p> Cette fonction vous permet de mapper les «touches» d&#39;une zone d&#39;écran aux événements du clavier. Cela signifie qu&#39;une fois que vous avez assigné une zone à une touche virtuelle, tout contact sur cette zone déclenchera l&#39;événement de clavier correspondant à la touche que vous avez mappée à la zone. Vous pouvez également affecter chaque touche virtuelle que vous définissez à une variable, qui peut ensuite être utilisée dans les autres fonctions des touches virtuelles pour les afficher, les masquer et les supprimer. Ces clés sont attribuées <i>par pièce</i> et seront automatiquement supprimées par <span class="notranslate">GameMaker Studio 2</span> lors des vestiaires.</p><p> La position réelle de la clé virtuelle est basée sur la <i>position de l&#39;écran</i> plutôt que sur la position de la pièce et les valeurs x / y sont donc absolues sur l&#39;écran. Cela signifie que vous n&#39;avez pas à vous soucier de l&#39;utilisation des vues ou des coordonnées relatives de la pièce, et que vous pouvez simplement définir les clés dans l&#39; <strong>événement Créer</strong> un objet (vous n&#39;avez besoin de définir une clé virtuelle qu&#39;une fois par pièce), puis dessinez vos sprites clés dans l&#39; <a href="../../../../The_Asset_Editors/Object_Properties/Draw_Events.htm">événement Draw GUI</a>, en dimensionnant la couche GUI pour qu&#39;elle soit la même que celle de l&#39;écran.</p><p></p><h4> Syntaxe</h4><p class="code">virtual_key_add(x, y, w, h, keycode);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">x</span></td><td> La coordonnée x (côté gauche) de la touche virtuelle <i>à l&#39;écran</i></td></tr><tr><td> <span class="notranslate">y</span></td><td> La coordonnée y (côté supérieur) de la touche virtuelle <i>à l&#39;écran</i></td></tr><tr><td> <span class="notranslate">w</span></td><td> La largeur de la clé virtuelle</td></tr><tr><td> <span class="notranslate">h</span></td><td> La hauteur de la clé virtuelle</td></tr><tr><td> <span class="notranslate">keycode</span></td><td> Quel événement de touche du clavier doit être déclenché en touchant cette zone</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">index of virtual key</p><p></p><h4> Exemple:</h4><p class="code">global.Left = virtual_key_add(32, 32, 64, 64, vk_left);</p><p> Le code ci-dessus crée un carré de clé virtuelle de 64x64 pixels, positionné sur l&#39;écran en (32, 32) qui déclenchera l&#39;événement vk_left lorsqu&#39;il est touché et attribue l&#39;index de cette clé virtuelle à une variable globale. </p><p><b></b></p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Virtual_Keys_And_Keyboards.htm">Clés et claviers virtuels</a></div><div style="float:right"> Suivant:<a href="virtual_key_show.htm">virtual_key_show</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
virtual_key_add
-->
  <!-- TAGS
virtual_key_add
-->
</body>
</html>