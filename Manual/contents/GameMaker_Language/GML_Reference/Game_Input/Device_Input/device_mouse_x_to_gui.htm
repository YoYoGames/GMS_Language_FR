<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>dispositif_mouse_x_to_gui</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for device_mouse_x_to_gui" />
  <meta name="rh-index-keywords" content="device_mouse_x_to_gui" />
  <meta name="search-keywords" content="device_mouse_x_to_gui" />
</head>

<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>dispositif_mouse_x_to_gui</h1>
  <p>Cette fonction renvoie la position x de la touche sur l'appareil par rapport à la couche GUI. Étant donné que la couche GUI peut être configurée pour avoir une taille différente indépendamment de la résolution de l'écran <i>et de la</i> taille de la pièce, il peut parfois être compliqué d'obtenir
    le point exact sur la couche GUI qu'un utilisateur a touché l'écran. Avec cette fonction, vous pouvez obtenir cette position en fonction de la taille réelle de l'interface graphique, ce qui facilite la création et l'interaction avec les boutons de l'interface graphique et les éléments du HUD. Si vous exécutez cette fonction sur un module
    HTML5 ou les modules PC et Mac, cette valeur est mise à jour en permanence, tant que le périphérique (généralement une souris) est branché, mais pour les périphériques mobiles, elle ne sera mise à jour que lorsque l'écran est touché.
    touches qui peuvent être détectées dépend beaucoup de l'appareil utilisé et du système d'exploitation qu'il exécute. Notez également que sur HTML5, seul &quot;device 0&quot; fonctionnera correctement et que les autres appareils peuvent donner des valeurs erronées.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">device_mouse_x_to_gui(device) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>dispositif</td>
        <td>Le dispositif (de 0 à <i>n</i>) qui est contrôlé.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">if device_mouse_check_button(0, mb_left)<br> {
    <br> if device_mouse_x_to_gui(0) &gt; 0 &amp;&amp; device_mouse_x_to_gui(0) &lt; 32<br> {
    <br> press = true ;<br> }
    <br> else
    <br> {
    <br> pressed = false ;<br> }
    <br> }
  </p>
  <p>Le code ci-dessus vérifie si la souris du périphérique est pressée et si c'est le cas, il interroge la position x du périphérique sur la couche GUI pour voir si elle est dans les paramètres. Si c'est le cas, il attribue la valeur true à la variable &quot;pressed <tt>&quot;.</tt>
    sinon, elle prend la valeur <tt>false</tt>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Device_Input.htm">Entrée du dispositif</a></div>
        <div style="float:right">Suivant : <a href="device_mouse_y_to_gui.htm">device_mouse_y_to_gui</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
device_mouse_x_to_gui
-->
  <!-- TAGS
device_mouse_x_to_gui
-->

</body></html>