<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>shader_get_sampler_index</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function shader_get_sampler_index" />
  <meta name="rh-index-keywords" content="shader_get_sampler_index" />
  <meta name="search-keywords" content="shader_get_sampler_index" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span class="notranslate">shader_get_sampler_index</span></h1>
  <p>Étant donné que vous ne pouvez pas modifier la valeur d'un échantillonneur d'<span class="notranslate">ombrage</span> dans l'<span class="notranslate">ombrage</span> lui-même, vous devez la définir avant d'appeler l'<span class="notranslate">ombrage</span> à l'aide de l'une des fonctions d <strong>'uniformisation</strong> disponibles. Cependant, pour pouvoir <i>le</i> faire, vous
    devez d'abord appeler cette fonction pour obtenir le &quot;handle&quot; de l'échantillonneur de shader que vous souhaitez définir.</p>
  <p class="note"><b>NOTE</b>: Bien qu'un <span class="notranslate">shader</span> soit composé de deux programmes discrets (vertex et fragment) cette fonction ne fera pas la différence entre les deux et retournera le handle de l'échantillon du <span class="notranslate">shader</span> de l'un ou l'autre.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code"><span class="notranslate">shader_get_sampler_index</span><span class="notranslate">(shader</span>, uniform) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">nuanceur</span></td>
        <td>L'index du <span class="notranslate">shader</span> à utiliser.</td>
      </tr>
      <tr>
        <td>uniforme</td>
        <td>L'échantillonneur de <span class="notranslate">shaders</span> dont il faut récupérer le handle (une chaîne).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">glassshader_bgsampler = <span class="notranslate">shader_get_sampler_index</span>(GlassShader, &quot;s_BackgroundSampler&quot;)<br> spr = sprite_get_texture(sprite_index, 0) ;<br> shader_set <span class="notranslate">(GlassShader</span>) ;
    <br> texture_set_stage(glassshader_bgsampler, spr) ;<br> <span class="notranslate">shader_reset</span>() ;
  </p>
  <p>Le code ci-dessus récupère l'<i>identifiant de</i> l'échantillonneur dans le <span class="notranslate">shader</span> indexé en tant que &quot;GlassShader<span class="notranslate">&quot;,</span> puis définit la <span class="notranslate">constante du</span> shader sur la texture du sprite donnée.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Shaders.htm"><span class="notranslate">Shaders</span></a></div>
        <div style="float:right">Suivant : <a href="shader_set.htm"><span class="notranslate">shader_set</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
<span class="notranslate">shader</span>_get_sampler_index
-->
  <!-- TAGS
<span class="notranslate">shader</span>_get_sampler_index
-->
</body>
</html>