<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>instance_position_list</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page décrivant la fonction instance_position_list" />
  <meta name="rh-index-keywords" content="instance_position_list" />
  <meta name="search-keywords" content="instance_position_list" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>instance_position_list</h1><p> Avec cette fonction, vous pouvez vérifier une position pour une collision avec toutes les instances d&#39;un autre objet. Lorsque vous utilisez cela, vous vérifiez un seul point dans la pièce pour toutes les instances d&#39;un objet, et la vérification sera effectuée par rapport à la boîte englobante des instances ou par rapport au masque des instances si cet objet a des collisions précises vérifiées.</p><p> La fonction remplira une <a href="../../Data_Structures/DS_Lists/DS_Lists.htm">liste DS</a> (créée précédemment) avec l&#39;unique <a href="Instance_Variables/id.htm"><tt>id</tt></a> valeurs de toutes les instances de l&#39;objet considérées comme étant en collision avec l&#39;instance appelante, et vous avez la possibilité de classer la liste en fonction de la distance entre la position vérifiée et l&#39;origine des instances trouvées en collision. Notez que la fonction accepte également le mot-clé spécial <a
      href="../../../<span class="notranslate">GML _Overview / Instance_Keywords.htm &quot;&gt;<b><tt>all</tt></b></a>, auquel cas toutes les instances trouvées en collision seront répertoriées. La fonction renvoie le nombre d&#39;instances trouvées, ou 0 si aucune n&#39;est trouvée.</p><p></p><h4> Syntaxe:</h4><p class="code">instance_position_list(x, y, obj, list, ordered);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">x</span></td><td> La position x pour rechercher des instances.</td></tr><tr><td> <span class="notranslate">y</span></td><td> La position y pour rechercher des instances.</td></tr><tr><td> <span class="notranslate">obj</span></td><td> Objet pour lequel rechercher des instances.</td></tr><tr><td> <span class="notranslate">list</span></td><td> Liste DS à utiliser pour stocker les ID des instances en collision.</td></tr><tr><td> <span class="notranslate">ordered</span></td><td> Si la liste doit être triée par distance (<tt>true</tt> ) ou non (<tt>false</tt> ).</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">Int (The number of instances found to be in collision)</p><p></p><h4> Exemple:</h4><p class="code">var _list = ds_list_create();<br/> var _num = instance_position_list(mouse_x, mouse_y, all, _list, false);<br/> if _num &gt; 0<br/>     {
    <br/>     for (var i = 0; i &lt; _num; ++i;)<br/>         {
    <br/>         instance_destroy(_list[| i]);<br/>         }
    <br/>     }
    <br/> ds_list_destroy(_list);
  </p><p> Le code ci-dessus vérifiera une collision avec toutes les instances trouvées à la position de la souris. Ceux-ci seront ajoutés à une liste DS, qui sera ensuite bouclée pour détruire chacune des instances en collision. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Instances.htm">Instances</a></div><div style="float:right"> Suivant:<a href="instance_id_get.htm">instance_id_get</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
instance_position_list
-->
  <!-- TAGS
instance_position_list
-->
</body>
</html>