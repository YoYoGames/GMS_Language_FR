<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>instance_furthest</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function instance_furthest" />
  <meta name="rh-index-keywords" content="instance_furthest" />
  <meta name="search-keywords" content="instance_furthest" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>instance_furthest</h1>
  <p>Cette fonction va vérifier toutes les instances de l'objet donné pour voir laquelle est la plus éloignée du point x/y donné. Toutes les vérifications se feront de la position x/y donnée à l'<i>origine</i> (la position x/y) des instances de l'objet spécifié. Si aucune instance
    de l'objet n'existe, la fonction renverra le mot-clé <a href="../../../GML_Overview/Instance_Keywords.htm">noone</a>, mais s'il existe des instances, elle renverra le mot-clé <a href="Instance_Variables/id.htm"><tt>id</tt></a> de l'instance trouvée.
    Veuillez noter que si l'instance qui exécute le code a le même index d'objet que l'objet vérifié, elle sera incluse dans la vérification (cela inclut la vérification des objets parents si l'instance appelante est également un enfant du parent).</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">instance_furthest(x, y, obj) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>x</td>
        <td>La position x pour vérifier les instances éloignées de.</td>
      </tr>
      <tr>
        <td>y</td>
        <td>La position y à vérifier pour les instances éloignées de.</td>
      </tr>
      <tr>
        <td>obj.</td>
        <td>L'objet dont il faut rechercher les instances.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Real (soit une valeur d'ID d'instance, soit le mot clé <tt>noone</tt>)</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">var inst ;<br> inst = instance_furthest(x, y, object_index) ;<br> if inst != id<br> {
    <br> draw_line(x, y, inst.x, inst.y) ;<br> }
  </p>
  <p>Le code ci-dessus trouvera l'instance la plus éloignée qui partage le même index d'objet que l'instance qui exécute le code et stockera l'id dans une variable. Cette variable est ensuite vérifiée pour voir si elle est la même que l'id de l'instance appelante et, si ce n'est pas le cas, une ligne est tracée entre les deux instances.
    Si ce n'est pas le cas, une ligne est tracée entre les deux instances.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Instances.htm">Instances</a></div>
        <div style="float:right">Suivant : <a href="instance_nearest.htm">instance_nearest</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
instance_furthest
-->
  <!-- TAGS
instance_furthest
-->
</body>
</html>