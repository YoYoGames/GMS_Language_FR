<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>instance_furthest</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page décrivant la fonction instance_furthest" />
  <meta name="rh-index-keywords" content="instance_furthest" />
  <meta name="search-keywords" content="instance_furthest" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>instance_furthest</h1><p> Cette fonction vérifiera toutes les instances de l&#39;objet donné pour voir laquelle est la plus éloignée du point x / y donné. Toutes les vérifications se feront de la position x / y donnée à l&#39; <i>origine</i> (la position x / y) des instances de l&#39;objet spécifié. Si aucune instance de l&#39;objet n&#39;existe, la fonction renverra le mot-clé<a href="../../../GML_Overview/Instance_Keywords.htm">noone</a>, mais s&#39;il y a des instances, il renverra le <a href="Instance_Variables/id.htm"><tt>id</tt></a> de l&#39;instance trouvée. Veuillez noter que si l&#39;instance exécutant le code a le même index d&#39;objet que l&#39;objet en cours de vérification, elle sera incluse dans la vérification (cela inclut la vérification des objets parents si l&#39;instance appelante est également un enfant du parent).</p><p></p><h4> Syntaxe:</h4><p class="code">instance_furthest(x, y, obj);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">x</span></td><td> La position x pour rechercher les instances éloignées.</td></tr><tr><td> <span class="notranslate">y</span></td><td> La position y pour rechercher les instances éloignées.</td></tr><tr><td> <span class="notranslate">obj</span></td><td> Objet pour lequel rechercher des instances.</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">Real (either an instance ID value or the keyword <tt>noone</tt>)</p><p></p><h4> Exemple:</h4><p class="code">var inst;<br/> inst = instance_furthest(x, y, object_index);<br/> if inst != id<br/>     {
    <br/>     draw_line(x, y, inst.x, inst.y);<br/>     }
  </p><p> Le code ci-dessus trouvera l&#39;instance la plus éloignée qui partage le même index d&#39;objet que l&#39;instance exécutant le code et stockera l&#39;id dans une variable. Cette variable est ensuite vérifiée pour voir si elle est la même que l&#39;ID de l&#39;instance appelante et, si ce n&#39;est pas le cas, une ligne est tracée entre les deux instances. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Instances.htm">Instances</a></div><div style="float:right"> Suivant:<a href="instance_nearest.htm">instance_nearest</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
instance_furthest
-->
  <!-- TAGS
instance_furthest
-->
</body>
</html>