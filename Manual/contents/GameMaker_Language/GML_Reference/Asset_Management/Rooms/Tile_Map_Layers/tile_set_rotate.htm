<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>tuile_set_rotation</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function tile_set_rotate" />
  <meta name="rh-index-keywords" content="tile_set_rotate" />
  <meta name="search-keywords" content="tile_set_rotate" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>tuile_set_rotation</h1>
  <p>Cette fonction peut être utilisée pour définir un ensemble donné de données de tuiles afin de faire pivoter la tuile de 90 degrés ou non. Vous donnez les données de tuiles, qui peuvent être récupérées en utilisant la fonction <a href="tilemap_get.htm"><tt>tilemap_get()</tt></a>puis définissez l'argument rotate
    à <tt>true</tt> si vous voulez que la tuile soit tournée, ou <tt>false</tt> si vous voulez que la tuile soit dans son état par défaut, sans rotation. La fonction renvoie un ensemble de données de tuiles modifié qui peut ensuite être appliqué à l'aide de la fonction <a href="tilemap_set.htm"><tt>tilemap_set()</tt></a>    fonction.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code"><span class="inline"></span>tile_set_rotate(tiledata, rotate)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>données en mosaïque</td>
        <td>les données de la tuile à définir</td>
      </tr>
      <tr>
        <td>faire pivoter</td>
        <td>Définissez-le sur <tt>true</tt> pour le faire pivoter et sur <tt>false</tt> pour le laisser tel quel.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">var lay_id = layer_get_id(&quot;Tiles_sky&quot;) ;<br> var map_id = layer_tilemap_get_id(lay_id) ;<br> var mx = tilemap_get_cell_x_at_pixel(map_id, mouse_x, mouse_y) ;<br> var my = tilemap_get_cell_y_at_pixel(map_id, mouse_x, mouse_y) ;<br> var data
    = tilemap_get(map_id, mx, my) ;<br> var bool = !tile_get_rotate(data) ;<br> data = tile_set_rotate(data, bool) ;<br> tilemap_set(map_id, data, mx, my) ;</p>
  <p>Le code ci-dessus récupère l'ID de la carte des tuiles de la couche donnée et obtient ensuite la position x et y de la cellule de la tuile sous la souris. Cette position est ensuite utilisée pour obtenir les données de la tuile qui sont tournées et ensuite utilisées pour définir à nouveau la tuile.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Tile_Map_Layers.htm">Carrelage des couches de la carte</a></div>
        <div style="float:right">Suivant : <a href="layer_tilemap_get_id.htm">layer_tilemap_get_id</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
tile_set_rotate
-->
  <!-- TAGS
tile_set_rotate
-->
</body>
</html>