<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>layer_get_all_elements</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page décrivant la fonction layer_get_all_elements" />
  <meta name="rh-index-keywords" content="layer_get_all_elements" />
  <meta name="search-keywords" content="layer_get_all_elements" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>layer_get_all_elements</h1><p> Vous pouvez utiliser cette fonction pour obtenir les <i>ID d&#39;élément</i> de la couche donnée. Vous fournissez l&#39;ID de couche (que vous obtenez lorsque vous créez la couche en utilisant <a href="layer_create.htm"><tt>layer_create()</tt></a> ) ou le nom de la couche (sous forme de chaîne - cela aura un impact sur les performances) et la fonction renverra un <a href="../../../../GML_Overview/Arrays.htm">tableau</a> d&#39;ID, où chaque entrée du tableau est un ID unique pour un élément de cette couche. Par exemple, si la couche est une couche d&#39;actif, le tableau sera rempli avec les valeurs d&#39;ID de chaque ressource d&#39;image-objet affectée à la couche. Notez que l&#39;utilisation de code pour travailler avec des couches signifie que vous pouvez attribuer différents types d&#39;élément à la même couche - vous pouvez donc avoir des ressources de sprite avec des instances, par exemple - auquel cas vous pouvez ensuite utiliser la fonction <a href="layer_get_element_type.htm"><tt>layer_get_element_type()</tt></a> pour obtenir le type d&#39;élément auquel l&#39;ID se rapporte.</p><p></p><h4> Syntaxe:</h4><p class="code">layer_get_all_elements(layer_id)</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">layer_id</span></td><td> La valeur d&#39;identifiant unique du calque à partir duquel obtenir les éléments (ou le nom du calque sous forme de chaîne)</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">Array (1D, populated with Element IDs)</p><p></p><h4> Exemple:</h4><p class="code">var a = layer_get_all_elements(layer);<br/> for (var i = 0; i &lt; array_length(a); i++;)<br/>    {
    <br/>    if layer_get_element_type(a[i]) == layerelementtype_sprite<br/>       {
    <br/>       layer_sprite_destroy(a[i])
    <br/>       }
    <br/>    }
  </p><p> Le code ci-dessus obtient les ID de tous les éléments d&#39;instance affectés à la couche de l&#39;instance exécutant le code. Le code vérifie ensuite si l&#39;un des éléments renvoyés est un actif de sprite et s&#39;il est détruit. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="General_Layer_Functions.htm">Fonctions générales des calques</a></div><div style="float:right"> Suivant:<a href="layer_get_element_layer.htm">layer_get_element_layer</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
layer_get_all_elements
-->
  <!-- TAGS
layer_get_all_elements
-->
</body>
</html>