<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>font_get_info</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Page outlining the function font_get_info" />
  <meta name="rh-index-keywords" content="font_get_info" />
  <meta name="search-keywords" content="font_get_info" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>font_get_info</h1>
  <p>Cette fonction est utilisée pour récupérer des informations sur une police donnée. Vous fournissez un index de police (qui peut être une ressource ajoutée via le <a href="../../../../Introduction/The_Asset_Browser.htm">navigateur de ressources</a> ou une police <a href="font_add.htm">ajoutée</a> au <span class="notranslate">moment de l'exécution</span>) et la fonction renvoie une <a href="../../../GML_Overview/Structs.htm">structure</a> avec les variables suivantes :</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Nom de la variable</th>
        <th style="">Type de données</th>
        <th style="">Description</th>
      </tr>
      <tr>
        <td><strong>ascenderOffset</strong></td>
        <td style="">réel</td>
        <td style="">Le décalage maximum de la ligne de base au sommet de la police (en pixels)</td>
      </tr>
      <tr>
        <td><strong>taille</strong></td>
        <td style="">réel</td>
        <td style="">La taille approximative de la police (en pixels)</td>
      </tr>
      <tr>
        <td><strong>spriteIndex</strong></td>
        <td style="">actif (réel)</td>
        <td style="">L'index du sprite pour la police si elle a été <a href="font_add_sprite.htm">créée à partir d'un sprite</a>, sinon -1.</td>
      </tr>
      <tr>
        <td><strong>texture</strong></td>
        <td style="">actif (réel)</td>
        <td style="">-1 si la police a été créée à partir d'un sprite, sinon l'ID de la texture de la police.</td>
      </tr>
      <tr>
        <td><strong>nom</strong></td>
        <td style="">chaîne de caractères</td>
        <td style="">Le nom de la police</td>
      </tr>
      <tr>
        <td><strong>en gras</strong></td>
        <td style="">boolean</td>
        <td style=""><tt>true</tt> si la police est en gras, sinon <tt>false</tt> <em>(voir <strong>NOTE </strong></em>ci-dessous)</td>
      </tr>
      <tr>
        <td><strong>italique</strong></td>
        <td style="">boolean</td>
        <td style=""><tt>true</tt> si la police est italique, sinon <tt>false</tt><em> (voir <strong>NOTE </strong></em>ci-dessous)</td>
      </tr>
      <tr>
        <td><strong>glyphes</strong></td>
        <td style="">struct</td>
        <td style="">Une structure contenant des informations pour chaque glyphe de la police (plus d'informations sont données <a href="#glyphs">ci-dessous</a>).</td>
      </tr>
    </tbody>
  </table>
  <p class="note"><strong>REMARQUE</strong>: Les variables <tt><strong>en gras</strong></tt> et<tt>italique</tt> ne reflètent que les paramètres de l'utilisateur pour la police, elles peuvent donc ne pas être exactes pour les polices qui sont en gras ou en italique par défaut.</p>
  <p>Si la police fournie n'existe pas, la fonction renvoie undefined <tt>.</tt></p>
  <p>Notez également que la modification des valeurs de l'une de ces variables, ou de toute autre variable contenue dans la structure des <tt>glyphes</tt>, ne changera pas la façon dont la police est rendue, ces informations doivent donc être considérées comme étant <strong>en lecture seule</strong>.</p>
  <h2 id="glyphs">Structure des glyphes</h2>
  <p>La variable <tt>glyphs</tt> de la structure retournée sera une structure à part entière, contenant des informations pour chaque glyphe inclus dans la police. Chaque variable de cette structure sera le nom de caractère d'un glyphe, qui contiendra une structure contenant des informations
    pour ce glyphe. Vous pouvez imaginer ces structures imbriquées dans le format suivant (en partant de la structure principale) :</p>
  <p class="code">{<br> glyphes :<br> {<br> A : {},<br> B : {},<br> C : {},<br> // ...autres glyphes<br> },<br> // ...autres informations sur la police<br> }
  </p>
  <p>Vous pouvez utiliser le nom du caractère d'un glyphe pour récupérer ses informations dans la structure, comme dans le code suivant :</p>
  <p class="code">var _font_info = font_get_info(Font1) ;<br>
    <br> var _info_A = _font_info.glyphs[$ &quot;A&quot;] ; // $ est un accesseur de structure<br>
    <br> show_debug_message(_info_A) ;
  </p>
  <p>Le code ci-dessus récupère la structure de glyphe pour le caractère &quot;A&quot; et l'imprime dans le journal de sortie. Vous pouvez également remplacer la chaîne (<tt>&quot;A&quot; ) par une</tt> variable contenant une chaîne, ce qui vous permettra d'obtenir des informations pour n'importe quel glyphe par le biais de cette variable au moment de l'exécution.
    cette variable au <span class="notranslate">moment de l'exécution</span>.</p>
  <p>La structure retournée pour un glyphe contiendra les variables suivantes :</p>
  <p class="note"><strong>REMARQUE</strong>: En HTML5, la structure des glyphes sera vide pour toutes les polices de fichier chargées (telles que <tt>*.ttf</tt> ou <tt>*.otf</tt>) car le <span class="notranslate">moteur d'exécution</span> ne disposera pas d'informations sur ces glyphes.</p>
  <table>
    <tbody>
      <tr>
        <th>Nom de la variable</th>
        <th style="">Type de données</th>
        <th style="">Description</th>
      </tr>
      <tr>
        <td><strong>char</strong></td>
        <td style="">réel</td>
        <td style="">Si la police a été créée à partir d'un sprite, il s'agira de l'index de l'image du glyphe de ce sprite, sinon ce sera son numéro de caractère Unicode.<br>
          <br>
         <em><strong>Remarque</strong></em>: Toutes les variables inférieures à cette valeur ne seront pas présentes dans la structure si la police a été créée à partir d'un sprite.</td>
      </tr>
      <tr>
        <td><strong>x</strong></td>
        <td style="">réel</td>
        <td style="">La position X du glyphe sur la page de texture (en texels)</td>
      </tr>
      <tr>
        <td><strong>y</strong></td>
        <td style="">réel</td>
        <td style="">La position Y du glyphe sur la page de texture (en texels)</td>
      </tr>
      <tr>
        <td><strong>w</strong></td>
        <td style="">réel</td>
        <td style="">La largeur du glyphe sur la page de texture (en texels)</td>
      </tr>
      <tr>
        <td><strong>h</strong></td>
        <td style="">réel</td>
        <td style="">La hauteur du glyphe sur la page de texture (en texels)</td>
      </tr>
      <tr>
        <td><strong>équipe</strong></td>
        <td style="">réel</td>
        <td style="">Le nombre de pixels à décaler vers la droite lors du passage au caractère suivant (peut être négatif pour un décalage vers la gauche).</td>
      </tr>
      <tr>
        <td><strong>décalage</strong></td>
        <td style="">réel</td>
        <td style="">Le nombre de pixels pour décaler horizontalement le rendu de ce glyphe (peut être positif ou négatif).</td>
      </tr>
      <tr>
        <td><strong>crénage</strong></td>
        <td style="">tableau</td>
        <td style="">Un tableau d'entiers contenant des informations de crénage par paires (ou groupes de 2). Le premier entier d'une paire est la valeur Unicode pour un caractère, et le second entier est le montant à ajouter à la valeur de décalage de ce caractère (peut être positif ou négatif) s'il est précédé par le caractère de ce glyphe.
          négative) s'il est précédé par le caractère de ce glyphe.</td>
      </tr>
    </tbody>
  </table>
  <p class="note"><strong>REMARQUE</strong>: pour les polices de fichiers chargées au <span class="notranslate">moment de l'exécution</span>, les valeurs <tt>x</tt> et <tt>y</tt> d'un glyphe peuvent être de -1 s'il n'a pas encore été rendu, car il n'aura pas de position sur la page de texture utilisée pour la mise en cache.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">font_get_info(police) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>police</td>
        <td>La police pour laquelle les informations doivent être récupérées.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Structure (ou indéfinie)</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">var _info = font_get_info(my_font) ;<br>
    <br> if (_info != undefined &amp;&amp; _info.bold)<br> {
    <br> image_xscale *= 2 ;<br> image_yscale *= 2 ;<br> }
  </p>
  <p>Ce code récupère les informations relatives à la police stockée dans la variable <tt>my_font</tt>. Si la valeur retournée <strong>n'</strong>est <strong>pas </strong><tt>indéfinie</tt> et que la police donnée est en gras, l'échelle de l'instance est doublée.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Fonts.htm">Polices de caractères</a></div>
        <div style="float:right">Suivant : <a href="font_exists.htm">font_exists</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
font_get_info
-->
  <!-- TAGS
font_get_info
-->
</body>
</html>