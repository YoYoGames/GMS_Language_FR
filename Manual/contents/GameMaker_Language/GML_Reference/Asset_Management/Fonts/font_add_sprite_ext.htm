<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>font_add_sprite_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page décrivant la fonction font_add_sprite_ext" />
  <meta name="rh-index-keywords" content="font_add_sprite_ext" />
  <meta name="search-keywords" content="font_add_sprite_ext" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>font_add_sprite_ext</h1><p> Avec cette fonction, vous pouvez utiliser une &quot;bande de sprite&quot; (le sprite lui-même <b>doit</b> être un élément de sprite du navigateur de ressources, ou un sprite que vous avez ajouté aux ressources du jeu en utilisant <tt>sprite_add</tt> ) pour créer un nouvel élément de police, où chaque sous-image serait un symbole ou une lettre individuelle. Contrairement à la normale <a href="font_add_sprite.htm"><tt>font_add_sprite()</tt></a> qui a un ordre spécifique pour les sous-images du sprite, cette fonction mappera les sous-images du sprite en fonction de l&#39;argument &quot;string_map&quot; de la fonction. Cet argument est une chaîne que vous pouvez utiliser pour indiquer à <span class="notranslate">GameMaker Studio 2</span> ordre des sous-images de la police de sprite et il les mappera automatiquement lors de l&#39;écriture de texte. Ainsi, par exemple, si vous avez un string-map de &quot;AaBbCcDdEeFfGgHh&quot;, votre police de sprite <i>doit</i> avoir les sous-images ordonnées de cette manière. Vous pouvez définir &quot;espace&quot; comme étant n&#39;importe quel caractère que vous voulez, par exemple une seule ligne de la taille que vous voulez que l&#39;espace soit, et tous les espaces dans le texte seront rendus à cette largeur (mais l&#39;image choisie <i>ne</i> sera jamais rendue), ou si vous ne fournissez pas de sprite pour l&#39;espace, la largeur du caractère le plus large de la police de sprite sera utilisée à la place.</p><p> Vous pouvez également définir l&#39;espacement de la police pour qu&#39;il soit proportionnel (<tt>true</tt> ) ou non (<tt>false</tt> ), où une police proportionnelle est espacée en fonction de la largeur réelle des lettres (la lettre «i» prend donc moins de place que la lettre «w», par exemple) tandis qu&#39;une police non proportionnelle sera espacée en fonction du sous- largeur de l&#39;image, comme une police à espacement fixe. Enfin, vous pouvez définir l&#39;espace à laisser entre chaque lettre lors de l&#39;écriture, et cela peut être n&#39;importe quelle valeur entière, 0 étant sans espace (les lettres &quot;toucheront&quot; si elles sont proportionnelles). La fonction renvoie une <i>valeur d&#39;index</i> qui doit être stockée dans une variable car elle sera nécessaire dans tous les autres codes faisant référence à cette police, ou elle retournera -1 si la fonction échoue pour une raison quelconque.</p><p> Il est à noter que pour que les fonctions d&#39;alignement des polices fonctionnent (comme <a href="../../Drawing/Text/draw_set_halign.htm"><tt>draw_set_halign()</tt></a> ), alors le sprite de police doit avoir son origine définie dans le <i>coin supérieur gauche</i>. Si vous utilisez d&#39;autres valeurs, vous devrez prendre en compte le décalage d&#39;origine lors du dessin du texte à l&#39;aide de la police.</p><p class="note"> <b>REMARQUE:</b> lorsque vous chargez une police dans <span class="notranslate">GameMaker Studio 2</span> vous devez vous rappeler de la supprimer à nouveau (avec <span style="font-size:1px;"><a href="font_delete.htm"><tt style="font-size: 14px">font_delete ()</tt></a></span> ) lorsqu&#39;elle n&#39;est plus nécessaire, sinon il y a un risque de fuite de mémoire qui ralentira et finira par planter votre jeu.</p><p></p><h4> Syntaxe:</h4><p class="code">font_add_sprite_ext(spr, string_map, prop, sep);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">spr</span></td><td> Le sprite sur lequel ajouter une police.</td></tr><tr><td> <span class="notranslate">string_map</span></td><td> Chaîne à partir de laquelle l&#39;ordre des sous-images des sprites est pris.</td></tr><tr><td> <span class="notranslate">prop</span></td><td> Définir comme police proportionnelle ou non.</td></tr><tr><td> <span class="notranslate">sep</span></td><td> L&#39;espace à laisser entre chaque lettre.</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">Real</p><p></p><h4> Exemple:</h4><p class="code">global.Font = font_add_sprite_ext(spr_CalcFont, &quot;0123456789+-*/=&quot;, true, 2);</p><p> Le code ci-dessus créera un nouvel actif de police à partir du sprite indexé dans la variable &quot;spr_CalcFont&quot; et stockera l&#39;index de la nouvelle police dans la variable &quot;global.Font&quot;. Les sous-images de la police de sprite seront mappées à la chaîne spécifiée. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Fonts.htm">Polices</a></div><div style="float:right"> Suivant:<a href="font_replace.htm">font_replace</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
font_add_sprite_ext
-->
  <!-- TAGS
font_add_sprite_ext
-->
</body>
</html>