<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Événements de séquence, moments et messages de diffusion</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page décrivant les différentes fonctions et variables associées aux événements de séquence, aux moments et aux messages de diffusion" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Événements de séquence,Moments de séquence,Messages de séquence,diffuser des messages,event_create,event_destroy,event_clean_up,event_step,event_step_begin,event_step_end,event_async_system,event_broadcast_message" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> Événements, moments et messages diffusés</h1><p> Outre toutes les propriétés listées <a href="Sequences.htm">ici</a> pour une structure de séquence, vous avez également la possibilité d&#39;ajouter des propriétés spéciales &quot;action&quot; à une séquence. Il existe trois types différents de ces propriétés &quot;action&quot; qui peuvent être ajoutées à un objet séquence - <b>Evénements</b>. <b>Moments</b> et <b>messages diffusés</b> - et chacun d&#39;eux est expliqué plus en détail dans les sections ci-dessous.</p><p></p><h2> Événements de séquence</h2><p> <b>Des événements</b> peuvent être ajoutés aux objets de séquence, et ces événements sont analogues aux événements utilisés par les actifs d&#39;objets. Les événements que vous affectez à un objet séquence se produiront dans un ordre spécifique, soit une fois à un moment défini dans le cycle de vie de la séquence, soit chaque image que la séquence est en cours d&#39;exécution. Dans cette section, nous expliquons comment ces événements sont gérés à l&#39;aide de code, mais ils peuvent également être ajoutés à l&#39;aide de l&#39; <a href="../../../../The_Asset_Editors/Sequences.htm">éditeur de séquence</a>. Notez que l&#39;ordre des événements répertoriés ici n&#39;est pas influencé par la <a class="glossterm" data-glossterm="tête de lecture" href="#">direction de la tête de lecture</a>, et même si la séquence est lue à l&#39;envers, les événements seront toujours exécutés dans l&#39;ordre indiqué ci-dessous.</p><p> Les événements disponibles sont:<b></b></p><ul class="colour"><li> <b>Créer</b>: il se déclenche lorsqu&#39;une instance de séquence est créée sur un calque.</li><li> <b>Destroy</b>: cela se déclenche lorsqu&#39;une instance de séquence sur un calque est détruite.</li><li> <b>Nettoyage</b>: il est déclenché lorsqu&#39;une instance de séquence est garbage collection.</li><li> <b>Step</b>: déclenché juste avant l&#39;événement habituel de l&#39;étape d&#39;objet. <b>Important!</b> Si la séquence est mise en pause, cet événement ne sera déclenché qu&#39;à l&#39;étape suivante après le redémarrage de la lecture de la séquence.</li><li> <b>Étape de</b> début: déclenchée juste avant l&#39;événement de début d&#39;étape de l&#39;objet. <b>Important!</b> Si la séquence est mise en pause, cet événement ne sera déclenché qu&#39;à l&#39;étape suivante après le redémarrage de la lecture de la séquence.</li><li> <b>End Step</b>: déclenché juste avant l&#39;événement de fin d&#39;objet. <b>Important!</b> Si la séquence est mise en pause, cet événement ne sera déclenché qu&#39;à l&#39;étape suivante après le redémarrage de la lecture de la séquence.</li><li> <b>Système</b> asynchrone: déclenché de la même manière que n&#39;importe quel objet <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/System.htm">Gestionnaires d&#39;événements du système asynchrone</a>. <em><b>Important!</b> Si la séquence est mise en pause, cet événement ne sera pas déclenché.</em></li><li> <b>Message de diffusion</b>: déclenché lors de la mise à jour de la séquence lorsqu&#39;une <span class="notranslate">keyframe</span> message de diffusion est rencontrée.</li></ul><p> Tous les événements doivent être associés à des fonctions définies dans un script, donc pour configurer un événement, une <a href="../../../GML_Overview/Method_Variables.htm">variable de méthode</a> doit être affectée à une propriété avec le nom correct qui indique à la séquence quel événement doit appeler la fonction. La syntaxe pour cela est la suivante:<br/></p><p class="code">&lt;sequence_struct&gt;.&lt;event_property&gt; = method(&lt;sequence_struct&gt;, &lt;function_name&gt;);</p><p> Les propriétés de structure de séquence pour les différents événements sont les suivantes: <tt></tt></p><ul class="colour"><li><tt>event_create </tt><tt></tt></li><li><tt>event_destroy </tt><tt></tt></li><li><tt>event_clean_up </tt><tt></tt></li><li><tt>event_step </tt><tt></tt></li><li><tt>event_step_begin </tt><tt></tt></li><li><tt>event_step_end </tt></li><li><tt>event_async_system </tt><tt></tt></li><li><tt>event_broadcast_message</tt></li></ul><p> Pour donner un exemple d&#39;utilisation, disons que nous voulons que la séquence inverse la direction lorsqu&#39;un clic gauche de la souris est détecté. Nous aurions d&#39;abord besoin de créer un script avec la fonction que nous voulons appeler, quelque chose comme ceci:</p><p class="code">/// @function seq_reverse();<br/>
    <br/> function seq_reverse()<br/> {
    <br/> if mouse_check_button_pressed(mb_left)<br/>     {
    <br/>     if self.headDirection == seqdir_right<br/>         {
    <br/>         self.headDirection = seqdir_left;<br/>         }
    <br/>     else self.headDirection = seqdir_right;<br/>     }
    <br/> }
  </p><p> Dans cette fonction, tout ce que nous faisons est d&#39;écouter un clic de souris, puis d&#39;inverser le sens de lecture de la séquence à laquelle la méthode a été liée. Vous remarquerez qu&#39;actuellement vous n&#39;êtes pas en mesure de passer de paramètres aux fonctions qui sont liées à ces propriétés, et dans tous les cas <a href="../../../GML_Overview/Instance_Keywords.htm"><tt>self</tt></a> la variable dans la portée de la fonction est affectée à l&#39;instance de séquence.</p><p class="note"> <b>REMARQUE</b>: il convient de noter que dans le script ci-dessus, le <tt>self</tt> L&#39;identifiant peut être omis et n&#39;est utilisé que pour afficher explicitement la portée de la variable de méthode utilisée pour cet exemple.</p><p> Pour attribuer ceci à une séquence, vous feriez alors quelque chose comme ceci:</p><p class="code">var _seq = sequence_get(Sequence1);<br/> _seq.event_step = method(_seq, seq_reverse);</p><p> Nous avons maintenant attribué un événement d&#39;étape à l&#39; <i>objet</i> séquence avec une fonction permettant de détecter le moment où une souris est enfoncée, puis de changer la direction de la tête de lecture de l&#39; <i>instance de</i> séquence après sa création dans une pièce.</p><p></p><h2> <label for="2">Des moments</label></h2><p> Un <b>moment de</b> séquence est une action de code unique qui est déclenchée sur une ou plusieurs images spécifiées pendant la lecture de la séquence. Ces moments de code sont - comme pour les événements (expliqués ci-dessus) - simplement des <a href="../../../GML_Overview/Method_Variables.htm">variables de méthode</a> prédéfinies qui sont déclenchées sur l&#39;image donnée. Par exemple, supposons que vous souhaitiez qu&#39;une séquence crée une occurrence de &quot;puce&quot; sur une image spécifique de l&#39;animation - vous devez d&#39;abord créer la fonction à utiliser pour cette action, quelque chose comme ceci:</p><p class="code">/// @function seq_shoot();<br/>
    <br/> seq_shoot = function()<br/>     {
    <br/>     instance_create_layer(sequence.xorigin, sequence.yorigin, &quot;Instances&quot;, obj_Bullet);<br/>     }
  </p><p> Vous l&#39;ajouteriez ensuite à un cadre dans le <tt>momentKeyframes</tt> propriété de la structure de séquence. Il s&#39;agit essentiellement d&#39;une piste &quot;spéciale&quot; qui n&#39;est utilisée qu&#39;à cette fin et qui ne peut donc prendre <span class="notranslate">keyframe</span> associées aux actions de moment que vous souhaitez que la séquence ait. Cette piste est créée à peu près de la même manière que vous le feriez pour toute autre piste, en créant des <span class="notranslate">keyframe</span> et en les remplissant avec des <span class="notranslate">keyframe</span>, où le canal 0 est le seul canal que vous pouvez utiliser et le type de piste est <tt>seqtracktype_moment</tt>. Voici un exemple de la façon dont cela serait créé, en utilisant la fonction que nous avons définie ci-dessus pour se déclencher sur les moments (images) donnés:</p><p class="code">var _seq = sequence_get(my_Seq);<br/> var _k = array_create(3);<br/> _k[0] = sequence_keyframe_new(seqtracktype_moment);<br/> _k[0].frame = 60;<br/> _k[1] = sequence_keyframe_new(seqtracktype_moment);<br/> _k[1].frame = 120;<br/> _k[2] = sequence_keyframe_new(seqtracktype_moment);<br/>    _k[2].frame = 180;<br/> var _d = array_create(1);<br/> _d[0] = sequence_keyframedata_new(seqtracktype_moment);<br/> _d[0].channel = 0;<br/> _d[0].event = method(_d[0], seq_shoot);<br/> _k[0].channels = _d;<br/> _k[1].channels = _d;<br/> _k[2].channels
    = _d;<br/> _seq.momentKeyframes = _k;</p><p> Le code ci-dessus définira simplement les images 60, 120 et 180 de la piste &quot;moment&quot; pour appeler la méthode <tt>seq_shoot</tt>. Vous remarquerez qu&#39;actuellement vous n&#39;êtes pas en mesure de passer de paramètres aux fonctions qui sont utilisées à chaque instant, et dans tous les cas les <tt>self</tt> la variable dans la portée de la fonction est affectée à l&#39;instance de séquence (vous n&#39;avez généralement pas besoin d&#39;utiliser <tt>self</tt> mais dans certains cas particuliers, cela peut être utile).</p><p></p><h2> <label for="3">Diffuser des messages</label></h2><p> Les séquences peuvent être créées pour générer <b>des messages de diffusion</b>, quelles chaînes simples sont ajoutées à des images spécifiques le long de la chronologie de l&#39;animation, et lorsque ce point de la chronologie est atteint, la chaîne sera diffusée à toutes les instances d&#39;objet qui l&#39;écoutent. Vous pouvez ajouter ces messages dans l&#39;EDI à l&#39;aide de l&#39; <a href="../../../../The_Asset_Editors/Sequences.htm">éditeur de séquence</a>, mais ils peuvent également être créés et modifiés à l&#39;aide de code.</p><p> Pour créer un message de diffusion sur une séquence à l&#39;aide de <span class="notranslate">GML</span>, vous devez les ajouter à une image dans le <tt>messageEventKeyframes</tt> propriété de la structure de séquence. Il s&#39;agit essentiellement d&#39;une piste &quot;spéciale&quot; qui n&#39;est utilisée qu&#39;à cette fin et qui ne peut donc prendre <span class="notranslate">keyframe</span> associées aux messages de diffusion que vous souhaitez que la séquence ait. Cette piste est créée à peu près de la même manière que vous le feriez pour toute autre piste, en créant des <span class="notranslate">keyframe</span> et en les remplissant avec des <span class="notranslate">keyframe</span>, où le canal 0 est le seul canal que vous pouvez utiliser et le type de piste est <tt>seqtracktype_message</tt>. Voici un exemple de la façon dont cela serait créé:</p><p class="code">var _seq = sequence_get(my_Seq);<br/> var _k = array_create(2);<br/> _k[0] = sequence_keyframe_new(seqtracktype_message);<br/> _k[0].frame = 60;<br/> _k[1] = sequence_keyframe_new(seqtracktype_message);<br/> _k[1].frame = 120;<br/> var _m1 = array_create(2);<br/>    _m1[0] = &quot;Hello&quot;;<br/> _m1[1] = &quot;World&quot;;<br/> var _m2 = array_create(1);<br/> _m2[0] = &quot;This is a Broadcast Message&quot;;<br/> var _d1 = array_create(1);<br/> _d1[0] = sequence_keyframedata_new(seqtracktype_message);<br/>    _d1[0].channel = 0;<br/> _d1[0].events = _m1;<br/> var _d2 = array_create(1);<br/> _d2[0] = sequence_keyframedata_new(seqtracktype_message);<br/> _d2[0].channel = 0;<br/> _d2[0].events = _m2;<br/> _k[0].channels = _d1;<br/> _k[1].channels = _d2;<br/>    _seq.messageEventKeyframes = _k;</p><p> Vous remarquerez que le texte du message est transmis au <span class="notranslate">keyframe</span> sous forme de tableau. En effet, vous pouvez diffuser plusieurs messages sur la même trame et faire en sorte que différentes instances d&#39;objet les écoutent et réagissent différemment en fonction du message auquel elles s&#39;attendent réellement.</p><p> Une fois qu&#39;un message de diffusion a été émis par la séquence, vous pouvez l&#39;analyser à l&#39;aide de l&#39; <i>événement Autre</i> &gt; <i>Message de diffusion</i> dans les instances d&#39;objet, qui est expliqué en détail <a href="../../../../The_Asset_Editors/Sequence_Properties/Broadcast_Messages.htm">ici</a>. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Sequences.htm">Séquences</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Sequence Events
Sequence Moments
Sequence Broadcast Messages
broadcast Messages
event_create
event_destroy
event_clean_up
event_step
event_step_begin
event_step_end
event_async_system
event_broadcast_message
-->
  <!-- TAGS
sequence_events_moments_broadcasts
-->
</body>
</html>