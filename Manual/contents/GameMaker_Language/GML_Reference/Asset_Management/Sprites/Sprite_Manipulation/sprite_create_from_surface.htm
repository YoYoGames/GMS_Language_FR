<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>sprite_create_from_surface</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page expliquant la fonction sprite_create_from_surface" />
  <meta name="rh-index-keywords" content="sprite_create_from_surface" />
  <meta name="search-keywords" content="sprite_create_from_surface" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>sprite_create_from_surface</h1><p> Avec cette fonction, vous pouvez créer un sprite à partir d&#39;une surface précédemment initialisée (la valeur de l&#39;ID d&#39;index de surface est renvoyée lorsque vous créez la surface à l&#39;aide de <a href="../../../Drawing/Surfaces/surface_create.htm"><tt>surface_create()</tt></a> ). Les coordonnées x et y que vous entrez ensuite dans la fonction doivent être relatives à la position (0,0) de la <i>surface</i> (le coin supérieur gauche) et non à la fenêtre de jeu (ni à la vue si vous en avez une active). Les arguments largeur et hauteur sont en pixels et définissent la largeur et la hauteur de la partie de la surface à utiliser.</p><p> Définition de l&#39;argument &quot;removeback&quot; sur <tt>true</tt> supprimera une couleur de l&#39;image-objet, en vérifiant le <i>pixel inférieur gauche</i> de l&#39;image-objet pour la couleur à cet endroit, puis en l&#39;utilisant comme couleur à supprimer.</p><p> Si vous choisissez l&#39;option &quot;removeback&quot;, vous pouvez également souhaiter que <span class="notranslate">GameMaker Studio 2</span> les bords de l&#39;image-objet en définissant l&#39;argument &quot;smooth&quot; sur <tt>true</tt>. Tout cela ne fait que créer une bordure semi-transparente autour des bords du sprite après que son arrière-plan ait été supprimé.</p><p> Enfin, vous pouvez également spécifier le x et l&#39; <i>origine</i> y pour l&#39;image - objet. C&#39;est le point où le sprite est &quot;fixé&quot; sur l&#39;instance qui l&#39;utilise, et est toujours calculé par rapport au coin supérieur gauche 0,0 d&#39;une sous-image de sprite. Ainsi, par exemple, un sprite de 32 x 32 pixels avec ces valeurs définies sur (16,16) aura son origine au centre.</p><p> Par défaut, tous les nouveaux sprites ont leurs cadres de délimitation calculés automatiquement (la bbox exacte dépendra de la taille et de la transparence du sprite), mais vous souhaiterez peut-être personnaliser cela, auquel cas vous devez également utiliser la fonction <a href="sprite_collision_mask.htm"><tt>sprite_collision_mask()</tt></a>.</p><p class="note"> <b>REMARQUE:</b> lorsque vous créez un sprite dans <span class="notranslate">GameMaker Studio 2</span> avec cette méthode, vous devez vous rappeler de le supprimer à nouveau (avec <a href="sprite_delete.htm"><tt>sprite_delete()</tt></a> ) lorsqu&#39;il n&#39;est plus nécessaire, sinon il y a un risque de fuite de mémoire qui ralentira et finira par planter votre jeu.</p><p></p><h4> Syntaxe:</h4><p class="code">sprite_create_from_surface(index, x, y, w, h, removeback, smooth, xorig, yorig);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">index</span></td><td> L&#39;indice de la surface à partir de laquelle créer.</td></tr><tr><td> <span class="notranslate">x</span></td><td> La position x à partir de laquelle copier.</td></tr><tr><td> <span class="notranslate">y</span></td><td> La position y à partir de laquelle copier.</td></tr><tr><td> <span class="notranslate">w</span></td><td> La largeur de la zone à copier (à partir de la position x).</td></tr><tr><td> <span class="notranslate">h</span></td><td> La hauteur de la zone à copier (à partir de la position y).</td></tr><tr><td> <span class="notranslate">removeback</span></td><td> Indique s&#39;il faut rendre transparents tous les pixels avec la couleur d&#39;arrière-plan (pixel en bas à gauche).</td></tr><tr><td> <span class="notranslate">smooth</span></td><td> Indique s&#39;il faut lisser les bords.</td></tr><tr><td> <span class="notranslate">xorig</span></td><td> Indique la position x de l&#39;origine dans le sprite.</td></tr><tr><td> <span class="notranslate">yorig</span></td><td> Indique la position y de l&#39;origine dans le sprite.</td></tr></tbody></table><p></p><h4> Retour</h4><p class="code">Real (unique sprite ID value)</p><p></p><h4> Exemple:</h4><p class="code">var surf;<br/> surf = surface_create(32, 32);<br/> surface_set_target(surf);
    <br/> draw_clear_alpha(c_black, 0);<br/> draw_sprite(spr_Body, 0, 0, 0);<br/> draw_sprite(spr_Clothes, 0, 0, 0);<br/> draw_sprite(spr_Hair, 0, 0, 0);<br/> spr_custom = sprite_create_from_surface(surf, 0, 0, 32, 32, true, true, 16, 16);<br/> surface_reset_target();
    <br/> surface_free(surf);
  </p><p> Le code ci-dessus crée une surface et stocke son index dans la variable locale &quot;surf&quot;. Il cible ensuite cette surface, l&#39;efface et dessine plusieurs sprites les uns sur les autres. Enfin, il crée un nouveau sprite à partir de l&#39;image composite dessinée sur la surface et affecte son index à &quot;spr_Custom&quot; avant de libérer la mémoire utilisée par la surface. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Sprite_Manipulation.htm">Manipulation des sprites</a></div><div style="float:right"> Suivant:<a href="sprite_add_from_surface.htm">sprite_add_from_surface</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
sprite_create_from_surface
-->
  <!-- TAGS
sprite_create_from_surface
-->
</body>
</html>