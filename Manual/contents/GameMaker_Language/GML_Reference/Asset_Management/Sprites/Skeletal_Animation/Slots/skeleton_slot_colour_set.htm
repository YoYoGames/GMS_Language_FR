<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>skeleton_slot_colour_set</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page expliquant la fonction skeleton_slot_colour_set" />
  <meta name="rh-index-keywords" content="skeleton_slot_colour_set" />
  <meta name="search-keywords" content="skeleton_slot_colour_set,skeleton_slot_color_set" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>skeleton_slot_colour_set</h1><p> Avec cette fonction, vous pouvez définir une couleur et un alpha de l&#39;emplacement de pièce jointe afin que tous les sprites qui y sont attachés soient dessinés avec ces valeurs de fusion. Gardez à l&#39;esprit que l&#39;image-objet d&#39;instance peut avoir une couleur de fusion et un paramètre alpha (<a href="../../Sprite_Instance_Variables/image_blend.htm"><tt>image_blend</tt></a> et <a href="../../Sprite_Instance_Variables/image_angle.htm"><tt>image_alpha</tt></a> ), tout comme la pièce jointe (voir la fonction <a href="../Attachments/skeleton_attachment_create_colour.htm"><tt>skeleton_attachment_create_colour()</tt></a> ), et donc la couleur finale et l&#39;alpha que le sprite d&#39;attachement assigné pour l&#39;emplacement aura sera un composite de toutes ces valeurs.</p><p></p><h4> Syntaxe:</h4><p class="code">skeleton_slot_colour_set(slot, colour, alpha);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">slot</span></td><td> Le nom de l&#39;emplacement à définir, une chaîne</td></tr><tr><td> <span class="notranslate">colour</span></td><td> La couleur à définir, soit un entier, une constante ou une valeur hexadécimale.</td></tr><tr><td> <span class="notranslate">alpha</span></td><td> L&#39;alpha à définir de 0 à 1.</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">N/A</p><p></p><h4> Exemple:</h4><p class="code">slot_list = ds_list_create();<br/> skeleton_find_slot(mouse_x, mouse_y, slot_list);<br/> if !ds_list_empty(slot_list)<br/> {
    <br/> for (var i = 0; i &lt; ds_list_size(slot_list); ++i;)<br/>     {
    <br/>     if skeleton_slot_colour_get(slot_list[| i]) != c_white<br/>         {
    <br/>         skeleton_slot_colour_set(slot_list[| i], c_white, 1);<br/>         }
    <br/>     }
    <br/> }
  </p><p> Le code ci-dessus crée une liste DS, puis la remplit avec les noms d&#39;emplacement trouvés à la position de la souris dans la pièce. Il parcourt ensuite la liste des emplacements et réinitialise la couleur des emplacements trouvés en blanc avec un alpha de 1 si la couleur n&#39;est pas déjà blanche. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Slots.htm">Slots</a></div><div style="float:right"> Suivant:<a href="skeleton_slot_colour_get.htm">skeleton_slot_colour_get</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
skeleton_slot_colour_set
skeleton_slot_color_set
-->
  <!-- TAGS
skeleton_slot_colour_set
-->
</body>
</html>