<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>skeleton_get_bounds</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page expliquant la fonction skeleton_get_bounds" />
  <meta name="rh-index-keywords" content="skeleton_get_bounds" />
  <meta name="search-keywords" content="skeleton_get_bounds" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>skeleton_get_bounds</h1><p> Cette fonction renverra un tableau de valeurs associées à tout cadre de délimitation donné pour le sprite d&#39;animation squelette actuellement affecté. Vous fournissez le numéro d&#39;index de la boîte englobante pour obtenir les détails de (vous pouvez récupérer le nombre total de boîtes englobantes pour l&#39;image-objet à l&#39;aide de la fonction <a href="skeleton_get_num_bounds.htm"><tt>skeleton_get_num_bounds()</tt></a> ) et la fonction renverra un tableau avec les éléments suivants:</p><ul class="colour"><li> [0] - le nombre de points sur la boîte englobante (un réel)</li><li> [1] - le nom de la boîte englobante (une chaîne)</li><li> [2] - la position x du premier point</li><li> [3] - la position y du premier point</li><li> [etc...] - autres données de position x / y jusqu&#39;au nombre de points sur la boîte englobante</li></ul><p></p><h4> Syntaxe:</h4><p class="code">skeleton_get_bounds(index);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">index</span></td><td> Index de la boîte englobante pour obtenir les valeurs de.</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">Array (minimum 2 elements: numPoints, name [, xPos, yPos, etc...])</p><p></p><h4> Exemple:</h4><p></p><p class="code">var num = skeleton_get_num_bounds();<br/> var yy = 60;<br/> for(var i = 0; i &lt; num; i++;)<br/>     {
    <br/>     var b_info = skeleton_get_bounds(i);<br/>     if b_info[0] &gt; 0<br/>         {
    <br/>         var data = b_info[1] + &quot;:&quot;;<br/>         for(var j = 0; j &lt; b_info[0]; j++;)<br/>             {
    <br/>             data += &quot; (&quot; + string(b_info[(j * 2) + 2]) + &quot;, &quot; + string(b_info[(j * 2) + 2 + 1]) + &quot;)&quot;;<br/>             }
    <br/>         draw_text(20, yy, data);<br/>         yy += 20;<br/>         }
    <br/>     }
  </p><p> Le code ci-dessus parcourra chacune des boîtes englobantes associées au sprite actuellement attribué, puis dessinera ces données sous forme de chaîne à l&#39;écran. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Drawing_And_Miscellaneous.htm">Dessin et divers</a></div><div style="float:right"> Suivant:<a href="skeleton_collision_draw_set.htm">skeleton_collision_draw_set</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
skeleton_get_bounds
-->
  <!-- TAGS
skeleton_get_bounds
-->
</body>
</html>