<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>squelette_get_bounds</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function skeleton_get_bounds" />
  <meta name="rh-index-keywords" content="skeleton_get_bounds" />
  <meta name="search-keywords" content="skeleton_get_bounds" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>squelette_get_bounds</h1>
  <p>Cette fonction renvoie un tableau de valeurs associées à une bounding box donnée pour le sprite d'animation du squelette actuellement assigné. Vous devez fournir le numéro d'index de la bounding box dont vous souhaitez obtenir les détails (vous pouvez récupérer le nombre total de bounding
    box pour le sprite à l'aide de la fonction <a href="skeleton_get_num_bounds.htm"><tt>skeleton_get_num_bounds()</tt></a>) et la fonction renvoie un tableau contenant les éléments suivants :</p>
  <ul class="colour">
    <li>0] - le nombre de points sur la boîte de délimitation (un réel)</li>
    <li>1] - le nom de la boîte englobante (une chaîne).</li>
    <li>2] - la position x du premier point</li>
    <li>3] - la position y du premier point.</li>
    <li>d'autres données de position x/y jusqu'au nombre de points de la boîte englobante.</li>
  </ul>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">squelette_get_bounds(index) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>indice</td>
        <td>L'indice de la boîte englobante pour obtenir les valeurs.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Tableau (minimum 2 éléments : numPoints, nom [, xPos, yPos, etc...])</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p> </p>
  <p class="code">var num = skeleton_get_num_bounds() ;<br> var yy = 60 ;<br> for(var i = 0 ; i &lt; num ; i++ ;)<br> {
    <br> var b_info = skeleton_get_bounds(i) ;<br> if b_info[0] &gt; 0<br> {
    <br> var data = b_info[1] + &quot; :&quot;;<br> for(var j = 0 ; j &lt; b_info[0] ; j++ ;)<br> {
    <br> data += &quot; (&quot; + string(b_info[(j * 2) + 2])) + &quot;, &quot; + string(b_info[(j * 2) + 2 + 1]) + &quot;)&quot; ;<br> }
    <br> draw_text(20, yy, data) ;<br> yy += 20 ;<br> }
    <br> }
  </p>
  <p>Le code ci-dessus parcourt en boucle chacune des boîtes englobantes associées au sprite actuellement attribué, puis affiche ces données à l'écran sous forme de chaîne.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Drawing_And_Miscellaneous.htm">Dessin et divers</a></div>
        <div style="float:right">Suivant : <a href="skeleton_collision_draw_set.htm">skeleton_collision_draw_set</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
skeleton_get_bounds
-->
  <!-- TAGS
skeleton_get_bounds
-->
</body>
</html>