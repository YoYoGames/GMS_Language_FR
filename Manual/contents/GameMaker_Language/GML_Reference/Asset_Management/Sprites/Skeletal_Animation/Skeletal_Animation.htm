<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Animation squelettique</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different Skeletal Animation functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Skeletal Animation,gm_SpineTintBlackColour,tint black,Spine" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Sprites d'animation squelettique</h1>
  <p>Les fonctions trouvées dans cette section sont <i>uniquement</i> destinées à être utilisées avec des sprites qui ont été importés depuis un fichier d'animation squelettique (plus précisément, les fichiers JSON que les <a href="http://es.esotericsoftware.com/"><b>Colonne vertébrale</b></a> exporte)
    et peuvent être utilisées pour obtenir des informations sur une animation dans votre jeu, ainsi que pour définir certaines propriétés dans une animation. Ces fonctions peuvent être utilisées avec les fonctions et les variables habituelles des sprites, ce qui vous permet (par exemple) de
    mélanger deux animations de squelette à l'aide de ces fonctions spéciales tout en définissant l'échelle de l'image à l'aide des variables d'instance de sprite normales (pour plus d'informations sur les variables d'instance de sprite, voir <a href="../Sprite_Instance_Variables/Sprite_Instance_Variables.htm">ici</a>).</p>
  <p class="note"><b>REMARQUE</b>: pour plus d'informations sur l'importation de sprites d'animation squelettique réalisés avec Spine, veuillez consulter la section <a href="../../../../../Settings/Texture_Information/Non-Bitmap_Sprites.htm">Importation de sprites non bitmap</a>.</p>
  <p>Vous pouvez en savoir plus sur les fonctions de ces types de sprites dans les sections ci-dessous :</p>
  <p> </p>
  <ul class="colour">
    <li><a href="Animation/Animation.htm"><label for="a">Animation</label></a></li>
    <li><a href="Skins/Skins.htm"><label for="b">Skins</label></a></li>
    <li><a href="Attachments/Attachments.htm"><label for="c">Pièces jointes</label></a></li>
    <li><a href="Bones/Bones.htm"><label for="d">Bones</label></a></li>
    <li><a href="Slots/Slots.htm"><label for="f">Machines à sous</label></a></li>
    <li><a href="Drawing_And_Miscellaneous/Drawing_And_Miscellaneous.htm"><label for="e">Dessin et divers</label></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <h2>Support Tint Black</h2>
  <p>Cette fonctionnalité permet de teinter les zones sombres des emplacements de sprites Spine différemment des zones claires (c'est une fonctionnalité de l'IDE Spine, voir la section <b>Tint black</b> <a href="http://esotericsoftware.com/spine-attachments" target="_blank">ici</a> pour plus de détails). Actuellement, afin d'utiliser cette fonctionnalité dans <span class="notranslate">GameMaker Studio 2</span>, vous devez utiliser un fichier personnalisé de type <a href="../../../../../The_Asset_Editors/Shaders.htm"><span class="notranslate">shader</span></a> lorsque
    dessiner un sprite Spine qui l'utilise. Ce <span class="notranslate">shader</span> contient une variable globale uniforme appelée &quot;gm_SpineTintBlackColour<tt>&quot;</tt> que le runner remplit avec la couleur Tint Black actuelle, récupérée automatiquement à partir des données Spine. Le <span class="notranslate">shader</span>
    requis est présenté ci-dessous :</p>
  <p>Le Vertex <span class="notranslate">Shader</span> (c'est le même que le vertex <span class="notranslate">shader</span> passthrough par défaut)</p>
  <p class="code">attribut vec3 in_Position ; // (x,y,z)<br> attribut vec4 in_Colour ; // (r,g,b,a)<br> attribut vec2 in_TextureCoord ; // (u,v)<br>
    <br> variable vec2 v_vTexcoord ;<br> variable vec4 v_vColour ;<br>
    <br> void main()<br> {
    <br> vec4 object_space_pos = vec4( in_Position.x, in_Position.y, in_Position.z, 1.0) ;<br> gl_Position = gm_Matrices[MATRIX_WORLD_VIEW_PROJECTION] * object_space_pos ;<br> v_vColour = in_Colour ;<br> v_vTexcoord = in_TextureCoord ;<br> }
  </p>
  <p>Le Fragment <span class="notranslate">Shader</span>:</p>
  <p class="code">vec2 variable v_vTexcoord ;<br> vec4 variable v_vColour ;<br>
    <br> uniform vec4 gm_SpineTintBlackColour ; // Il s'agit de l'uniforme contenant la couleur noir-teint<br>
    <br> void main()<br> {
    <br> vec4 tb = gm_SpineTintBlackColour ;<br> vec4 texcol = texture2D( gm_BaseTexture, v_vTexcoord ) ;<br> vec4 outcol ;<br> outcol.rgb = v_vColour.rgb * texcol.rgb ;<br> outcol.rgb += tb.rgb * ((tb.a * (texcol.a - 1.0)) + (1.0 - texcol.rgb)) ; //
    Cette ligne exécute la logique de mélange tint-noir<br> outcol.a = v_vColour.a * texcol.a ;<br> gl_FragColor = outcol ;<br> }
  </p>
  <p>Vous pouvez l'utiliser en appelant d'abord le <span class="notranslate">shader</span>, puis en dessinant le sprite, puis en réinitialisant le <span class="notranslate">shader</span>, comme ceci :</p>
  <p class="code"><span class="notranslate">shader_set</span>(shd_spine_tint_black) ;<br> draw_self() ;
    <br> <span class="notranslate">shader_reset</span>() ;
  </p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="../Sprites.htm">Sprites</a></div>
        <div style="float:right">Suivant : <a href="../Sprite_Information/Sprite_Information.htm"><label for="three">Informations sur les sprites</label></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Spine Sprites
Spine
Skeleton Animation Sprites
gm_SpineTintBlackColour
tint black
-->
  <!-- TAGS
sprite_spìne_functions
-->
</body>
</html>