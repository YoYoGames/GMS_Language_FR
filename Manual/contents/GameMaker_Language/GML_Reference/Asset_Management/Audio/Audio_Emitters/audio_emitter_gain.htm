<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>audio_emitter_gain</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page expliquant la fonction audio_emitter_gain" />
  <meta name="rh-index-keywords" content="audio_emitter_gain" />
  <meta name="search-keywords" content="audio_emitter_gain" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>audio_emitter_gain</h1><p> Cette fonction règle le gain maximum (volume) du son. Le volume perçu d&#39;un son peut changer en fonction de la <a href="audio_emitter_falloff.htm">valeur d&#39;atténuation</a> et de la position qu&#39;il occupe par rapport à l&#39; <i>auditeur</i>, mais en réglant le gain avec cette fonction, le volume total ne dépassera jamais la valeur de gain spécifiée. L&#39;image ci-dessous illustre comment le gain affecte le volume de l&#39;émetteur lorsque l&#39;atténuation est supérieure à 0:</p><p><img alt="Audio Gain Diagram" class="center" src="../../../../../assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Gain.png" /> Cette fonction changera le volume du son pendant qu&#39;il est joué ainsi que tous les sons suivants joués par l&#39;émetteur donné. Notez que sur certaines plates-formes, vous pouvez avoir un gain supérieur à 1, bien qu&#39;une valeur de 1 soit considérée comme «plein volume» et que tout ce qui est supérieur peut entraîner un écrêtage ou une distorsion audio.</p><p class="note"> <b>REMARQUE:</b> le volume final sera également influencé par le gain audio global qui a été défini par la fonction <span style="font-size:1px;"><a href="../audio_master_gain.htm"><tt style="font-size: 14px">audio_master_gain ()</tt></a></span>.</p><p></p><h4> Syntaxe:</h4><p class="code">audio_emitter_gain(emitter, gain);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">emitter</span></td><td> L&#39;indice de l&#39;émetteur à changer.</td></tr><tr><td> <span class="notranslate">gain</span></td><td> Le gain maximum (par défaut 1).</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">N/A</p><p></p><h4> Exemple:</h4><p class="code">if up<br/>    {
    <br/>    gain += 0.05;<br/>    if gain &gt;= 1 up = false;<br/>    }
    <br/> else
    <br/>    {
    <br/>    gain += 0.05;<br/>    if gain &lt;= 0 up = true;<br/>    }
    <br/> audio_emitter_gain(s_emit, gain);</p><p> Le code ci-dessus définit la variable &quot;gain&quot; à des valeurs différentes et utilise ensuite cette même variable pour définir le gain de l&#39;émetteur indexé dans la variable &quot;s_emit&quot;. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Audio_Emitters.htm">Émetteurs audio</a></div><div style="float:right"> Suivant:<a href="audio_emitter_pitch.htm">audio_emitter_pitch</a></div><div style="float:right"></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
audio_emitter_gain
-->
  <!-- TAGS
audio_emitter_gain
-->
</body>
</html>