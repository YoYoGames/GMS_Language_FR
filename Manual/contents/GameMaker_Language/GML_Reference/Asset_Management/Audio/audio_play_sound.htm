<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>audio_play_sound</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_play_sound" />
  <meta name="rh-index-keywords" content="audio_play_sound" />
  <meta name="search-keywords" content="audio_play_sound" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>audio_play_sound</h1>
  <p>Avec cette fonction, vous pouvez jouer n'importe quelle ressource sonore dans votre jeu. Vous fournissez l'index du son et lui attribuez une priorité, qui est ensuite utilisée pour déterminer comment les sons sont traités lorsque le nombre de sons joués dépasse la limite fixée par la fonction 
    <a href="audio_channel_num.htm"><tt>audio_channel_num()</tt></a>. Les sons de priorité inférieure seront arrêtés en faveur des sons de priorité supérieure. La valeur de la priorité peut être un nombre réel quelconque (la valeur réelle est arbitraire et peut être comprise entre 0 et 1 ou entre 0 et 100, car <span class="notranslate">GameMaker Studio 2</span> leur accordera la même priorité).
      les classera de la même façon). Notez que lorsqu'il s'agit de priorité, plus le nombre est <i>élevé</i>, plus la priorité est <i>élevée</i>, de sorte qu'un son de priorité 100 sera favorisé par rapport à un son de priorité 1.
      priorité 1. Le dernier argument sert à faire tourner le son en boucle. Si vous lui attribuez la valeur <tt>true (vrai)</tt>, le son tournera en boucle jusqu'à ce qu'il soit arrêté, et si vous lui attribuez la valeur <tt>false (faux)</tt>, le son sera joué une seule fois.
      seulement.</p>
  <p>Cette fonction renvoie également un numéro d'index unique pour le son en cours de lecture, qui peut ensuite être stocké dans une variable afin que vous puissiez le mettre en pause ou l'arrêter avec les fonctions appropriées. Cela signifie que si vous avez plusieurs instances du même son en cours de lecture, vous pouvez cibler une seule instance de ce son.
    son en cours de lecture à un moment donné, vous pouvez cibler une seule instance de ce son à traiter à l'aide des fonctions audio.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">audio_play_sound(index, priorité, boucle) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>indice</td>
        <td>L'index du son à jouer.</td>
      </tr>
      <tr>
        <td>priorité</td>
        <td>Définissez la priorité du canal pour le son.</td>
      </tr>
      <tr>
        <td>boucle</td>
        <td>Règle le son en boucle ou non.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Index (ID sonore)</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">si santé &lt;= 0<br> {
    <br> vies -= 1 ;<br> audio_play_sound(snd_PlayerDead, 10, false) ;<br> }
  </p>
  <p>Le code ci-dessus vérifie la variable globale &quot;health&quot; et si elle est inférieure ou égale à 0, il retire 1 de la variable globale &quot;lives&quot; et joue un son.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Audio.htm">Audio</a></div>
        <div style="float:right">Suivant : <a href="audio_play_sound_at.htm">audio_play_sound_at</a></div>
        <div style="float:right"> </div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
audio_play_sound
-->
  <!-- TAGS
audio_play_sound
-->
</body>
</html>