<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>débogage_événement</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for debug_event" />
  <meta name="rh-index-keywords" content="debug_event" />
  <meta name="search-keywords" content="debug_event" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>débogage_événement</h1>
  <p>Cette fonction génère un événement de débogage personnalisé qui sera affiché dans la vue graphique du débogueur lorsqu'un jeu est exécuté en <a href="../../../Introduction/Debugging.htm">mode débogage</a>. Si vous souhaitez que les messages s'affichent en <i>dehors du</i> mode de débogage
    vous devriez utiliser <a href="show_debug_message.htm"><tt>show_debug_message()</tt></a>. Il convient de noter que la fonction prend également deux chaînes réservées pour faciliter le débogage à l'aide d'applications externes comme <span class="notranslate">Visual Studio</span>. Ces chaînes
    chaînes sont :</p>
  <ul class="colour">
    <li>&quot;<tt>OutputDebugOn&quot; -</tt> Ceci active un appel à OutputDebugString <tt>pour la</tt> cible. <b><span class="notranslate">Windows</span></b> ce qui signifie que toute la sortie de débogage - tout ce que vous voyez dans la fenêtre Output - peut être visualisée par <span class="notranslate">Visual Studio</span> ou par des applications tierces.</li>
    <li>&quot;BreakOnError<tt>&quot; -</tt> Cette option est réservée aux <b><span class="notranslate">versions</span></b> YYC <b><span class="notranslate">de</span></b> Windows et signifie que les projets n'<i>afficheront</i> pas l'écran d'erreur de code habituel si le runtime <span class="notranslate">détecte</span> une erreur, mais qu'ils continueront et se planteront. Cela vous permet
      de voir la trace de la pile dans <span class="notranslate">Visual Studio</span> en cas de débogage.</li>
  </ul>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">debug_event(string)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>chaîne de caractères</td>
        <td>La chaîne d'événement de débogage personnalisée à utiliser.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4><b>Exemple :</b></h4>
  <p class="code">if !surface_exists(global.EffectsSurface)<br> {
    <br> debug_event(&quot;Recreating Effects Surface&quot;) ;<br> global.EffectsSurface = surface_create(room_width, room_height) ;<br> }</p>
  <p>Le code ci-dessus vérifie si une surface existe et si ce n'est pas le cas, un événement de débogage est déclenché dans la vue graphique du débogueur (le jeu doit avoir été exécuté en mode débogage pour que cela soit visible) et la surface est recréée.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Debugging.htm">Débogage</a></div>
        <div style="float:right">Suivant : <a href="debug_get_callstack.htm">debug_get_callstack</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
debug_event
-->
  <!-- TAGS
debug_event
-->
</body>
</html>