<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gml_release_mode</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page de référence pour gml_release_mode" />
  <meta name="rh-index-keywords" content="gml_release_mode" />
  <meta name="search-keywords" content="gml_release_mode" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>gml_release_mode</h1><p> Lorsque votre jeu est compilé, il inclut également certaines fonctions internes pour vérifier les erreurs lors de l&#39;exécution. Ces vérifications internes couvrent de nombreux aspects du code d&#39;un jeu, y compris les plages, les paramètres et certains aspects généraux du <span class="notranslate">GML</span> interne et sont ce qui génère les messages d&#39;erreur finaux dans de nombreux cas. Cependant, cette fonction peut être utilisée pour désactiver ces vérifications internes (c&#39;est-à-dire: les supprimer complètement du jeu compilé), donnant un coup de pouce à votre projet final.</p><p> Veuillez noter que cela signifie que si vous faites quelque chose dans votre code de jeu qui est incorrect, le jeu compilé <i>peut simplement planter</i> ou il peut rencontrer un <i>comportement très inattendu</i>. Par exemple, si un <tt>DS Grid</tt> est accessible à une coordonnée en dehors de la taille définie, en mode développeur, vous obtiendrez un message d&#39;erreur de la fenêtre du compilateur mais les vérifications en place permettraient au jeu de continuer à fonctionner. Cependant, en mode version, ces vérifications ne seront pas là et le code pourrait donc renvoyer soit un pointeur NULL, soit un mauvais pointeur qui à son tour pointera vers une mémoire aléatoire. Ainsi, au mieux, vous pourriez obtenir les mauvaises données renvoyées, ou au pire, vous pourriez écraser quelque chose en mémoire - des données, des graphiques ou même du code lui-même. Un autre exemple serait lors de la construction de primitives - si vous fournissez les données de couleur, de position, de texture, etc. dans un ordre différent de celui que vous avez défini lorsque vous avez créé le format de sommet, le jeu peut planter ou produire des résultats inattendus lors de la sortie. le mode est activé.</p><p></p><h4> Syntaxe:</h4><p class="code">gml_release_mode(flag);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">flag</span></td><td> Soit <tt>true</tt> pour définir le mode de libération ou false pour le développement général.</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">N/A</p><p></p><h4> Exemple:</h4><p class="code">gml_release_mode(true);</p><p> L&#39;exemple de code ci-dessus définira le jeu pour utiliser le mode de sortie une fois compilé. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="OS_And_Compiler.htm">OS et compilateur</a></div><div style="float:right"> Suivant:<a href="gml_pragma.htm">gml_pragma</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
gml_release_mode
-->
  <!-- TAGS
gml_release_mode
-->
</body>
</html>