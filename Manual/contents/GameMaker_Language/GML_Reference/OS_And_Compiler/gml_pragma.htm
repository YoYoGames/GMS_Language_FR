<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gml_pragma</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for gml_pragma" />
  <meta name="rh-index-keywords" content="gml_pragma" />
  <meta name="search-keywords" content="gml_pragma" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gml_pragma</h1>
  <p>La fonction <tt>gml_pragma</tt> affecte la façon dont la cible donnée compile votre code et doit être appelée avec les différentes commandes pour optimiser davantage la compilation finale de votre projet. Ces commandes sont effectivement <i>pré-traitées</i> avant que le
    et donc la fonction peut être placée n'importe où dans votre projet et elle sera toujours traitée avant que le jeu ne soit entièrement compilé. Les commandes disponibles sont les suivantes :</p>
  <ul class="colour">
    <li>&quot; forceinline<b>&quot; -</b> Lorsque la fonction est appelée avec le pragma &quot; forceinline &quot; dans une fonction de script, le <b>YYC compilera</b> le projet avec la fonction en ligne, plutôt que référencée. Cela donne un avantage supplémentaire au traitement
      mais il convient d'être prudent lors de son utilisation car cela augmentera également la taille du fichier exécutable final, en particulier si le code en ligne est important et/ou utilisé à plusieurs endroits différents, et augmentera considérablement le temps de compilation. Notez que ce pragma
     <b>n'</b>est <b>valable que lors de la construction à l'aide de YYC</b>.</li>
    <li>&quot;<b>global&quot;, &quot;</b>[code gml]&quot; -<b> Le</b> pragme<b>&quot;global</b>&quot; vous permet d'appeler un code GML formaté sous forme de chaîne <span class="notranslate">,</span> à une portée globale, au moment de la compilation, avant l'exécution de la première pièce du jeu. Par exemple<br>
     <p class="code">gml_pragma(&quot;global&quot;, &quot;Init()&quot;) ;</p>
      Cela appellera la fonction de script &quot;Init&quot; avant l'exécution de la première pièce du jeu. Notez que le <span class="notranslate">GML</span> fourni comme second argument <b>doit être une constante de compilation</b>, et notez également que vous ne pouvez pas utiliser ce pragme pour créer des instances
      ou effectuer toute opération nécessitant le fonctionnement d'une room (ou de tout ce qui se trouve dans une room).</li>
    <li>&quot;PNGCrush<b>&quot; -</b> Le pragme &quot;PNGCrush&quot; utilisera le programme PNGCrush sur <a href="https://pmt.sourceforge.io/pngcrush/" target="_blank">chaque</a> texture créée. Notez que cela peut augmenter de manière significative le temps de
      pour compiler le jeu, donc vous ne voulez pas l'utiliser tout le temps, bien que cela puisse faire des économies significatives sur la taille finale du fichier.</li>
    <li>&quot;Texgroup<b>.Scale&quot;, &quot;</b>[TextureGroupName<b>]&quot;, &quot; [Scale Divisor</b>]&quot; - Le &quot;<b>Texgroup.Scale&quot;</b> mettra à l'échelle le groupe de texture donné lors de la compilation. Vous devez fournir deux arguments supplémentaires ici : le &quot;[TexGroupName]&quot;,
      qui est le nom (une chaîne de caractères) du groupe de texture à mettre à l'échelle, et le &quot;[Scale Divisor]&quot; (également une chaîne de caractères), qui est le diviseur que vous souhaitez utiliser pour la mise à l'échelle, c'est à dire<br>
     <p class="code">gml_pragma(&quot;Texgroup.Scale&quot;, &quot;level1&quot;, &quot;2&quot;) ;</p>
      Ainsi, toutes les textures du groupe de textures &quot;level1&quot; seront divisées par deux.</li>
    <li>&quot;UnityBuild<b>&quot;, &quot;</b>[enable/disable<b>]&quot; - Si vous appelez</b> la fonction avec ce pragme et que vous définissez l'argument enable/disable à true, lors de la compilation <tt>,</tt> tous les fichiers .cpp du projet seront regroupés dans un seul fichier.
      qu'il utilise ensuite pour tout construire, par exemple :<br>
     <p class="code">gml_pragma(&quot;UnityBuild&quot;, &quot;true&quot;) ;</p>
      L'avantage de faire un unity build est que les constructions sont plus rapides, mais l'inconvénient est qu'il fait une construction <i>complète</i> à chaque fois, donc même si vous changez une seule partie du code, il reconstruira tout sans utiliser les fichiers cachés. Ceci a été
      a été ajouté spécifiquement pour l'exportation Xbox One en utilisant le YYC bien qu'il puisse être appelé pour d'autres constructions<b>(YYC seulement</b>). Pour plus d'informations sur les builds de l'unité, veuillez voir <a href="http://buffered.io/posts/the-magic-of-unity-builds/" target="_blank">ici</a>.</li>
  </ul>
  <p class="note"><b>NOTE</b>: Le premier argument de la fonction <tt>gml_pragma</tt> <b>doit être une constante de chaîne de caractères au moment de la compilation</b> et non une variable.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">gml_pragma(commande, [optionnel...]) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>commande</td>
        <td>Une chaîne de caractères avec l'une des commandes énumérées ci-dessous.</td>
      </tr>
      <tr>
        <td>[facultatif]</td>
        <td>Certaines des commandes disponibles nécessitent un ou plusieurs arguments facultatifs. Ceux-ci sont expliqués ci-dessous pour chaque commande.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">gml_pragma(&quot;forceinline&quot;) ;</p>
  <p>L'exemple de code ci-dessus forcera la fonction de script où elle est utilisée à être en ligne à la compilation.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="OS_And_Compiler.htm">Système d'exploitation et compilateur</a></div>
        <div style="float:right">Suivant : <a href="parameter_count.htm">parameter_count</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
gml_pragma
-->
  <!-- TAGS
gml_pragma
-->
</body>
</html>