<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>rectangle_in_triangle</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page qui donne un aperçu de la fonction rectangle_in_triangle" />
  <meta name="rh-index-keywords" content="rectangle_in_triangle" />
  <meta name="search-keywords" content="rectangle_in_triangle" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>rectangle_in_triangle</h1><p> Cette fonction vérifie une zone rectangulaire que vous définissez pour voir si elle n&#39;est pas en collision, complètement dans les limites de destination, ou si elle touche simplement une zone triangulaire définie. S&#39;ils ne touchent pas du tout, la fonction retournera 0, si la source est complètement dans la destination, elle retournera 1, et si elles se chevauchent simplement, elle retournera 2. L&#39;image ci-dessous illustre ceci:</p><p><img alt="Rectangle triangle collision example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/rectangle_in_triangle.png" /></p><h4> Syntaxe:</h4><p class="code">rectangle_in_triangle(sx1, sy1, sx2, sy2, dx1, dy1, dx2, dy2, dx3, dy3);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">sx1</span></td><td> Coordonnée x du côté gauche du rectangle source.</td></tr><tr><td> <span class="notranslate">sy1</span></td><td> Coordonnée y du côté supérieur du rectangle source.</td></tr><tr><td> <span class="notranslate">sx2</span></td><td> Coordonnée x du côté droit du rectangle source.</td></tr><tr><td> <span class="notranslate">sy2</span></td><td> Coordonnée y du côté inférieur du rectangle source.</td></tr><tr><td> <span class="notranslate">x1</span></td><td> La coordonnée x du premier côté du triangle à vérifier.</td></tr><tr><td> <span class="notranslate">y1</span></td><td> Coordonnée y du premier côté du triangle à vérifier.</td></tr><tr><td> <span class="notranslate">x2</span></td><td> La coordonnée x du deuxième côté du triangle à vérifier.</td></tr><tr><td> <span class="notranslate">y2</span></td><td> Coordonnée y du deuxième côté du triangle à vérifier.</td></tr><tr><td> <span class="notranslate">x3</span></td><td> La coordonnée x du troisième côté du triangle à vérifier.</td></tr><tr><td> <span class="notranslate">y3</span></td><td> Coordonnée y du troisième côté du triangle à vérifier.</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">Real</p><p></p><h4> Exemple:</h4><p class="code">var inst = instance_nearest(x, y, obj_Player);<br/> if instance_exists(inst)<br/>    {
    <br/>    var x1 = x + lengthdir_x(100, image_angle - 45);<br/>    var y1 = y + lengthdir_y(100, image_angle - 45);<br/>    var x2 = x + lengthdir_x(100, image_angle + 45);<br/>    var y2 = y + lengthdir_y(100, image_angle + 45);<br/>    if rectangle_in_triangle(inst.bbox_left,
    inst.bbox_top, inst.bbox_right, inst.bbox_bottom, x, y, x1, y1, x2, y2) == 1<br/>       {
    <br/>       can_see = true;<br/>       }
    <br/>    }
  </p><p> Le code ci-dessus utilise le <tt>rectangle_in_triangle</tt> fonctionne comme un &quot;cône de vision&quot; pour vérifier une instance de &quot;obj_player&quot;. Si le cadre englobant complet se trouve dans la zone triangulaire donnée, il définira une variable sur <tt>true</tt>. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Collisions.htm">Collisions</a></div><div style="float:right"> Suivant:<a href="rectangle_in_circle.htm">rectangle_in_circle</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
rectangle_in_triangle
-->
  <!-- TAGS
rectangle_in_triangle
-->
</body>
</html>