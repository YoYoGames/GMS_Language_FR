<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>position_réunion</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that gives an overview of the funtion position_meeting" />
  <meta name="rh-index-keywords" content="position_meeting" />
  <meta name="search-keywords" content="position_meeting" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>position_réunion</h1>
  <p>Avec cette fonction, vous pouvez vérifier une position pour une collision avec une autre instance ou toutes les instances d'un objet. Lorsque vous utilisez cette fonction, vous vérifiez un point unique dans la room pour une instance ou un objet. Cette vérification sera effectuée par rapport au bounding
    de l'instance ou du masque de l'instance si cette instance a des collisions précises vérifiées. Si vous avez besoin d'obtenir l'instance unique <a href="../../Asset_Management/Instances/Instance_Variables/id.htm"><b>id</b></a> de l'objet avec lequel
    vous devez utiliser <a href="../../Asset_Management/Instances/instance_position.htm"><tt>instance_position()</tt></a>. Cette fonction accepte également les <a href="../../../GML_Overview/Instance_Keywords.htm">mots-clés</a> spéciaux <b>all</b> et
   <b>autre</b>.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">position_meeting(x, y, obj) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>x</td>
        <td>La position x à vérifier.</td>
      </tr>
      <tr>
        <td>y</td>
        <td>La position y à vérifier.</td>
      </tr>
      <tr>
        <td>obj.</td>
        <td>L'objet (ou l'identifiant de l'instance, ou les mots-clés &quot;all&quot; ou &quot;other&quot;) avec lequel il faut vérifier la présence d'une collision.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Booléen</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">if mouse_check_button(mb_left)<br> {
    <br> if !position_meeting(mouse_x, mouse_y, all) instance_create_layer(mouse_x, mouse_y, &quot;Walls&quot;, obj_Wall) ;<br> }
  </p>
  <p>Le code ci-dessus vérifie la présence du bouton gauche de la souris, et s'il est enfoncé, il vérifie la position x/y de la souris pour détecter une collision avec une instance. S'il n'y en a pas, une instance de &quot;obj_Wall&quot; est créée.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Collisions.htm">Collisions</a></div>
        <div style="float:right">Suivant : <a href="position_change.htm">position_change</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
position_meeting
-->
  <!-- TAGS
position_meeting
-->
</body>
</html>