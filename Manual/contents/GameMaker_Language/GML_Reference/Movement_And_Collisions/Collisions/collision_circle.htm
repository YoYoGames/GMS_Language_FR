<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>collision_circle</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page qui donne un aperçu de la fonction collision_circle" />
  <meta name="rh-index-keywords" content="collision_circle" />
  <meta name="search-keywords" content="collision_circle" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>collision_circle</h1><p><span class="inline">Collision_circle</span> crée une zone circulaire du rayon donné par l&#39;utilisateur autour des points x1, y1 puis vérifie dans cette zone une collision avec <b>toute</b> instance de l&#39;objet spécifié par l&#39;argument &quot;obj&quot;. Cette vérification peut être précise ou non, mais pour que les collisions précises soient activées, l&#39;objet ou l&#39;instance que vous recherchez <i>doit</i> également avoir des collisions précises activées pour leur sprite. Sinon, la vérification par défaut est basée sur les boîtes englobantes. L&#39;image suivante illustre comment cela fonctionne:</p><p><img alt="Collision circle example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/collision_circle_illustration.png" /> Ici, l&#39;instance du milieu utilise un cercle de collision pour rechercher des objets balle. Maintenant, les bleus n&#39;ont <i>pas de cadre de</i> délimitation précis et comme vous pouvez le voir, même si le sprite ne touche pas réellement le cercle, la collision peut toujours se produire (même si vous définissez l&#39;option précise dans la fonction sur true) comme le la boîte englobante de ce sprite chevauche la zone circulaire définie par collision_circle. D&#39;un autre côté, les boules vertes ne seront considérées en collision que si le sprite réel chevauche le cercle défini. Rappelez - vous, pour des collisions précises à considérer à la <i>fois</i> l&#39;image - objet de l&#39; objet et la fonction de collision doit avoir marqué comme précis sur. Il convient également de noter que la valeur de retour de la fonction peut être l&#39;identifiant de <i>l&#39;une quelconque</i> des instances considérées comme étant en collision.</p><p> Notez qu&#39;au lieu d&#39;un index d&#39;objet, vous pouvez fournir une instance <a href="../../Asset_Management/Instances/Instance_Variables/id.htm"><tt>id</tt></a> pour rechercher une instance spécifique ou les <a href="../../../GML_Overview/Instance_Keywords.htm">mots-clés de l&#39;instance</a> <span class="inline">all</span>, ou <span class="inline">other</span> (en fonction de l&#39;événement et de la portée du code actuel).</p><p></p><h4> Syntaxe:</h4><p class="code">collision_circle(x1, y1, rad, obj, prec, notme);</p><p></p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">x1</span></td><td> La coordonnée x du centre du cercle à vérifier.</td></tr><tr><td> <span class="notranslate">y1</span></td><td> La coordonnée y du centre du cercle à vérifier.</td></tr><tr><td> <span class="notranslate">rad</span></td><td> Le rayon (distance en pixels de son centre à son bord).</td></tr><tr><td> <span class="notranslate">obj</span></td><td> L&#39;objet à vérifier par exemple les collisions.</td></tr><tr><td> <span class="notranslate">prec</span></td><td> Si la vérification est basée sur des collisions de pixels parfaits (vrai = lent) ou sur sa boîte englobante en général (faux = rapide).</td></tr><tr><td> <span class="notranslate">notme</span></td><td> Si l&#39;instance appelante, le cas échéant, doit être exclue (<tt>true</tt> ) ou non (<tt>false</tt> ).</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">Instance id or noone</p><p></p><h4> Exemple:</h4><p class="code">if collision_circle(x, y, 20, obj_Cursor, false, true)<br/>    {
    <br/>    image_index = 1;<br/>    }
    <br/> else image_index = 0;</p><p> Le code ci-dessus vérifiera qu&#39;une circulaire a un rayon de 20 pixels pour une collision avec &quot;obj_Cursor&quot; et s&#39;il y en a un, il définira l&#39;image_index de l&#39;objet exécutant le code sur 1, mais s&#39;il n&#39;y en a pas, il définira l&#39;image_index du objet à 0. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Collisions.htm">Collisions</a></div><div style="float:right"> Suivant:<a href="collision_circle_list.htm">collision_circle_list</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
collision_circle
-->
  <!-- TAGS
collision_circle
-->
</body>
</html>