<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>cercle de collision</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that gives an overview of the funtion collision_circle" />
  <meta name="rh-index-keywords" content="collision_circle" />
  <meta name="search-keywords" content="collision_circle" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>cercle de collision</h1>
  <p><span class="inline">Collision_circle</span> crée une zone circulaire de rayon donné par l'utilisateur autour des points x1,y1 et vérifie ensuite que cette zone n'entre pas en collision avec <b>une</b> instance de l'objet spécifié par l'argument &quot;obj&quot;.
    Cette vérification peut être précise ou non, mais pour que les collisions précises soient activées, l'objet ou l'instance que vous vérifiez <i>doit</i> également avoir des collisions précises activées pour son sprite. Sinon, la vérification par défaut est basée sur les boîtes englobantes.
    L'image suivante illustre ce fonctionnement :</p>
  <p><img alt="Collision circle example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/collision_circle_illustration.png">Ici, l'instance du milieu utilise un cercle de collision pour vérifier la présence d'objets de type balle.
    objets. Les objets bleus <i>n'ont pas</i> de boîte de délimitation précise et, comme vous pouvez le voir, même si le sprite ne touche pas réellement le cercle, la collision peut se produire (même si vous avez défini l'option precise de la fonction sur true) car la boîte de délimitation de ce sprite dépasse la zone circulaire définie par collision_circle.
    de ce sprite dépasse la zone circulaire définie par collision_circle. D'un autre côté, les balles vertes ne seront considérées comme des collisions que si le sprite en question dépasse le cercle défini. N'oubliez pas que pour que des collisions précises soient prises en compte
    le sprite de l'objet et la fonction de collision doivent <i>tous deux</i> avoir la précision activée. Il convient également de noter que la valeur de retour de la fonction peut être l'identifiant de <i>n'importe laquelle</i> des instances considérées comme étant en collision.</p>
  <p>Notez qu'au lieu d'un index d'objet, vous pouvez fournir une instance <a href="../../Asset_Management/Instances/Instance_Variables/id.htm"><tt>id</tt></a> pour rechercher une instance spécifique, ou les <a href="../../../GML_Overview/Instance_Keywords.htm">mots-clés d'instance</a> <span class="inline">all</span>, ou <span class="inline">other</span> (selon l'événement et l'étendue du code actuel).</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">collision_circle(x1, y1, rad, obj, prec, notme) ;</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>x1</td>
        <td>La coordonnée x du centre du cercle à vérifier.</td>
      </tr>
      <tr>
        <td>y1</td>
        <td>La coordonnée y du centre du cercle à vérifier.</td>
      </tr>
      <tr>
        <td>rad</td>
        <td>Le rayon (distance en pixels de son centre à son bord).</td>
      </tr>
      <tr>
        <td>obj.</td>
        <td>L'objet à vérifier pour les collisions d'instance.</td>
      </tr>
      <tr>
        <td>préc</td>
        <td>Si le contrôle est basé sur des collisions parfaites au niveau du pixel (true = slow) ou sur sa boîte de délimitation en général (false = fast).</td>
      </tr>
      <tr>
        <td>notme</td>
        <td>Si l'instance appelante, si elle est pertinente, doit être exclue<tt>(true</tt>) ou non<tt>(false)</tt>.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Identité de l'instance ou personne</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">if collision_circle(x, y, 20, obj_Cursor, false, true)<br> {
    <br> image_index = 1 ;<br> }
    <br> else image_index = 0 ;</p>
  <p>Le code ci-dessus vérifiera une zone circulaire avec un rayon de 20 pixels pour une collision avec &quot;obj_Cursor&quot; et s'il y en a une, il mettra l'image_index de l'objet qui exécute le code à 1, mais s'il n'y en a pas, il mettra l'image_index de l'objet à 0.
    à 0.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Collisions.htm">Collisions</a></div>
        <div style="float:right">Suivant : <a href="collision_circle_list.htm">collision_circle_list</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
collision_circle
-->
  <!-- TAGS
collision_circle
-->
</body>
</html>