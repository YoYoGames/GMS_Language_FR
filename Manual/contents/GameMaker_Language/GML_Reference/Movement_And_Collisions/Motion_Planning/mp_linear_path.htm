<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>mp_linear_path</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Cette page décrit la fonction mp_linear_path" />
  <meta name="rh-index-keywords" content="mp_linear_path" />
  <meta name="search-keywords" content="mp_linear_path" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>mp_linear_path</h1><p> Cette fonction calcule un chemin en ligne droite depuis la position actuelle de l&#39;instance jusqu&#39;au point spécifié par les valeurs «xgoal» et «ygoal». Il utilise la taille de pas indiquée, la même que dans la fonction <a href="mp_linear_step.htm"><tt>mp_linear_step()</tt></a>. Le chemin indiqué doit déjà exister et sera écrasé par le nouveau chemin et la fonction retournera si un chemin complet a été trouvé (vrai) ou non (faux). Si false est renvoyé, un chemin est toujours généré, mais il ne fonctionnera que jusqu&#39;à la position où le chemin a été bloqué.</p><p class="note"> <b>REMARQUE</b>: cette fonction ne déplace pas l&#39;instance. Il définit un chemin uniquement et vous devez utiliser les <a href="../../Asset_Management/Paths/Paths.htm">fonctions Chemin</a> pour le mouvement.</p><p></p><h4> Syntaxe:</h4><p class="code">mp_linear_path(path, xgoal, ygoal, stepsize, checkall);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">path</span></td><td> L&#39;index du chemin à utiliser.</td></tr><tr><td> <span class="notranslate">xgoal</span></td><td> La position x cible.</td></tr><tr><td> <span class="notranslate">ygoal</span></td><td> La position y cible.</td></tr><tr><td> <span class="notranslate">stepsize</span></td><td> Vitesse de déplacement de l&#39;instance en pixels par étape.</td></tr><tr><td> <span class="notranslate">checkall</span></td><td> Indique s&#39;il faut vérifier les collisions avec toutes les instances (true) ou uniquement les solides (false).</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">Boolean</p><p></p><h4> Exemple:</h4><p class="code">if mp_linear_path(path, obj_Player.x, obj_Player.y, 2, 0)<br/>     {<br/>     path_start(path, 2, 0, 0);<br/>     }</p><p> Cela permet à l&#39;objet de vérifier et de voir s&#39;il existe un chemin linéaire entre sa position actuelle et la position de &quot;obj_Player&quot;. S&#39;il y en a, il commence le chemin. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Motion_Planning.htm">Planification de mouvement</a></div><div style="float:right"> Suivant:<a href="mp_linear_path_object.htm">mp_linear_path_object</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
mp_linear_path
-->
  <!-- TAGS
mp_linear_path
-->
</body>
</html>