<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>mp_potential_step</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Cette page décrit la fonction mp_potential_step" />
  <meta name="rh-index-keywords" content="mp_potential_step" />
  <meta name="search-keywords" content="mp_potential_step" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>mp_potential_step</h1><p> Cette fonction permet à l&#39;instance de faire un pas vers une position particulière définie par xgoal / ygoal, tout en essayant d&#39;éviter les obstacles. Lorsque l&#39;instance se heurte à une instance solide (ou à toute instance lorsque checkall est vrai), elle change la direction du mouvement pour essayer d&#39;éviter cette instance et de se déplacer autour d&#39;elle. Il n&#39;est pas garanti que cette approche fonctionne, mais dans la plupart des cas simples, elle déplacera efficacement l&#39;instance vers l&#39;objectif. La fonction renvoie si l&#39;objectif a été atteint ou non.</p><p></p><h4> Syntaxe:</h4><p class="code">mp_potential_step(xgoal, ygoal, stepsize, checkall)</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">xgoal</span></td><td> La position x cible.</td></tr><tr><td> <span class="notranslate">ygoal</span></td><td> La position y cible.</td></tr><tr><td> <span class="notranslate">stepsize</span></td><td> Vitesse de déplacement de l&#39;instance en pixels par étape.</td></tr><tr><td> <span class="notranslate">checkall</span></td><td> Indique s&#39;il faut vérifier toutes les instances (true) ou uniquement les solides (false).</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">Boolean</p><p></p><h4> Exemple:</h4><p class="code">if instance_exists(obj_Enemy)<br/>     {
    <br/>     var inst;<br/>     inst = instance_nearest(x, y, obj_Enemy);<br/>     mp_potential_step(inst.x, inst.y, 5, false);<br/>     }
  </p><p> Le code ci-dessus vérifie d&#39;abord s&#39;il y a des instances de &quot;obj_Enemy&quot; dans la salle. S&#39;il y en a, il trouve le plus proche et stocke son identifiant dans une variable. Cette variable est ensuite utilisée pour dire <tt>mp_potential_step</tt> pour déplacer l&#39;instance avec le code vers la position x / y de l&#39;objet trouvé à une vitesse de 5 pixels par étape en évitant uniquement les instances marquées comme solides. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Motion_Planning.htm">Planification de mouvement</a></div><div style="float:right"> Suivant:<a href="mp_potential_step_object.htm">mp_potential_step_object</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
mp_potential_step
-->
  <!-- TAGS
mp_potential_step
-->
</body>
</html>