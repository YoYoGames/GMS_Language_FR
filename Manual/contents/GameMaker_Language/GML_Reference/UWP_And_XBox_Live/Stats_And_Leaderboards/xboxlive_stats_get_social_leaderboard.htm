<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>xboxlive_stats_get_social_leaderboard</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for xboxlive_stats_get_social_leaderboard" />
  <meta name="rh-index-keywords" content="xboxlive_stats_get_social_leaderboard, achievement_stat_event" />
  <meta name="search-keywords" content="xboxlive_stats_get_social_leaderboard,achievement_stat_event" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>xboxlive_stats_get_social_leaderboard</h1>
  <p>Cette fonction peut être utilisée pour récupérer un classement social des rangs pour une statistique donnée. Vous fournissez l'ID de l'utilisateur (tel que renvoyé, par exemple, par la fonction <a href="../Users_And_Accounts/xboxlive_get_user.htm"><tt>xboxlive_get_user()</tt></a>), la
    (telle qu'elle a été définie lorsque vous l'avez créée à l'aide des fonctions xboxlive_stats_set_stat_*), puis vous spécifiez un certain nombre de détails sur les informations du classement que vous souhaitez récupérer. Notez que vous ne pouvez récupérer un classement social que pour des statistiques de type
    int ou real, mais pas pour les statistiques de type string, et que si vous attribuez la valeur true à l'argument &quot;favourites_only&quot;, les résultats ne contiendront que les données relatives aux amis que l'utilisateur a marqués comme &quot;favoris&quot;.</p>
  <p class="note"><b>IMPORTANT !</b> Les statistiques utilisées dans les classements sociaux <b>n'ont pas</b> besoin d'être enregistrées comme &quot;Featured Stats&quot; dans le XDP/Windows<span class="notranslate">Dev</span> Center .</p>
  <p>La fonction générera un callback qui déclenchera un <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/System.htm">événement asynchrone du système</a>. Cet événement aura la carte spéciale DS <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a>    qui devra ensuite être analysée pour les clés suivantes :</p>
  <ul class="colour">
    <li>&quot; id&quot; - Contiendra la constante <tt>achievement_stat_event</tt></li>
    <li>&quot;événement<b>&quot; -</b> Contient la chaîne de caractères &quot;GetLeaderboardComplete<i>&quot;</i>.</li>
    <li>&quot; userid<b>&quot; -</b> L'ID utilisateur associé à la demande</li>
    <li>&quot;error<b>&quot; - 0</b> en cas de succès, une autre valeur s'il y a eu une erreur. Les erreurs les plus courantes sont les suivantes :
      <ul>
        <li>-2145844848 : Mauvaise requête (la statistique n'est pas un type de classement valide, c'est-à-dire une chaîne).</li>
      </ul>
    </li>
    <li>&quot;errormessage<b>&quot; - Une</b> chaîne contenant un message d'erreur, s'il y en a un.</li>
    <li>&quot;<b>display_name &quot; -</b> L'identifiant unique du leaderboard tel que défini sur le tableau de bord du fournisseur.</li>
    <li>&quot; numentries<b>&quot; -</b> Le nombre d'entrées dans le classement que vous avez reçues.</li>
  </ul>
  <p>Le reste de la carte DS contiendra également les données du classement au format suivant (où &quot;N&quot; est la position dans les données du classement, de 0 à &quot;numentries&quot;) :</p>
  <ul class="colour">
    <li>&quot;<b>PlayerN&quot; -</b> Le nom du joueur, où &quot;N&quot; est une valeur entière correspondant à sa position dans la liste des entrées du classement.</li>
    <li>&quot;<b>PlayeridN&quot; -</b> L'identifiant unique du joueur, &quot;N&quot;.</li>
    <li>&quot;RankN<b>&quot; -</b> Le rang du joueur &quot;N&quot; dans le classement.</li>
    <li>&quot;ScoreN<b>&quot; -</b> Le score du joueur &quot;N&quot;.</li>
  </ul>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">xboxlive_stats_get_social_leaderboard(user_id, stat, num_entries, start_rank, start_at_user, favourites_only) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>nom d'utilisateur</td>
        <td>L'ID de l'utilisateur pour lequel le classement doit être obtenu.</td>
      </tr>
      <tr>
        <td>stat</td>
        <td>La statistique (sous forme de chaîne) à partir de laquelle le classement mondial sera créé.</td>
      </tr>
      <tr>
        <td>nombre d'entrées</td>
        <td>Le nombre d'entrées du classement mondial à récupérer.</td>
      </tr>
      <tr>
        <td>start_rank</td>
        <td>Le rang dans le classement à partir duquel il faut commencer (utilisez 0 si l'argument &quot;start_at_user&quot; est défini comme vrai).</td>
      </tr>
      <tr>
        <td>start_at_user</td>
        <td>Défini à <tt>true</tt> pour commencer au rang de l'ID utilisateur, <tt>false</tt> sinon (défini à <tt>false</tt> si l'argument &quot;start_rank&quot; est différent de 0).</td>
      </tr>
      <tr>
        <td>favoris_seulement</td>
        <td>Défini à <tt>true</tt> pour montrer seulement les amis qui sont marqués comme &quot;favoris&quot; ou false <tt>autrement</tt> </td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Exemple étendu :</h4>
  <p>Voici un exemple détaillé de la façon dont cette fonction peut être utilisée. Pour commencer, vous l'appelez dans un événement comme Room <b>Start ou</b> <b>Create :</b></p>
  <p class="code">xboxlive_stats_get_social_leaderboard(user_id, &quot;GlobalTime&quot;, 20, 1, false, false) ;</p>
  <p>Le code ci-dessus sera appelé pour obtenir une liste de toutes les positions du classement mondial pour le jeu, et générera un appel à l'événement social asynchrone que nous traiterons de la manière suivante :</p>
  <p class="code">if (async_load[ ? &quot;id&quot;] == achievement_stat_event)<br> {
    <br> if (async_load[ ? &quot;event&quot;] == &quot;GetLeaderboardComplete&quot;)<br> {
    <br> global.numentries = async_load[ ? &quot;numentries&quot;] ;<br> for(var i = 0 ; i &lt; numentries ; i++ ;)<br> {
    <br> global.playername[i] = async_load[ ? &quot;Player&quot; + string(i)] ;<br> global.playerid[i] = async_load[ ? &quot;Playerid&quot; + string(i)] ;<br> global.playerrank[i] = async_load[ ? &quot;Rank&quot; + string(i)] ;<br> global.playerscore[i] = async_load[ ? &quot;Score&quot; + string(i]) ;<br> }
    <br> }
    <br> }
  </p>
  <p>Le code ci-dessus vérifie la carte DS retournée dans l'événement social asynchrone et si son &quot;id&quot; correspond à la constante vérifiée, il vérifie ensuite si l'événement a été déclenché par des données de classement retournées avant de parcourir la carte en boucle
    et de stocker toutes les différentes valeurs dans un certain nombre de tableaux globaux.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Stats_And_Leaderboards.htm">Stats et classements</a></div>
        <div style="float:right">Suivant : <a href="xboxlive_achievements_set_progress.htm">xboxlive_achievements_set_progress</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
xboxlive_stats_get_social_leaderboard
achievement_stat_event
-->
  <!-- TAGS
xboxlive_stats_get_social_leaderboard
-->
</body>
</html>