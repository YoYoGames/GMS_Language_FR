<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>steam_download_scores</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page de référence pour steam _download_scores" />
  <meta name="rh-index-keywords" content="steam_download_scores" />
  <meta name="search-keywords" content="steam_download_scores" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> <span class="notranslate">steam</span> _download_scores</h1><p> Cette fonction permet de récupérer une plage séquentielle d&#39;entrées de classement par classement. Le <tt>start_idx</tt> et <tt>end_idx</tt> Les paramètres contrôlent la plage de rangs demandée, par exemple, vous pouvez afficher le top 10 d&#39;un classement pour votre jeu en définissant la valeur de début sur 1 et la valeur de fin sur 10. Le nom du classement est une chaîne qui a été définie lorsque vous avez créé le classement en utilisant la fonction <a href="steam_create_leaderboard.htm"><tt>steam_create_leaderboard()</tt></a>, et la fonction renverra une valeur qui peut ensuite être utilisée pour identifier le rappel dans l&#39; <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Steam.htm">événement <span class="notranslate">Steam</span></a> Async, ou elle renverra -1 en cas d&#39;échec. Notez que lors du téléchargement d&#39;un classement, la touche &quot;entrées&quot; du <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a> la carte peut avoir une clé &quot;data&quot; supplémentaire si des données de tampon supplémentaires ont été téléchargées avec le score (voir <a href="steam_upload_score_buffer.htm"><tt>steam_upload_score_buffer()</tt></a> ). Ce tampon de données sera <b>encodé en Base 64</b> et vous devrez donc utiliser la fonction <a href="../../Buffers/buffer_base64_decode.htm"><tt>buffer_base64_decode()</tt></a> sur le tampon avant de lire les données.</p><p></p><h4> Syntaxe:</h4><p class="code">steam_download_scores(lb_name, start_idx, end_idx);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">lb_name</span></td><td> Le nom du classement à partir duquel vous téléchargez les scores (une chaîne).</td></tr><tr><td> <span class="notranslate">start_idx</span></td><td> La position de départ dans le classement.</td></tr><tr><td> <span class="notranslate">end_idx</span></td><td> La position finale dans le classement.</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">Real</p><p></p><h4> Exemple étendu:</h4><p> Dans cet exemple étendu, nous demanderons le classement des dix premiers pour le classement donné et analyserons ses résultats dans l&#39; <b>événement <span class="notranslate">Steam</span></b> Async. pour commencer, nous devons demander les scores avec le code suivant:</p><p class="code">score_get = steam_download_scores(&quot;Game Scores&quot;, 1, 10);</p><p> Cela enverra une demande au <span class="notranslate">Steam</span> pour les scores du classement &quot;Game Scores&quot;, en stockant l&#39; <b>identifiant asynchrone</b> de la demande dans la variable &quot;score_get&quot;. cela sera ensuite géré dans l&#39; <b>événement <span class="notranslate">Steam</span></b> Async de la manière suivante:</p><p class="code">var async_id = ds_map_find_value(async_load, &quot;id&quot;);<br/> if async_id == score_get<br/>     {
    <br/>     var entries = ds_map_find_value(async_load, &quot;entries&quot;);<br/>     var map = json_decode(entries);<br/>     if ds_map_exists(map, &quot;default&quot;)<br/>         {
    <br/>         ds_map_destroy(map);
    <br/>         exit;
    <br/>         }
    <br/>     else
    <br/>         {
    <br/>         var list = ds_map_find_value(map, &quot;entries&quot;);<br/>         var len = ds_list_size(list);<br/>         var entry;<br/>         for(var i = 0; i &lt; len; i++;)<br/>             {
    <br/>             entry = ds_list_find_value(list, i );<br/>             steam_name[i] = ds_map_find_value(entry, &quot;name&quot;);<br/>             steam_score[i] = ds_map_find_value(entry, &quot;score&quot;);<br/>             steam_rank[i] = ds_map_find_value(entry,
    &quot;rank&quot;);<br/>             }
    <br/>         }
    <br/>     ds_map_destroy(map)
    <br/>     }
  </p><p> Ce que nous faisons ici, c’est d’abord vérifier la clé «id» du spécial <tt>async_load</tt> Carte DS. Si cette valeur est la même que la valeur de la fonction de rappel d&#39;origine (stockée dans la variable &quot;score_get&quot;), nous continuons alors à traiter les données. La première chose que nous faisons est d&#39;analyser le <tt>async_load</tt> ds_map pour la clé «entrées» qui contiendra un objet JSON contenant les données du classement. Cet objet JSON est ensuite décodé (voir <a href="../../File_Handling/Encoding_And_Hashing/json_decode.htm"><tt>json_decode()</tt></a> ) comme une autre carte DS, et ce nouvel identifiant de carte est stocké dans la variable &quot;map&quot;.</p><p> Cette carte est vérifiée pour la clé &quot;par défaut&quot; et si cela est trouvé, la carte est détruite et l&#39;événement est quitté. Si aucune clé &quot;par défaut&quot; n&#39;est trouvée, le code analysera alors la carte pour extraire les informations nécessaires sur le classement, en extrayant d&#39;abord une liste DS à partir de la clé &quot;entrées&quot; de la carte DS, puis en parcourant chaque entrée du list pour obtenir <i>une autre</i> carte DS avec le nom, le score et le rang de chaque entrée. Ces valeurs sont ensuite stockées dans des tableaux.</p><p> Une fois la boucle terminée, la carte JSON DS est détruite (ce qui à son tour détruit toutes les cartes et listes internes). Il n&#39;est pas nécessaire de détruire le <tt>async_load</tt> Carte DS car elle est gérée pour vous par <span class="notranslate">GameMaker Studio 2</span>. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Steam_Leaderboards.htm">Classements</a></div><div style="float:right"> Suivant: <a href="steam_download_scores_around_user.htm"><span class="notranslate">steam</span> _download_scores_around_user</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
steam_download_scores
-->
  <!-- TAGS
steam_download_scores
-->
</body>
</html>