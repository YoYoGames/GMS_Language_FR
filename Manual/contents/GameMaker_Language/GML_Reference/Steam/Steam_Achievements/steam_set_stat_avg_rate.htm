<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>steam_set_stat_avg_rate</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page de référence pour steam _set_stat_avg_rate" />
  <meta name="rh-index-keywords" content="steam_set_stat_avg_rate" />
  <meta name="search-keywords" content="steam_set_stat_avg_rate" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> <span class="notranslate">steam</span> _set_stat_avg_rate</h1><p> Cette fonction vous permet de définir un type de statistique moyenne avec un effet de &quot;fenêtre glissante&quot; sur la moyenne. La valeur &quot;session_count&quot; est la valeur actuelle que vous souhaitez faire la moyenne, tandis que &quot;session_length&quot; est le temps de jeu depuis le dernier appel à la fonction. Veuillez consulter l&#39; <b>exemple étendu</b> ci-dessous pour plus de détails sur la façon dont cela peut être utilisé.</p><p></p><h4> Syntaxe:</h4><p class="code">steam_set_stat_avg_rate(stat_name, session_count, session_length);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">stat_name</span></td><td> Le nom de la statistique à définir (une chaîne).</td></tr><tr><td> <span class="notranslate">session_count</span></td><td> La valeur pour obtenir la moyenne de (un nombre réel)</td></tr><tr><td> <span class="notranslate">session_length</span></td><td> Le temps écoulé depuis la dernière fois que la statistique a été définie (un nombre réel).</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">N/A</p><p></p><h4> Exemple étendu:</h4><p> Étant donné que la fonction statistique moyenne peut être complexe à comprendre, nous illustrerons son utilisation avec l&#39;exemple suivant. Prenons le cas où vous souhaitez suivre une statistique moyenne, telle que &quot;Points gagnés par heure&quot;. Une approche serait d&#39;avoir deux statistiques: une <i>statistique entière</i>, &quot;TotalPoints&quot;, et une <i>statistique flottante</i> &quot;TotalPlayTimeHours&quot;, puis diviser le total des points par le temps total pour obtenir la valeur &quot;Points par heure&quot;.</p><p> Cependant, une fois que le joueur a accumulé une quantité significative de temps de jeu, la moyenne calculée changera extrêmement lentement, et plus l&#39;utilisateur joue au jeu, moins cette moyenne sera réactive. Si l&#39;utilisateur a passé 100 heures à jouer au jeu, la moyenne calculée «retardera» d&#39;environ 50 heures de cela, et s&#39;il augmente ses compétences, il ne verra pas l&#39;augmentation des «points par heure» à laquelle il s&#39;attend. Pour contourner cela, nous pouvons utiliser une &quot;fenêtre glissante&quot; pour calculer uniquement les &quot;Points par heure&quot; pour les 10 dernières heures jouées.</p><p> Donc, pour utiliser cette fonction, nous aurions besoin de créer une <span class="notranslate">Steam</span> (dans le panneau de configuration du jeu sur l&#39;Atelier) appelée &quot;AvgPointsPerHour&quot; et de définir sa <b>propriété Window</b> sur 10. Maintenant, dans votre jeu, vous devez ajouter des paramètres globaux. variables dans une instance au début:</p><p class="code">global.Points = 0;<br/> global.Time = 0;</p><p> Vous auriez alors un objet contrôleur pour compter la variable globale &quot;Time&quot; dans une alarme (par exemple) chaque seconde, tandis que votre jeu affecterait la variable globale &quot;Points&quot;. À intervalles réguliers pendant la lecture (encore une fois, dans un objet contrôleur, peut-être dans une alarme, ou à intervalles de l&#39;interrogation de la valeur &quot;Time&quot;), vous définiriez la statistique comme ceci:</p><p class="code">steam_set_stat_avg_rate(&quot;AvgPointsPerHour&quot;, global.Points, (global.Time / 3600));<br/> global.Points = 0;<br/> global.Time = 0;</p><p> Notez que nous divisons le temps par 3600 car nous voulons le temps en <i>heures</i> et non en secondes, puis nous remettons à 0 la variable globale &quot;Points&quot; et la variable globale &quot;Time&quot; pour que la prochaine fois que la fonction soit appelée, nous obtenions une nouvelle moyenne pour la statistique. Maintenant, ce que <span class="notranslate">Steam</span> va faire est de prendre cette valeur que vous avez envoyée et de créer une valeur moyenne sur le temps qui a été défini pour notre «fenêtre». </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Steam_Achievements.htm">Réalisations et statistiques</a></div><div style="float:right"> Suivant: <a href="steam_get_stat_int.htm"><span class="notranslate">steam</span> _get_stat_int</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
steam_set_avg_rate
-->
  <!-- TAGS
steam_set_avg_rate
-->
</body>
</html>