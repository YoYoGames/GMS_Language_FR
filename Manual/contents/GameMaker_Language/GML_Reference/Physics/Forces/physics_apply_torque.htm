<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physique_appliquer_torque</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_apply_torque" />
  <meta name="rh-index-keywords" content="physics_apply_torque" />
  <meta name="search-keywords" content="physics_apply_torque" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physique_appliquer_torque</h1>
  <p>Lorsque nous parlons de couple, nous parlons généralement de la tendance d'une force ou d'une impulsion à faire tourner une instance autour de son centre de masse, mais dans <span class="notranslate">GameMaker Studio 2</span>, vous pouvez également appliquer un couple de manière indépendante à une instance, en la faisant tourner
    dans une direction donnée. La quantité de couple que vous appliquez pour obtenir la rotation souhaitée dépend de la taille et de la densité du dispositif de fixation que vous attribuez à votre instance, car ces deux propriétés contribuent à définir sa masse, qui définit son inertie, qui affecte le
    le couple ! La règle générale est que si une instance a beaucoup d'inertie, vous aurez besoin de beaucoup de couple pour qu'elle commence à tourner. Il faut également noter que d'autres facteurs comme la gravité et les collisions peuvent également affecter le couple d'une instance.
    Voici une image pour vous aider à comprendre :</p>
  <p><img alt="Appply physics torque illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/physics_apply_torque_image.png">Comme vous pouvez le constater, la quantité de couple dont vous avez besoin pour faire tourner l'objet dépend de la
    masse sous-jacente et de l'inertie qu'il procure. Tout cela est calculé pour vous par <span class="notranslate">GameMaker Studio 2</span> en fonction de la taille et de la densité du dispositif de fixation qui est affecté à l'instance lors de sa création. Notez également que pour une rotation dans le sens inverse des aiguilles d'une montre, la valeur
    doit être négative.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">physics_apply_torque(torque)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>couple</td>
        <td>Le couple (en Newton mètres) à appliquer</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">if keyboard_check(vk_left)<br> {<br> physics_apply_torque(-100) ;<br> }</p>
  <p>Le code ci-dessus fera tourner l'instance dans le sens inverse des aiguilles d'une montre (vers la gauche) avec un couple de 100 Nm lorsque la touche fléchée gauche est enfoncée.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Forces.htm">Forces</a></div>
        <div style="float:right">Suivant : physics_apply_angular_impulse</div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
physics_apply_torque
-->
  <!-- TAGS
physics_apply_torque
-->
</body>
</html>