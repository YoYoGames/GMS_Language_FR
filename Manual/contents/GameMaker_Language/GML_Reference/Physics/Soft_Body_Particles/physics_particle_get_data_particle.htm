<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_particle_get_data_particle</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page de référence pour physics_particle_get_data_particle" />
  <meta name="rh-index-keywords" content="physics_particle_get_data_particle,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color" />
  <meta name="search-keywords" content="physics_particle_get_data_particle,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>physics_particle_get_data_particle</h1><p> Cette fonction renvoie diverses informations sur une seule particule dans la simulation physique en utilisant les indicateurs donnés cochés. L&#39;indice de particule (son ID) est celui qui a été renvoyé par la fonction <a href="physics_particle_create.htm"><tt>physics_particle_create()</tt></a>, et le tampon utilisé doit avoir été créé au préalable à l&#39;aide de la fonction <a href="../../Buffers/buffer_create.htm"><tt>buffer_create()</tt></a>. Il doit être du type «grandir», la taille étant approximativement celle des données de retour attendues. Les indicateurs eux-mêmes sont définis en utilisant les constantes données ci-dessous, et vous utiliseriez le bit au niveau du bit <i>ou</i> &quot;|&quot; pour créer une valeur d&#39;indicateur unique pour obtenir les informations souhaitées.</p><p></p><table><tbody><tr><th> Constant</th><th> Description</th><th> Type de données</th></tr><tr><td> <span class="notranslate">phy_particle_data_flag_typeflags</span></td><td> La valeur des indicateurs pour la particule.</td><td> <span class="notranslate">buffer_u32</span></td></tr><tr><td> <span class="notranslate">phy_particle_data_flag_position</span></td><td> Les positions x et y de la particule.</td><td> <span class="notranslate">2 x buffer_f32</span></td></tr><tr><td> <span class="notranslate">phy_particle_data_flag_velocity</span></td><td> La vitesse horizontale et verticale.</td><td> <span class="notranslate">2 x buffer_f32</span></td></tr><tr><td> <span class="notranslate">phy_particle_data_flag_colour</span></td><td> La couleur et la valeur alpha (hexadécimale).</td><td> <span class="notranslate">buffer_f32</span></td></tr><tr><td> <span class="notranslate">phy_particle_data_flag_category</span></td><td> La catégorie de particules (telle que définie lors de la création de la particule).</td><td> <span class="notranslate">buffer_u32</span></td></tr></tbody></table><p></p><h4> Syntaxe:</h4><p class="code">physics_particle_get_data_particle(ind, buffer, flags)</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">ind</span></td><td> L&#39;index (ID) de la particule à partir duquel obtenir les données.</td></tr><tr><td> <span class="notranslate">buffer</span></td><td> Le tampon (créé précédemment) à utiliser pour stocker les données.</td></tr><tr><td> <span class="notranslate">flags</span></td><td> Les indicateurs à utiliser pour extraire des données sur des types de particules spécifiques.</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">Buffer data</p><p></p><h4> Exemple:</h4><p class="code">var part = physics_particle_create(flags, x, y, x_vel, y_vel, c_white, 1, 1)<br/> var flags = phy_particle_data_flag_position | phy_particle_data_flag_velocity;<br/> var buffer = buffer_create(16, buffer_grow, 4);<br/> physics_particle_get_data_particle(part,
    buffer, flags);<br/> px = buffer_read(buffer, buffer_f32);<br/> py = buffer_read(buffer, buffer_f32);<br/> pvelx = buffer_read(buffer, buffer_f32);<br/> pvely = buffer_read(buffer, buffer_f32);<br/> buffer_delete(buffer);
  </p><p> Le code ci-dessus obtient la position et la vitesse de la particule indexées par la variable «partie» et stocke les données dans un certain nombre de variables. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Soft_Body_Particles.htm">Particules corporelles molles</a></div><div style="float:right"> Suivant:<a href="physics_particle_group_get_data.htm">physics_particle_group_get_data</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
physics_particle_get_data_particle
phy_particle_data_flag_typeflags
phy_particle_data_flag_position
phy_particle_data_flag_velocity
phy_particle_data_flag_colour
phy_particle_data_flag_category
-->
  <!-- TAGS
physics_particle_get_data_particle
-->
</body>
</html>