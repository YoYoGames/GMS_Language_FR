<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physique_joint_friction_créer</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_friction_create" />
  <meta name="rh-index-keywords" content="physics_joint_friction_create" />
  <meta name="search-keywords" content="physics_joint_friction_create" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physique_joint_friction_créer</h1>
  <p>L'articulation à friction est un peu différente de toutes les autres articulations de la simulation physique, car la connexion créée ne contraint pas la position ou le mouvement des instances, mais plutôt leur vitesse et leur rotation. Cela fonctionne en prenant les valeurs d'entrée maximales
    pour la force et le couple et en les appliquant à la deuxième fixation pour ramener la vitesse et le moment angulaire aux mêmes valeurs que celles de la première instance. Ainsi, si vous avez une instance stationnaire et une instance mobile et que vous les connectez avec un joint de friction, l'instance mobile va progressivement ralentir.
    l'instance en mouvement ralentira progressivement jusqu'à ce qu'elle soit également immobile. Si les deux instances étaient en mouvement, la vitesse de déplacement de la deuxième instance sera modifiée pour correspondre à celle de la première instance.</p>
  <p><img alt="Friction joint illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/friction_joint_image.png">Comme pour la plupart des autres joints, vous fournissez les instances à joindre, ainsi que la position
    à laquelle la jointure doit être créée dans la pièce. Vous fournissez ensuite la force maximale et le couple maximal (friction directionnelle et rotationnelle), et si vous définissez la valeur &quot;col&quot; à true, <tt>les</tt> deux instances peuvent interagir et entrer en collision l'une avec l'autre, mais seulement si elles ont des événements de collision.
    Si vous attribuez la valeur "col" à true, les deux instances peuvent interagir et entrer en collision l'une avec l'autre, mais <i>seulement</i> si elles ont des événements de collision <tt>.</tt></p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">physics_joint_friction_create(inst1, inst2, anchor_x, anchor_y, max_force, max_torque, col)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>inst1</td>
        <td>La première instance à se connecter avec l'articulation</td>
      </tr>
      <tr>
        <td>inst2</td>
        <td>La deuxième instance pour se connecter avec le joint</td>
      </tr>
      <tr>
        <td>anchor_x</td>
        <td>La coordonnée x de l'articulation, dans l'univers du jeu.</td>
      </tr>
      <tr>
        <td>anchor_y</td>
        <td>La coordonnée y de l'articulation, dans l'univers du jeu.</td>
      </tr>
      <tr>
        <td>max_force</td>
        <td>La force de frottement maximale qui sera appliquée</td>
      </tr>
      <tr>
        <td>couple max.</td>
        <td>La force de rotation maximale qui sera appliquée</td>
      </tr>
      <tr>
        <td>col</td>
        <td>Si les deux instances peuvent entrer en collision (vrai) ou non (faux).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Nombre entier (indice de l'articulation)</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">var mainFixture, o_id ;<br> mainFixture = physics_fixture_create() ;<br> physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2) ;<br> o_id = instance_create_layer(x+300, y, &quot;Instances&quot;, obj_Rudder) ;<br> physics_fixture_bind(mainFixture,
    id) ;<br> physics_fixture_bind(mainFixture, o_id) ;<br> physics_joint_friction_create(id, o_id, x, y, 10, 0.3, true) ;<br> physics_fixture_delete(mainFixture) ;
  </p>
  <p>Le code ci-dessus crée un dispositif, puis le lie à deux instances, avant de les connecter à l'aide d'un joint à friction.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Dos : <a href="Joints.htm">Articulations</a></div>
        <div style="float:right">Suivant : <a href="physics_joint_delete.htm">physics_joint_delete</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_friction_create
-->
  <!-- TAGS
physics_joint_friction_create
-->
</body>
</html>