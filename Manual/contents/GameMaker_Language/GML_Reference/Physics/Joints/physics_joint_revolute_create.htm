<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_joint_revolute_create</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page de référence pour physics_joint_revolute_create" />
  <meta name="rh-index-keywords" content="physics_joint_revolute_create" />
  <meta name="search-keywords" content="physics_joint_revolute_create" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>physics_joint_revolute_create</h1><p> Une articulation de révolution force deux corps à partager un point d&#39;ancrage commun (souvent appelé point d&#39;articulation) et l&#39;articulation a un seul degré de liberté - la rotation relative des deux corps autour de ce point. Pour spécifier une révolution, vous devez fournir deux instances et un seul point d&#39;ancrage dans la pièce, comme vous pouvez le voir dans l&#39;image fournie:</p><p><img alt="Revolute joint anchor points illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/revolute_joint_image_1.png" /> Si vous regardez l&#39;image, vous pouvez voir que les deux instances ont été créées pour se chevaucher et au point où elles se touchent, nous avons défini une articulation révolutionnaire. Or, cette articulation peut être limitée dans sa liberté de rotation grâce aux valeurs &quot;ang_min_limit&quot; et &quot;ang_max_limit&quot;. Comment cela marche-t-il? Eh bien, regardons une autre image:</p><p><img alt="Revolute joint angle limits illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/revolute_joint_image_2.png" /> Comme vous pouvez le voir, les angles dans le monde de la physique <i>ne</i> sont pas les mêmes que les <span class="notranslate">GameMaker Studio 2</span> où la droite est de 0 degré, puis elle va dans le sens inverse des aiguilles d&#39;une montre pour que le haut soit 90, la gauche 180 et le bas 270. Non, lorsqu&#39;il s&#39;agit de l&#39;articulation révolutionnaire, l&#39;axe 0 degré va de la position de l&#39;articulation à l&#39;origine de la deuxième instance définie par la fonction et les angles sont ensuite calculés dans le sens des aiguilles d&#39;une montre. Si vous activez la limitation d&#39;angle, les limites sont définies comme étant relatives à cet axe de 0 degré et la plage de limites <i>doit inclure zéro</i>, sinon l&#39;articulation basculera lorsque la pièce commencera. Enfin, vous pouvez définir l&#39;articulation comme ayant un moteur ou non. Cela signifie que lorsqu&#39;il n&#39;est pas influencé par une collision, l&#39;articulation se déplacera dans une direction, qui est définie par la vitesse du moteur avec un nombre positif dans le sens des aiguilles d&#39;une montre et un nombre négatif dans le sens anti-horaire. L&#39;argument &quot;max_motor_torque&quot; sert à limiter la vitesse de rotation pour ne pas avoir de moteur en accélération perpétuelle et à limiter l&#39;influence qu&#39;une collision peut avoir sur la rotation. De cette façon, vous pouvez utiliser un moteur d&#39;articulation pour simuler le frottement de l&#39;articulation en réglant la vitesse de l&#39;articulation à zéro et le couple maximal à une valeur petite mais significative. Le moteur essaiera d&#39;empêcher le joint de tourner, mais cédera à une charge importante.</p><p> Comme pour toutes les liaisons, si vous définissez la valeur &quot;col&quot; sur <tt>true</tt> alors les deux instances peuvent interagir et entrer en collision l&#39;une avec l&#39;autre, mais <i>uniquement</i> si elles ont des événements de collision, mais si elle est définie sur <tt>false</tt>, ils n&#39;entreront pas en collision quoi qu&#39;il arrive.</p><p></p><h4> Syntaxe:</h4><p class="code">physics_joint_revolute_create(inst1, inst2, w_anchor_x, w_anchor_y, ang_min_limt, ang_max_limit, ang_limit, max_motor_torque, motor_speed, motor, col)</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">inst1</span></td><td> La première instance à se connecter avec l&#39;articulation</td></tr><tr><td> <span class="notranslate">inst2</span></td><td> La deuxième instance pour se connecter avec l&#39;articulation</td></tr><tr><td> <span class="notranslate">w_anchor_x</span></td><td> La coordonnée x pour l&#39;articulation, dans le monde du jeu</td></tr><tr><td> <span class="notranslate">w_anchor_y</span></td><td> La coordonnée y pour l&#39;articulation, dans le monde du jeu</td></tr><tr><td> <span class="notranslate">ang_min_limit</span></td><td> La limite inférieure autorisée pour l&#39;angle de joint</td></tr><tr><td> <span class="notranslate">ang_max_limit</span></td><td> La limite supérieure autorisée pour l&#39;angle de joint</td></tr><tr><td> <span class="notranslate">ang_limit</span></td><td> Que ce soit pour limiter l&#39;angle de l&#39;articulation (vrai) ou non (faux)</td></tr><tr><td> <span class="notranslate">max_motor_torque</span></td><td> Définit le couple moteur maximal utilisé pour atteindre la vitesse du moteur souhaitée (en Newtons par mètre)</td></tr><tr><td> <span class="notranslate">motor_speed</span></td><td> C&#39;est la vitesse à laquelle le moteur doit tourner</td></tr><tr><td> <span class="notranslate">motor</span></td><td> Si le moteur doit être actif (vrai) ou non (faux)</td></tr><tr><td> <span class="notranslate">col</span></td><td> Si les deux instances peuvent entrer en collision (vrai) ou non (faux)</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">Integer (index of the joint)</p><p></p><h4> Exemple:</h4><p class="code">var mainFixture, o_id;<br/> mainFixture = physics_fixture_create();<br/> physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);<br/> o_id=instance_create_layer(x+25, y, &quot;Instances&quot;, obj_Door);<br/> physics_fixture_bind(mainFixture,
    id);<br/> physics_fixture_bind(mainFixture, o_id);<br/> physics_joint_revolute_create(id, o_id, x+25, y, -90, 90, 1, 0, 0, 0, 0);<br/> physics_fixture_delete(mainFixture);
  </p><p> Le code ci-dessus crée et définit un nouveau luminaire, puis crée une instance de &quot;obj_Door&quot;, liant le luminaire créé aux deux nouveaux objets. Ils sont ensuite reliés par un joint tournant sans moteur et les angles sont limités à une oscillation de +/- 90 degrés. Enfin, l&#39;appareil est supprimé car il n&#39;est plus nécessaire. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Arrière: <a href="Joints.htm">Joints</a></div><div style="float:right"> Suivant:<a href="physics_joint_prismatic_create.htm">physics_joint_prismatic_create</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_revolute_create
-->
  <!-- TAGS
physics_joint_revolute_create
-->
</body>
</html>