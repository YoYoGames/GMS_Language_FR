<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_fixture_add_point</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_fixture_add_point" />
  <meta name="rh-index-keywords" content="physics_fixture_add_point" />
  <meta name="search-keywords" content="physics_fixture_add_point" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_fixture_add_point</h1>
  <p>Cette fonction définit les points d'un polygone qui a été précédemment défini dans l'interface en utilisant l'une des méthodes suivantes <a href="physics_fixture_set_polygon_shape.htm"><tt>physics_fixture_set_polygon_shape()</tt></a> ou bien elle peut être utilisée pour ajouter des points à une chaîne de fixations d'arêtes
    en utilisant la fonction <a href="physics_fixture_set_chain_shape.htm"><tt>physics_fixture_set_chain_shape()</tt></a>. Pour un polygone, les points sont relatifs à l'origine du gabarit, la position 0,0 de l'axe x/y étant le centre,
    et les coordonnées suivantes sont calculées comme d'habitude dans <span class="notranslate">GameMaker Studio 2</span>, la position bas/droite étant +x,+y et la position haut/gauche étant -x,-y. Voici une illustration pour vous aider à visualiser ce processus :</p>
  <p><img alt="Physics polyfon points example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/physics_fixture_add_point_image.png">Comme vous pouvez le constater, n'importe quel polygone <b>convexe</b> simple peut être modélisé de cette manière.
    mais les polygones <b>concaves</b> <i>ne</i> sont <i>pas</i> pris en charge pour le moment. Enfin, pour fermer le polygone, vous devez lier le dispositif à une instance. Vous devez également noter que vous devez avoir défini au moins <b>trois</b> points pour votre polygone avant de le lier à une instance.
    Vous devez également noter que vous devez avoir défini au moins trois points pour votre polygone avant de le lier à une instance, sinon vous obtiendrez une erreur et que l'ajout d'un point à un repère qui n'a pas de forme de polygone définie au préalable entraînera également une erreur. Notez également que le nombre maximum de points autorisés pour un repère est de <b>huit</b>.</p>
  <p>Pour les formes en chaîne (qui sont simplement une série de formes d'arêtes connectées), cette fonction définira un point comme &quot;connexion&quot; pour enchaîner les arêtes ensemble. Vous devez donc avoir défini au moins deux points avant de lier le dispositif à l'instance
    sinon vous obtiendrez une erreur. Cependant, contrairement aux polygones, vous n'êtes pas limité à un maximum de huit points et vous pouvez en ajouter autant que vous le souhaitez pour créer la chaîne et les points sont définis dans les coordonnées réelles de la pièce, plutôt que par rapport à l'instance.
    instance.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">physics_fixture_add_point(fixture, xpos, ypos)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>L'appareil</td>
        <td>l'indice du dispositif</td>
      </tr>
      <tr>
        <td>xpos</td>
        <td>la position x du point<i>(par rapport à l'origine de la fixation</i> pour les formes polygonales)</td>
      </tr>
      <tr>
        <td>ypos</td>
        <td>la position y du point<i>(par rapport à l'origine de la fixation</i> pour les formes polygonales)</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">physics_fixture_set_polygon_shape(fix_Ship) ;<br> physics_fixture_add_point(fix_Ship, 0,0) ;<br> physics_fixture_add_point(fix_Ship, -40, 100) ;<br> physics_fixture_add_point(fix_Ship, 40, 100) ;</p>
  <p>Le code ci-dessus applique une forme polygonale au dispositif indexé dans la variable &quot;fix_Ship&quot;, puis définit trois points pour créer une forme triangulaire.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Fixtures.htm">Fixtures</a></div>
        <div style="float:right">Suivant : <a href="physics_fixture_set_density.htm">physics_fixture_set_density</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
physics_fixture_add_point
-->
  <!-- TAGS
physics_fixture_add_point
-->
</body>
</html>