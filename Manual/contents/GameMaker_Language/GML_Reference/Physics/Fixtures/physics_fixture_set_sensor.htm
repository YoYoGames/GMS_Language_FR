<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_fixture_set_sensor</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_fixture_set_sensor" />
  <meta name="rh-index-keywords" content="physics_fixture_set_sensor" />
  <meta name="search-keywords" content="physics_fixture_set_sensor" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_fixture_set_sensor</h1>
  <p>Parfois, vous voudrez que votre jeu détecte et reconnaisse la collision de deux instances avec des fixtures, mais sans avoir de réaction physique à la collision. Pour ce faire, vous pouvez convertir le dispositif en capteur, ce qui signifie qu'il générera un événement de collision, mais sans réaction physique.
    générer un événement de collision, mais sans réaction physique, afin que vous puissiez utiliser ces instances comme &quot;déclencheurs&quot; d'autres événements dans la salle de jeu. N'importe quel dispositif peut être marqué comme un capteur, et il n'y a pas de différence si l'instance à laquelle il est lié est statique ou en mouvement.
    est liée est statique ou en mouvement.</p>
  <p class="note"><b>REMARQUE</b>: une fixation de capteur déclenchera l'événement de collision <b>uniquement</b> lorsque la collision <b>se produira pour la première fois</b>, ce qui signifie que vous n'obtiendrez pas un flux d'événements de collision lorsque les deux corps continueront à se chevaucher (ce qui se produirait traditionnellement). S'ils
    cessent de se chevaucher et se chevauchent à nouveau, un autre événement de collision sera déclenché.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">physics_fixture_set_sensor(fixture, state)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>L'appareil</td>
        <td>l'indice du dispositif</td>
      </tr>
      <tr>
        <td>état</td>
        <td>si un luminaire est un capteur (true) ou non (false)</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">physics_fixture_set_sensor(fix_Cloud, 1) ;</p>
  <p>Le code ci-dessus va transformer l'état du capteur de l'appareil indexé dans &quot;fix_Cloud&quot; en vrai.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Fixtures.htm">Fixtures</a></div>
        <div style="float:right">Suivant : <a href="physics_fixture_set_kinematic.htm">physics_fixture_set_kinematic</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
physics_fixture_set_sensor
-->
  <!-- TAGS
physics_fixture_set_sensor
-->
</body>
</html>