<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>texture_set_stage</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for ​texture_set_stage" />
  <meta name="rh-index-keywords" content="texture_set_stage" />
  <meta name="search-keywords" content="texture_set_stage" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>texture_set_stage</h1>
  <p>Cette fonction va définir une texture à utiliser pour le &quot;slot&quot; de scène donné. Le nombre d'emplacements de scène disponibles dépend de la plate-forme sur laquelle vous compilez, avec un maximum de 8 pour Windows, <span class="notranslate">Mac et</span> Linux, mais <span class="notranslate">sur les</span> appareils Android bas de gamme (par exemple), ce nombre peut être aussi bas que 2.
    Il convient également de noter que le premier &quot;slot&quot; de scène est toujours utilisé automatiquement par GameMaker <span class="notranslate">Studio 2.</span></p>
  <p class="note"><b>NOTE</b>: Cette fonction ne fera rien en dehors du contexte d'un <span class="notranslate">shader</span> en cours d'exécution ! Voir <a href="../../Asset_Management/Shaders/Shaders.htm"><span class="notranslate">Shaders</span> </a>pour plus d'informations.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">texture_set_stage(stage, tex) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>scène</td>
        <td>Le &quot;slot&quot; de texture à utiliser.</td>
      </tr>
      <tr>
        <td>tex</td>
        <td>La texture à utiliser.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">glassshader_bgsampler = <span class="notranslate">shader_get_sampler_index</span>(GlassShader, &quot;s_BackgroundSampler&quot;)<br> spr = sprite_get_texture(sprite_index, 0) ;<br> shader_set <span class="notranslate">(GlassShader</span>) ;
    <br> texture_set_stage(glassshader_bgsampler, spr) ;<br> <span class="notranslate">shader_reset</span>() ;
  </p>
  <p>Le code ci-dessus récupère l'<i>identifiant de</i> l'échantillonneur dans le <span class="notranslate">shader</span> indexé en tant que &quot;GlassShader<span class="notranslate">&quot;,</span> puis définit la <span class="notranslate">constante du</span> shader sur la texture du sprite donnée.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Textures.htm">Textures</a></div>
        <div style="float:right">Suivant : <a href="texture_global_scale.htm">texture_global_scale</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
texture_set_stage
-->
  <!-- TAGS
texture_set_stage
-->
</body>
</html>