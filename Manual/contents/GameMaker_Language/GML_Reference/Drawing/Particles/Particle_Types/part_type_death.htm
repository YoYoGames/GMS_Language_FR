<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>partie_type_mort</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for part_type_death" />
  <meta name="rh-index-keywords" content="part_type_death" />
  <meta name="search-keywords" content="part_type_death" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>partie_type_mort</h1>
  <p>Cette fonction peut être utilisée pour que votre particule éclate un autre type de particule à la fin de sa vie.</p>
  <p class="note"><b>NOTE</b>: N'utilisez JAMAIS le même type de particule car cela provoquera une boucle infinie et peut faire planter le jeu en quelques secondes ! Aussi, soyez très prudent lorsque vous utilisez cette fonction car elle peut augmenter considérablement le nombre de particules à l'écran à la fois et causer un ralentissement notable de vos jeux.
    ralentir sensiblement vos jeux.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">part_type_death(ind, death_number, death_type) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>ind</td>
        <td>L'indice du type de particule à modifier.</td>
      </tr>
      <tr>
        <td>nombre de décès</td>
        <td>La quantité de la nouvelle particule à créer à la mort de la particule. S'il s'agit d'une valeur négative, une fraction de chance sera créée (par exemple -3 signifierait qu'une particule est créée tous les 3 pas environ).</td>
      </tr>
      <tr>
        <td>type de mort</td>
        <td>L'index du type de particule à créer.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">particle1 = part_type_create() ;<br> part_type_shape(particle1, pt_shape_flare) ;<br> part_type_size(particle1, 0.20, 0.30, 0.50, 0) ;<br> part_type_scale(particle1, 0.10, 0.20) ;<br> part_type_colour3(particle1, 33023, 8454143, 33023) ;<br> part_type_alpha3(particle1,
    0.30, 0.50, 0) ;<br> part_type_speed(particle1, 0.40, 1, 0, 0) ;<br> part_type_direction(particle1, 0, 359, 0, 20) ;<br> part_type_gravity(particle1, 0.20, 90) ;<br> part_type_orientation(particle1, 90, 90, 0, 0, 1) ;<br> part_type_blend(particle1,
    1) ;<br> part_type_life(particle1, 1, 40) ;<br> particle2 = part_type_create() ;<br> part_type_shape(particle2, pt_shape_smoke) ;<br> part_type_size(particle2, 1, 1, 0, 0) ;<br> part_type_scale(particle2, 0.50, 0.50) ;<br> part_type_colour1(particle2,
    12632256) ;<br> part_type_alpha3(particle2, 0.10, 0.40, 0) ;<br> part_type_speed(particle2, 0.50, 0.50, 0, 0) ;<br> part_type_direction(particle2, 0, 359, 0, 0) ;<br> part_type_gravity(particle2, 0.20, 90) ;<br> part_type_orientation(particle2, 0,
    359, 0, 1, 1) ;<br> part_type_blend(particle2, 0) ;<br> part_type_life(particle2, 60, 60) ;<br> part_type_death(particle1, 1, particle2) ;</p>
  <p>Le code ci-dessus crée et définit deux particules et définit la particule indexée dans la variable &quot;particule1&quot; pour créer 1 particule de &quot;particule2&quot; à la fin de sa vie.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Particle_Types.htm">Types de particules</a></div>
        <div style="float:right">Suivant : <a href="part_type_exists.htm">part_type_exists</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
part_type_death
-->
  <!-- TAGS
part_type_death
-->
</body>
</html>