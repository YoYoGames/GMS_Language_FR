<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>part_type_step</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page de référence pour part_type_step" />
  <meta name="rh-index-keywords" content="part_type_step" />
  <meta name="search-keywords" content="part_type_step" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>part_type_step</h1><p> Cette fonction peut être utilisée pour faire en sorte que votre type de particule diffuse un autre type à chaque étape jusqu&#39;à la fin de sa durée de vie. Vous pouvez définir une valeur négative pour le numéro de l&#39;étape et une particule sera émise à un intervalle aléatoire basé sur cela, de sorte que, par exemple, une valeur de -3 aura une chance de 1: 3 d&#39;émettre une particule à chaque étape.</p><p class="note"> <b>REMARQUE</b>: N&#39;utilisez JAMAIS le même type de particule car cela provoquera une boucle infinie et peut planter le jeu en quelques secondes! Soyez également très prudent lorsque vous l&#39;utilisez, car cela peut augmenter considérablement le nombre de particules à l&#39;écran à la fois et ralentir considérablement vos jeux.</p><p></p><h4> Syntaxe:</h4><p class="code">part_type_step(ind, step_number, step_type);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">ind</span></td><td> L&#39;indice du type de particule à modifier.</td></tr><tr><td> <span class="notranslate">step_number</span></td><td> La quantité de la nouvelle particule à créer par étape.</td></tr><tr><td> <span class="notranslate">step_type</span></td><td> L&#39;index du type de particule à créer.</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">N/A</p><p></p><h4> Exemple:</h4><p class="code">particle2 = part_type_create();<br/> part_type_shape(particle2, pt_shape_smoke);<br/> part_type_size(particle2, 0.01, 0.01, 0.01, 0);<br/> part_type_scale(particle2, 1, 1);<br/> part_type_colour3(particle2, 4227327, 8454143, 4227327);<br/> part_type_alpha3(particle2,1,
    0.50, 0.80);<br/> part_type_speed(particle2, 0, 0, 0, 0);<br/> part_type_direction(particle2, 0, 359, 0, 0);<br/> part_type_gravity(particle2, 0, 270);<br/> part_type_orientation(particle2, 0, 0, -2, 0, 1);<br/> part_type_blend(particle2, 1);<br/>    part_type_life(particle2, 160, 160);<br/> particle3 = part_type_create();<br/> part_type_shape(particle3, pt_shape_flare);<br/> part_type_size(particle3, 0.20, 0.20, 0.02, 0);<br/> part_type_scale(particle3, 1, 1);<br/> part_type_colour3(particle3,
    16777215, 8454143, 16777215);<br/> part_type_alpha3(particle3, 0, 0.50, 0);<br/> part_type_speed(particle3, 3, 3, -0.03, 0);<br/> part_type_direction(particle3, 0, 359, 0, 0);<br/> part_type_gravity(particle3, 0, 270);<br/> part_type_orientation(particle3,
    0, 0, 0, 0, 1);<br/> part_type_blend(particle3, 1);<br/> part_type_life(particle3, 40, 80);<br/> part_type_step(particle2, 2, particle3);</p><p> Le code ci-dessus crée et définit deux particules et définit la particule indexée dans la variable «particule2» pour créer 2 particules de «particule3» à chaque étape de sa durée de vie. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Particle_Types.htm">Types de particules</a></div><div style="float:right"> Suivant:<a href="part_type_death.htm">part_type_death</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
part_type_step
-->
  <!-- TAGS
part_type_step
-->
</body>
</html>