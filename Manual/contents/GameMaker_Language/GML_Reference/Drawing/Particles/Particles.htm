<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Particules</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Section de référence pour les fonctions et variables Particle" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Particules" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1> Particules</h1><p> Pour les choses complexes dans <span class="notranslate">GameMaker Studio 2</span> vous auriez normalement un <a href="../../../../The_Asset_Editors/Objects.htm">objet</a> et créez des <a href="../../Asset_Management/Instances/Instances.htm">instances</a> de cet objet dans la pièce. Cependant, pour les effets graphiques, cela peut être coûteux car chaque instance a un «coût» de traitement en raison des variables qu&#39;elle contient et des codes qu&#39;elle a dans les différents événements. Vous pouvez réduire ce coût en vous tournant vers les <a href="../../../../The_Asset_Editors/Room_Properties/Layer_Properties.htm">couches de tuiles</a> et <a href="../../../../The_Asset_Editors/Room_Properties/Layer_Properties.htm">les couches d&#39;actifs</a> pour dessiner vos besoins graphiques, mais celles-ci sont généralement statiques et ne peuvent pas être modifiées ou déplacées beaucoup. Cependant, il existe une autre option pour dessiner des effets graphiques rapides mais polyvalents dans vos jeux, à savoir utiliser des <i>particules</i>.</p><p> <strong>Les particules</strong> sont des ressources graphiques qui ont certaines propriétés définies dans un <i>système de particules</i>. Ces propriétés ne peuvent pas être manipulées directement pour des particules individuelles, mais sont modifiées via le code utilisé pour définir la particule individuelle et le système auquel elle appartient. Ils sont très utiles pour créer des effets magnifiques et flashy (ou subtils et discrets!) Comme des explosions, des décalcomanies, de la pluie, de la neige, des champs d&#39;étoiles et des débris dans un jeu sans la surcharge du processeur que l&#39;utilisation d&#39;instances a.</p><p> La configuration de base d&#39;un système de particules se déroule en trois étapes, la troisième étant facultative en fonction de la manière dont vous souhaitez créer vos effets de particules dans la pièce:</p><ul class="colour"><li> <b>Créer un système de particules</b>: Le système de particules est comme un conteneur que nous allons utiliser pour tenir nos différents types de particules prêts à l&#39;emploi. Nous utilisons du code pour définir une série d&#39;aspects visuels et de comportements pour nos particules, puis nous les plaçons dans le «conteneur» afin que nous puissions les retirer et les utiliser quand et où nous en aurons besoin plus tard.</li><li> <b>Créer des types de particules</b>: les types de particules sont l&#39;effet graphique lui-même. Vous pouvez avoir de nombreux types différents, chacun avec sa propre gamme de couleurs, d&#39;alphas, de tailles et de mouvements, mais il est important de noter que vous <i>n&#39;avez pas de contrôle sur les particules individuelles</i>. Vous définissez une série de paramètres et la particule sera créée pour avoir une répartition aléatoire des comportements choisis parmi eux.</li><li> <b>Créer des émetteurs</b>: les émetteurs sont une option qui peut être utilisée pour éclater ou diffuser des particules à partir de limites très clairement définies. Ils sont facultatifs car vous pouvez créer des particules à partir de n&#39;importe quelle instance à l&#39;aide de la <a href="Particle_Systems/part_particles_create.htm"><tt>part_particles_create()</tt></a> et <a href="Particle_Systems/part_particles_create_colour.htm"><tt>part_particles_create_colour()</tt></a> fonctions mais elles ne sont pas toujours adaptées à chaque situation.</li></ul><p> Bien que les particules soient un excellent outil pour créer des effets, elles sont accompagnées de certaines restrictions et de bonnes pratiques qui doivent être suivies à moins que vous ne souhaitiez que votre jeu souffre de performances médiocres ou même d&#39;un crash potentiel:</p><ul class="colour"><li> Les systèmes de particules, les particules et les émetteurs occupent de la mémoire et, en tant que tels, vous devez être très prudent dans leur utilisation car il est très facile de provoquer une fuite de mémoire qui ralentira et finira par planter votre jeu. Une façon de faire face à cela est d&#39;avoir un <i>système global</i> avec tout défini au début du jeu et supprimé à la fin, mais si vous voulez un système dynamique, chaque particule et émetteur (et le système lui-même) doivent être détruits au moment. ce n&#39;est pas nécessaire.</li><li> Les particules peuvent être rapides et légères sur le processeur, mais elles nécessitent toujours un <i>certain</i> traitement et vous ne devriez donc pas en avoir 40000 éclater sur l&#39;écran à la fois. Limitez-les à ceux qui sont nécessaires pour obtenir un effet spécifique et rien de plus.</li><li> Si vous définissez votre propre sprite de particules au lieu d&#39;utiliser l&#39;un des 14 sprites inclus, vous devriez essayer de les garder aussi petits que possible pour obtenir l&#39;effet souhaité.</li><li> Les particules n&#39;interagissent <i>pas</i> avec quoi que ce soit. Si vous en avez besoin pour avoir un type d&#39;interaction avec l&#39;utilisateur ou toute autre instance de votre jeu, vous devriez plutôt envisager d&#39;utiliser des instances, car les particules sont purement graphiques.</li><li> Même s&#39;il n&#39;y a pas de limite technique à la quantité de systèmes, d&#39;émetteurs et de particules que vous pouvez créer dans un jeu, vous devriez essayer de tout limiter au nombre minimum possible pour maintenir l&#39;utilisation de la mémoire aussi faible que possible.</li><li> Sur les appareils mobiles, faites attention aux particules car <i>leur dessin</i> peut être lent si elles couvrent une grande surface de l&#39;écran (le sur-tirage sur les appareils mobiles est l&#39;une des principales causes de ralentissement).</li><li> Avec HTML5, il n&#39;y a pas de fusion additive, et à moins que WebGL soit activé, vous ne pouvez pas non plus avoir de mélange de couleurs.</li></ul><p> Le moyen le plus simple de créer des particules dans votre jeu avec <span class="notranslate">GameMaker Studio 2</span> consiste à utiliser le mécanisme d&#39;effets intégré. Ces effets sont créés en utilisant un système de particules interne qui est fondamentalement une méthode très rapide pour dessiner des effets graphiques uniquement et en tant que tel, vous n&#39;avez pas à vous soucier de tous les détails (comme la gestion de la mémoire) lors de l&#39;utilisation de ces fonctions. Vous spécifiez simplement le type d&#39;effet, la position où il doit être créé, la taille que vous souhaitez qu&#39;il soit et enfin, sa couleur, puis laissez <span class="notranslate">GameMaker Studio 2</span> faire tout le travail.</p><p> Les fonctions suivantes existent pour créer les effets de particules intégrés: </p><p></p><ul class="colour"><li><a href="effect_create_below.htm">effect_create_below</a></li><li><a href="effect_create_above.htm">effect_create_above</a></li><li><a href="effect_clear.htm">effect_clear</a></li></ul><p></p><p> Même si ces effets ont une portée et une personnalisation limitées, ils peuvent toujours être utilisés pour créer des effets simples et géniaux avec très peu d&#39;effort. Par exemple, en créant une petite bouffée de fumée grise sous un missile en mouvement à chaque étape, une traînée de fumée assez convaincante est créée, donc même lorsque vous êtes un expert en particules, il est utile de se rappeler que ces effets existent car ils peuvent encore vous en sauver. temps.</p><p> Cependant, le véritable potentiel des particules réside dans la conception et la création de vos propres effets à l&#39;aide des puissantes fonctions que le <span class="notranslate">GameMaker Language</span> vous fournit. Vous pouvez en savoir plus dans chacune des sections suivantes:</p><p></p><ul class="colour"><li> <a href="Particle_Systems/Particle_Systems.htm"><label for="two">Systèmes de particules</label></a></li><li> <a href="Particle_Types/Particle_Types.htm"><label for="three">Types de particules</label></a></li><li> <a href="Particle_Emitters/Particle_Emitters.htm"><label for="four">Émetteurs de particules</label></a></li></ul><p></p><p> <label for="four">Il existe également une section qui vous donne un guide de base sur la façon de concevoir et de créer des particules pour vos jeux sur la page suivante:</label></p><p></p><ul class="colour"><li> <a href="../../../../Additional_Information/Guide_To_Using_Particles.htm">Guide d&#39;utilisation des particules</a> </li></ul><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="../Drawing.htm">Dessin</a></div><div style="float:right"> Suivant: <a href="../Textures/Textures.htm">Textures</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Particles
-->
  <!-- TAGS
particle_functions
-->
</body>
</html>