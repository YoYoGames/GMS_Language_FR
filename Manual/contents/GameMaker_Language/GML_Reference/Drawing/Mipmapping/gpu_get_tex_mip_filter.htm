<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_get_tex_mip_filter</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Référence de la fonction gpu_get_tex_mip_filter" />
  <meta name="rh-index-keywords" content="gpu_get_tex_mip_filter,tf_point,tf_linear,tf_anisotropic" />
  <meta name="search-keywords" content="gpu_get_tex_mip_filter,tf_point,tf_linear,tf_anisotropic" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>gpu_get_tex_mip_filter</h1><p> Avec cette fonction, vous pouvez obtenir le mode de filtre mip actuel. La valeur de mode renvoyée par la fonction sera l&#39;une des constantes répertoriées ci-dessous.</p><p></p><h4> Syntaxe:</h4><p class="code">gpu_get_tex_mip_filter();</p><p></p><h4> Retour:</h4><p class="code">Constant (listed below):</p><table><tbody><tr><th> Constant</th><th> Description</th></tr><tr><td> <span class="notranslate">tf_point</span></td><td> Cela signifie que la fusion entre les niveaux de mipmap est désactivée, ce qui peut provoquer des transitions de texture visibles, mais donne les meilleures performances.</td></tr><tr><td> <span class="notranslate">tf_linear</span></td><td> Cela signifie que le mélange entre les niveaux de mipmap est activé (cela est également connu sous le nom de <i>filtrage trilinéaire</i> ), ce qui lisse les transitions de texture, mais cela donnera un petit coup aux performances.</td></tr><tr><td> <span class="notranslate">tf_anisotropic</span></td><td> Cela signifie que le filtrage anisotrope est activé, ce qui améliore considérablement la qualité de la transition de texture et peut réduire le flou visible avec d&#39;autres modes de filtrage, mais il a le plus grand impact sur les performances.</td></tr></tbody></table><p></p><h4> Exemple:</h4><p class="code">if keyboard_check(ck_enter)<br/>     {
    <br/>     switch(gpu_get_tex_mip_filter())
    <br/>         {
    <br/>         case tf_point: gpu_set_tex_mip_filter(tf_linear); break;<br/>         case tf_linear: gpu_set_tex_mip_filter(tf_anisotropic); break;<br/>         case tf_anisotropic: gpu_set_tex_mip_filter(tf_point); break;<br/>         }
    <br/>     }
  </p><p> Le code ci-dessus vérifie le clavier et si la touche spécifiée est enfoncée, il obtiendra le filtre mip actuel et basculera la valeur sur la suivante, en parcourant les différents modes. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Mipmapping.htm">Mipmapping</a></div><div style="float:right"> Suivant:<a href="gpu_get_tex_mip_filter_ext.htm">gpu_get_tex_mip_filter_ext</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
gpu_get_tex_mip_filter
tf_point
tf_linear
tf_anisotropic
-->
  <!-- TAGS
gpu_get_tex_mip_filter
-->
</body>
</html>