<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_set_tex_mip_bias_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Référence de la fonction gpu_set_tex_mip_bias_ext" />
  <meta name="rh-index-keywords" content="gpu_set_tex_mip_bias_ext" />
  <meta name="search-keywords" content="gpu_set_tex_mip_bias_ext" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>gpu_set_tex_mip_bias_ext</h1><p> Avec cette fonction, vous pouvez définir la valeur du biais mipmap pour un échantillonneur de <span class="notranslate">shader</span> Vous fournissez la valeur d&#39;index pour l&#39; <span class="notranslate">shader</span> (comme renvoyé par la fonction <a href="../../Asset_Management/Shaders/shader_get_sampler_index.htm"><tt>shader_get_sampler_index()</tt></a>, Puis la valeur de polarisation, où 0 est sans parti pris, 1 est égal à la première mipmap, 2 est égale à la seconde mipmap etc... Ce contrôle le taux auquel la carte mip est permuté et généralement faire les <span class="notranslate">shader</span> des textures plus flou le plus élevé la valeur et plus la &quot;distance&quot; visualisée est grande. Notez que cette fonction peut également prendre des valeurs négatives, auquel cas <span class="notranslate">shader</span> textures de shader seront plus nettes sur une plus grande distance, plus la valeur est basse.</p><p></p><h4> Syntaxe:</h4><p class="code">gpu_set_tex_mip_bias_ext(sampler_index, bias);</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">sampler_index</span></td><td> L&#39;indice de l&#39;échantillonneur de <span class="notranslate">shader</span></td></tr><tr><td> <span class="notranslate">bias</span></td><td> La valeur du biais mipmap à utiliser (par défaut: 0)</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">N/A</p><p></p><h4> Exemple:</h4><p class="code">var _sampleIndex = shader_get_sampler_index(shd_Glass, &quot;s_Background&quot;);<br/> var _spriteTex = sprite_get_texture(sprite_index, 0);<br/> shader_set(shd_Glass);
    <br/> if gpu_get_tex_mip_bias_ext(_sampleIndex) != 0<br/>     {
    <br/>     gpu_set_tex_mip_bias_ext(_sampleIndex, 0);<br/>     }
    <br/> texture_set_stage(_sampleIndex , _spriteTex);<br/> shader_reset();
  </p><p> Le code ci-dessus définit le biais du filtre mip sur 0 pour l&#39; <span class="notranslate">shader</span> donné s&#39;il n&#39;a pas déjà été défini sur 0. </p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Mipmapping.htm">Mipmapping</a></div><div style="float:right"> Suivant:<a href="gpu_set_tex_min_mip.htm">gpu_set_tex_min_mip</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
gpu_set_tex_mip_bias_ext
-->
  <!-- TAGS
gpu_set_tex_mip_bias_ext
-->
</body>
</html>