<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_get_tex_max_aniso_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for the function gpu_get_tex_max_aniso_ext" />
  <meta name="rh-index-keywords" content="gpu_get_tex_max_aniso_ext" />
  <meta name="search-keywords" content="gpu_get_tex_max_aniso_ext" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gpu_get_tex_max_aniso_ext</h1>
  <p>Avec cette fonction, vous pouvez obtenir le niveau maximum actuel d'anisotropie lorsque vous utilisez le mode de filtre <tt>tf_anisotropique</tt> (voir <a href="gpu_get_tex_mip_filter.htm"><tt>gpu_get_tex_mip_filter()</tt></a> pour plus d'informations) sur un échantillonneur de <span class="notranslate">shader</span>. Vous devez
    fournissez la valeur de l'index de l'échantillonneur de <span class="notranslate">shader</span> (tel que renvoyé par la fonction <a href="../../Asset_Management/Shaders/shader_get_sampler_index.htm"><tt><span class="notranslate">shader_get_sampler_index</span>()</tt></a>), et la fonction renvoie une valeur comprise entre 1 et
    16.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">gpu_get_tex_max_aniso_ext(sampler_index) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>sampler_index</td>
        <td>L'index de l'échantillonneur de <span class="notranslate">shader</span> à obtenir</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Real (par défaut : 16)</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">var _sampleIndex = <span class="notranslate">shader_get_sampler_index</span>(shd_Glass, &quot;s_Background&quot;) ;<br> var _spriteTex = sprite_get_texture(sprite_index, 0) ;<br> shader_set <span class="notranslate">(shd_Glass</span>) ;
    <br> if gpu_get_tex_max_aniso_ext(_sampleIndex) != 8<br> {
    <br> gpu_set_tex_max_aniso_ext(_sampleIndex, 8) ;<br> }
    <br> texture_set_stage(_sampleIndex , _spriteTex) ;<br> <span class="notranslate">shader_reset</span>() ;
  </p>
  <p>Le code ci-dessus définit le niveau maximum d'anisotropie à 8 pour l'échantillonneur de texture du <span class="notranslate">shader</span> donné s'il n'a pas déjà été défini à 8.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Mipmapping.htm">Mipmapping</a></div>
        <div style="float:right">Suivant : <a href="gpu_get_tex_mip_enable.htm">gpu_get_tex_mip_enable</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
gpu_get_tex_max_aniso_ext
-->
  <!-- TAGS
gpu_get_tex_max_aniso_ext
-->
</body>
</html>