<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_set_blendmode_ext_sepalpha</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for the function gpu_set_blendmode_ext_sepalpha" />
  <meta name="rh-index-keywords" content="gpu_set_blendmode_ext_sepalpha,bm_zero,bm_one,bm_src_colour,bm_inv_src_colour,bm_src_alpha,bm_inv_src_alpha,bm_dest_alpha,bm_inv_dest_alpha,bm_dest_colour,bm_inv_dest_colour,bm_src_alpha_sat,bm_src_color,bm_inv_src_color,bm_dest_color,bm_inv_dest_colour" />
  <meta name="search-keywords" content="gpu_set_blendmode_ext_sepalpha,bm_zero,bm_one,bm_src_colour,bm_inv_src_colour,bm_src_alpha,bm_inv_src_alpha,bm_dest_alpha,bm_inv_dest_alpha,bm_dest_colour,bm_inv_dest_colour,bm_src_alpha_sat,bm_src_color,bm_inv_src_color,bm_dest_color,bm_inv_dest_colour" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gpu_set_blendmode_ext_sepalpha</h1>
  <p>Lorsque <span class="notranslate">GameMaker Studio 2</span> dessine un pixel, il y a une couleur source (la couleur du pixel que nous allons dessiner) et une couleur de destination (la couleur qui se trouve déjà dans le pixel que nous dessinons).
    le pixel, les couleurs source et destination sont calculées en fonction du mode de fusion choisi. Chaque composante des couleurs est stockée sous la forme d'une valeur à virgule flottante comprise entre 0 et 1, et la nouvelle couleur est calculée en multipliant chaque composante de la couleur source par un facteur et en multipliant chaque composante de la couleur de destination par un autre facteur.
    source par un certain facteur et en multipliant chaque composante de la couleur de destination par un autre facteur, puis en additionnant les résultats composante par composante.</p>
  <p>Cette fonction vous permet de définir les différentes parties de composants qui doivent être pondérées ensemble pour créer un mode de fusion personnalisé, en sélectionnant différentes parties de différents facteurs de mode de fusion pour les composants RVB et le composant Alpha. Ainsi, les arguments &quot;src&quot;
    et &quot;dest&quot; utiliseront les 3 premières valeurs du mode de fusion (RGB) et les arguments &quot;alphasrc&quot; et &quot;alphadest&quot; prendront la dernière partie du facteur de mode de fusion. Par exemple, si vous avez la source RGB comme <tt>bm_zero</tt>,
    alors (0, 0, 0) sera utilisé. Si vous définissez ensuite la source Alpha comme bm_one, alors (1) sera utilisé, donnant un mode de fusion final de la source de (0, 0, 0, 1).</p>
  <p>Le tableau suivant montre les valeurs RGBA pour chaque mode de fusion, où (Rs, Gs, Bs, As) sont considérées comme les valeurs de source et (Rd, Gd, Bd, Ad) comme les valeurs de destination. Les onze constantes disponibles peuvent être utilisées comme source ou comme destination (ou les deux).
    (ou les deux) lorsqu'elles sont utilisées dans cette fonction.</p>
  <table>
    <tbody>
      <tr>
        <th>Constant</th>
        <th>Facteur de mélange (rouge, vert, bleu, alpha)</th>
      </tr>
      <tr>
        <td>bm_zero</td>
        <td>(0, 0, 0, 0)</td>
      </tr>
      <tr>
        <td>bm_one</td>
        <td>(1, 1, 1, 1)</td>
      </tr>
      <tr>
        <td>bm_src_colour</td>
        <td>(Rs, Gs, Bs, As)</td>
      </tr>
      <tr>
        <td>bm_inv_src_colour</td>
        <td>(1-R, 1-G, 1-B, 1-A)</td>
      </tr>
      <tr>
        <td>bm_src_alpha</td>
        <td>(As, As, As, As)</td>
      </tr>
      <tr>
        <td>bm_inv_src_alpha</td>
        <td>(1-As, 1-As, 1-As, 1-As, 1-As)</td>
      </tr>
      <tr>
        <td>bm_dest_alpha</td>
        <td>(Ad, Ad, Ad, Ad, Ad)</td>
      </tr>
      <tr>
        <td>bm_inv_dest_alpha</td>
        <td>(1-Ad, 1-Ad, 1-Ad, 1-Ad, 1-Ad)</td>
      </tr>
      <tr>
        <td>bm_dest_colour</td>
        <td>(Rd, Gd, Bd, Ad)</td>
      </tr>
      <tr>
        <td>bm_inv_dest_colour</td>
        <td>(1-Rd, 1-Gd, 1-Bd, 1-Ad)</td>
      </tr>
      <tr>
        <td>bm_src_alpha_sat</td>
        <td>(f, f, f, 1) où f = min(As, 1-Ad)</td>
      </tr>
    </tbody>
  </table>
  <p class="note"><b>IMPORTANT !</b> HTML5 sans WebGL activé <b>ne sera pas</b> en mesure d'afficher correctement les modes suivants :</p>
  <ul class="colour" style="padding-left: 120px">
    <li><tt>bm_src_colour</tt></li>
    <li><tt>bm_inv_src_colour</tt></li>
    <li><tt>bm_dest_colour</tt></li>
    <li><tt>bm_inv_dest_colour</tt></li>
    <li><tt>bm_src_alpha_sat</tt></li>
  </ul>
  <p> </p>
  <p>Notez que vous pouvez soit fournir quatre arguments individuels à cette fonction, soit fournir un tableau d'arguments (tel que retourné par la fonction <a href="gpu_get_blendmode_ext_sepalpha.htm"><tt>gpu_get_blendmode_ext_sepalpha()</tt></a> par exemple).
    Si vous fournissez un tableau, il doit contenir les quatre éléments suivants :</p>
  <ul class="colour">
    <li>0] = Mode de fusion source moins la composante alpha (par défaut, <tt>bm_src_alpha</tt> (As, As, As)).</li>
    <li>1] = Mode de fusion de destination moins la composante alpha (la valeur par défaut est <tt>bm_inv_src_alpha</tt> (1-As, 1-As, 1-As)).</li>
    <li>2] = Composante alpha de la source (la valeur par défaut est <tt>bm_src_alpha</tt> (As))</li>
    <li>3] = Composante alpha de destination (la valeur par défaut est <tt>bm_inv_src_alpha</tt> (1-As))</li>
  </ul>
  <p>Pour vous aider à tirer le meilleur parti des modes de fusion et à comprendre comment ils fonctionnent et comment ils affectent l'image finale dessinée à l'écran, nous vous recommandons de lire le guide suivant :</p>
  <ul class="colour">
    <li><a href="../../../../Additional_Information/Guide_To_Using_Blendmodes.htm">Guide d'utilisation des Blendmodes</a></li>
  </ul>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">gpu_set_blendmode(src, dest, alphasrc, alphadest) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>src</td>
        <td>Facteur du mode de fusion source pour RGB (voir les constantes ci-dessus).</td>
      </tr>
      <tr>
        <td>dest</td>
        <td>Facteur du mode de fusion de destination pour RGB (voir les constantes ci-dessus)</td>
      </tr>
      <tr>
        <td>alphasrc</td>
        <td>Facteur du mode de fusion source Alpha (voir les constantes ci-dessus).</td>
      </tr>
      <tr>
        <td>alphadest</td>
        <td>Facteur du mode de fusion de destination Alpha (voir les constantes ci-dessus)</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">var bm = gpu_get_blendmode_ext_sepalpha() ;<br> bm[0] = bm_src_alpha ;<br> bm[1] = bm_inv_src_alpha ;<br> gpu_set_blendmode_ext_sepalpha(bm) ;
  </p>
  <p>Le code ci-dessus crée un tableau local et obtient le mode de fusion étendu actuel avec des valeurs alpha séparées. Ce tableau est ensuite manipulé et retourné pour définir le mode de fusion.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="GPU_Control.htm">Contrôle du GPU</a></div>
        <div style="float:right">Suivant : <a href="gpu_set_colourwriteenable.htm">gpu_set_colourwriteenable</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
gpu_set_blendmode_ext_sepalpha
bm_zero
bm_one
bm_src_colour
bm_inv_src_colour
bm_src_alpha
bm_inv_src_alpha
bm_dest_alpha
bm_inv_dest_alpha
bm_dest_colour
bm_inv_dest_colour
bm_src_alpha_sat
-->
  <!-- TAGS
gpu_set_blendmode_ext_sepalpha
-->
</body>
</html>