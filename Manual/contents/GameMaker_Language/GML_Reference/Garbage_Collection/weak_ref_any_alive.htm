<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>weak_ref_any_alive</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for weak_ref_any_alive" />
  <meta name="rh-index-keywords" content="weak_ref_any_alive" />
  <meta name="search-keywords" content="weak_ref_any_alive" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>weak_ref_create</h1>
  <p>Avec cette fonction, vous pouvez vérifier la <a class="glossterm" data-glossterm="faible référence" href="#">référence faible</a> de diverses structures pour voir si elles sont toujours &quot;vivantes&quot; ou non. Vous fournissez un tableau de références faibles à vérifier (chaque référence faible doit avoir été créée en utilisant la fonction).
    doit avoir été créée à l'aide de la fonction <a href="weak_ref_create.htm"><span class="inline">weak_ref_create()</span></a>), et la fonction retournera <span class="inline">true</span> si <em><strong>n'importe quel </strong></em>des structs sont encore
    encore référencées quelque part ou <span class="inline">false</span> si elles ne le sont pas et ont été collectées. Notez que si vous fournissez un tableau dont l'une des valeurs n'est pas une référence faible, la fonction retournera <span class="inline">undefined</span>.</p>
  <p>Notez que la fonction prend également deux arguments facultatifs, le premier vous permettant de fournir un index initial dans le tableau à vérifier, ainsi qu'un argument pour définir le nombre de positions (longueur) à vérifier à partir de cet index. Seuls les indices du tableau
    compris dans ces paramètres seront vérifiés.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">weak_ref_any_alive(weak_ref, [index], [length]) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>faible_réf</td>
        <td>La référence faible de la structure que vous voulez vérifier.</td>
      </tr>
      <tr>
        <td>[index]</td>
        <td>FACULTATIF ! L'index dans le tableau pour commencer la vérification</td>
      </tr>
      <tr>
        <td>[longueur]</td>
        <td>FACULTATIF ! Le nombre de positions à vérifier à partir de l'index donné.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Booléen (ou indéfini)</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">if weak_ref_any_alive(inventory_ref_array)<br> {<br> instance_destroy(obj_Inventory_Control) ;<br> }</p>
  <p>Le code ci-dessus vérifie un tableau de références faibles et si l'une d'entre elles est encore vivante, une instance est détruite.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Garbage_Collection.htm">Collecte des ordures</a></div>
        <div style="float:right">Suivant : <a href="gc_collect.htm">gc_collect</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
weak_ref_any_alive
-->
  <!-- TAGS
weak_ref_any_alive
-->

</body></html>