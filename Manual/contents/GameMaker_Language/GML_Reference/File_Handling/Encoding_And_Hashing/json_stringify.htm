<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>json_stringify</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page de référence pour json_stringify" />
  <meta name="rh-index-keywords" content="json_stringify" />
  <meta name="search-keywords" content="json_stringify" />
</head>
<body><!--<div class="body-scroll" style="top: 150px;">--><h1>json_stringify</h1><p> Avec cette fonction, vous pouvez convertir des structures et des tableaux uniques ou imbriqués en une chaîne JSON valide. Vous fournissez la valeur initiale à utiliser (un index de tableau ou une référence de structure), puis la fonction la «stringifie», la convertit en une chaîne JSON, convertit les <span class="notranslate">GameMaker</span> tableaux JSON et les <span class="notranslate">GameMaker</span> en objets JSON.</p><p> Lors de l&#39;utilisation de cette fonction, il y a quelques points importants à noter:</p><ul class="colour"><li> La fonction <em>ne convertira pas les</em> cartes DS, les listes ou toute autre structure de données en JSON, et stockera simplement la valeur d&#39;index interne de la structure (qui est de peu d&#39;utilité car l&#39;index changera entre les exécutions du jeu), et en tant que tel vous ne doit pas essayer de stringifier une valeur qui peut contenir des références à des structures de données (pour cela, vous avez<a href="json_encode.htm"><span class="inline">json_encode()</span></a> ).</li><li> La fonction convertit à peu près n&#39;importe quelle valeur en une chaîne JSON &quot;valide&quot;, mais les valeurs réelles contenues dans la chaîne peuvent ne pas être exactement ce que vous attendez en raison de la façon dont le standard JSON fonctionne:<br/><br/> &quot;JSON est indépendant des nombres. Dans n&#39;importe quel langage de programmation, il peut y avoir une variété de types de nombres de capacités et de compléments variés, fixes ou flottants, binaires ou décimaux. Cela peut rendre difficile l&#39;échange entre différents langages de programmation. JSON n&#39;offre plutôt que la représentation de nombres que les humains utilisent: une séquence de chiffres. Tous les langages de programmation savent comment donner un sens aux séquences de chiffres même s&#39;ils ne sont pas d&#39;accord sur les représentations internes. &quot;<br/><br/> Pour plus d&#39;informations, consultez la <a href="http://www.ecma-international.org/publications/standards/Ecma-404.htm">norme ECMA JSON</a>.</li><li> Si vous incluez un int64 dans les valeurs à convertir en JSON, il l&#39;écrira comme un <i>int</i> s&#39;il est dans la plage valide pour un int32, comme un <i>double</i> s&#39;il peut le faire sans perdre de précision ou (si aucun de ces cas n&#39;est applicable ) sous forme de <i>chaîne</i> avec un identifiant &quot;<tt>@i64@</tt> &quot;avant et &quot;<tt>$i64$</tt> &quot;après. Lorsque vous reviendrez analyser le JSON, <span class="notranslate">GameMaker Studio 2</span> récupérera ces identifiants et reconvertira la valeur en un int64. Cela signifie que si le JSON est destiné à un serveur ou à une autre cible <span class="notranslate">GameMaker</span>, ces valeurs ne seront pas appropriées et doivent donc être évitées.</li><li> Si vous incluez <span class="inline">infinity</span>, <span class="inline">-infinity</span> ou <span class="inline">NaN</span> dans les valeurs à convertir en JSON, elles seront encodées sous forme de chaînes car ces valeurs ne font pas partie du standard JSON, et lors de l&#39;analyse du JSON résultant, elles <strong>ne</strong> seront pas reconverties dans leurs <span class="notranslate">runtime</span> et resteront sous forme de chaînes. Notez que <span class="inline">NaN</span> sera converti en &quot;nan&quot; (minuscule) lors de la stringification.</li><li> Des précautions doivent être prises lors de l&#39;écriture de toute chaîne JSON retournée dans un <span class="inline">ini</span> fichier, comme le <span class="inline">ini</span> les spécifications peuvent entraîner des problèmes lors de l&#39;utilisation de guillemets et de caractères d&#39;échappement. Voir la fonction <a href="../Ini_Files/ini_write_string.htm"><tt>ini_write_string()</tt></a> pour plus d&#39;informations.</li></ul><p></p><p></p><p></p><h4> Syntaxe:</h4><p class="code"><code>json_stringify</code>(val)</p><table><tbody><tr><th> Argument</th><th> Description</th></tr><tr><td> <span class="notranslate">val</span></td><td> La valeur de référence pour une structure ou un tableau à convertir en chaîne JSON</td></tr></tbody></table><p></p><h4> Retour:</h4><p class="code">string</p><p></p><h4> Exemple:</h4><p class="code">var _contents = {<br/>     version : &quot;1&quot;,<br/>     data: {<br/>         webSocket : 1,<br/>         ipv4Address : &quot;95.39.220.218&quot;,<br/>         ipv6Address : &quot;0000:0000:0000:0000:0000:ffff:5f27:dcda&quot;,<br/>         header
    : &quot;You are receiving a packet&quot;,<br/>         body : &quot;This packet is empty and only for testing&quot;,<br/>     },    <br/> };
    <br/> packet = json_stringify(map);</p><p> Le code ci-dessus convertira la structure &quot;_contents&quot; en une chaîne JSON et stockera la chaîne dans une variable. La chaîne réelle serait comme ceci: </p><p class="code">{ &quot;version&quot;: &quot;1&quot;, &quot;myObj&quot;: { &quot;header&quot;: &quot;You are receiving a packet&quot;, &quot;webSocket&quot;: 1, &quot;body&quot;: &quot;A packet of cheese and onion crisps&quot;, &quot;ipv4Address&quot;: &quot;95.39.220.218&quot;,
    &quot;ipv6Address&quot;: &quot;0000:0000:0000:0000:0000:ffff:5f27:dcda&quot; } }</p><p></p><p></p><p></p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left"> Retour: <a href="Encoding_And_Hashing.htm">Encodage de fichiers</a></div><div style="float:right"> Suivant:<a href="json_parse.htm">json_parse</a></div></div></div><h5> <span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
json_stringify
-->
  <!-- TAGS
json_stringify
-->
</body>
</html>