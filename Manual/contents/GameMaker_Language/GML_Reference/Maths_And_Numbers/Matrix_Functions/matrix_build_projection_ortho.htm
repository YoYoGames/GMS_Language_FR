<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>matrice_construction_projection_ortho</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for matrix_build_projection_ortho" />
  <meta name="rh-index-keywords" content="matrix_build_projection_ortho" />
  <meta name="search-keywords" content="matrix_build_projection_ortho" />
</head>

<body>




  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>matrice_construction_projection_ortho</h1>
  <p>Cette fonction construit une matrice de projection orthographique en fonction des paramètres spécifiés ci-dessous (il s'agit de la méthode de projection par défaut utilisée lorsque vous créez une pièce dans <span class="notranslate">GameMaker Studio 2</span> sans rien changer). Vous avez parfois besoin de passer
    d'une projection en perspective à une projection orthographique, ce à quoi sert cette fonction. Elle est généralement utilisée pour dessiner une superposition, par exemple pour montrer le score ou d'autres aspects, car elle donne une vue &quot;plate&quot; des éléments dessinés (c'est-à-dire sans perspective) dans un jeu 3D :
    pas de perspective) dans un jeu en 3D. Voir l'image ci-dessous pour avoir une idée de la différence entre les vues orthographiques et les vues en perspective.</p>
  <p class="note"><b>REMARQUE</b>: vous devrez peut-être aussi désactiver temporairement la suppression des surfaces cachées si vous souhaitez que les informations soient dessinées quelle que soit la valeur de la profondeur actuelle.</p>
  <p><img alt="Ortho prjection matrix  example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Maths/ortho_persp_image.png" /></p>
  <h4>Syntaxe :</h4>
  <p class="code">matrix_build_projection_ortho(width, height, znear, zfar) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>w</td>
        <td>La largeur de la projection.</td>
      </tr>
      <tr>
        <td>h</td>
        <td>La hauteur de la projection.</td>
      </tr>
      <tr>
        <td>znear</td>
        <td>Le plan d'écrêtage proche.</td>
      </tr>
      <tr>
        <td>zfar</td>
        <td>Le plan d'écrêtage lointain.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Indice matriciel</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">viewmat = matrix_build_lookat(640, 240, -10, 640, 240, 0, 0, 1, 0) ;<br> projmat = matrix_build_projection_ortho(640, 480, 1.0, 32000.0) ;<br> camera_set_view_mat(view_camera[0], viewmat) ;<br> camera_set_proj_mat(view_camera[0], projmat) ;</p>
  <p>Le code ci-dessus crée une nouvelle matrice d'observation et une matrice orthographique, stocke leurs ID dans des variables locales, puis les utilise pour définir les matrices de vue et de projection pour la caméra affectée au port de vue [0].</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Matrix_Functions.htm">Fonctions de la matrice</a></div>
        <div style="float:right">Suivant : <a href="matrix_build_projection_perspective.htm">matrix_build_projection_perspective</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
matrix_build_projection_ortho
-->
  <!-- TAGS
matrix_build_projection_ortho
-->

</body></html>