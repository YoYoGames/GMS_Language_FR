<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>dot_product_normalised</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for dot_product_normalised" />
  <meta name="rh-index-keywords" content="dot_product_normalised,dot_product_normalized" />
  <meta name="search-keywords" content="dot_product_normalised,dot_product_normalized" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>dot_product_normalised</h1>
  <p>Le produit scalaire est une valeur exprimant la relation angulaire entre deux vecteurs. On le trouve en prenant deux vecteurs, en les multipliant et en additionnant les résultats. Le nom &quot;produit scalaire&quot; est dérivé du point centré &quot;-&quot; qui est souvent utilisé pour désigner cette opération.
    centré qui est souvent utilisé pour désigner cette opération (l'appellation alternative &quot;produit scalaire&quot; souligne la nature scalaire plutôt que vectorielle du résultat).</p>
  <p>La formule mathématique réelle peut être écrite comme suit :</p>
  <p><img alt="Dot Product formula" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Maths/dot_product_image.png">Donc, en 2D, le produit scalaire des vecteurs <span class="inline">a[x1,y1]</span> et <span class="inline">b[x2,2]</span> est <span class="inline">x1x2 + y1y2</span>, ce qui signifie que le produit scalaire dans <span class="notranslate">GameMaker Studio 2</span> est calculé comme suit :</p>
  <p class="code">a - b = (x1*x2)+(y1*y2) ;</p>
  <p>Qu'en est-il du produit scalaire <i>normalisé</i>? Le produit scalaire normalisé a été corrigé de manière à ce que la valeur de retour se situe entre -1 et 1 (voir la section sur les <a href="../../../../Additional_Information/Vectors.htm">vecteurs</a> pour des informations plus détaillées), ce qui est exceptionnellement utile dans de nombreuses circonstances, notamment lorsqu'il s'agit d'éclairage et d'autres fonctions 3D.</p>
  <p> </p>
  <h4><b>Syntaxe :</b></h4>
  <p class="code">dot_product_normalised(x1, y1, x2, y2)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>x1</td>
        <td>La coordonnée x du premier vecteur.</td>
      </tr>
      <tr>
        <td>y1</td>
        <td>La coordonnée y du premier vecteur.</td>
      </tr>
      <tr>
        <td>x2</td>
        <td>La coordonnée x du deuxième vecteur.</td>
      </tr>
      <tr>
        <td>y2</td>
        <td>La coordonnée y du deuxième vecteur.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">var x1, y1, x2, y2 ;<br> x1 = lengthdir_x(1, image_angle) ;<br> y1 = lengthdir_y(1, image_angle) ;<br> x2 = o_Player.x - x ;<br> y2 = o_Player.y - y ;<br> if dot_product_normalised(x1, y1, x2, y2) &gt; 0 seen=true else seen=false ;</p>
  <p>Le code ci-dessus crée un vecteur en utilisant l'angle de l'image de l'instance, puis il obtient le vecteur de l'objet joueur &quot;o_Player&quot; à lui-même. Enfin, il calcule le produit scalaire de ces deux vecteurs et s'il est supérieur à 0, il met la variable "seen" à true.
    &quot;seen&quot; à true, et si elle est égale ou inférieure à 0, elle la met à &quot;false&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Angles_And_Distance.htm">Angles et distances</a></div>
        <div style="float:right">Suivant : <a href="dot_product_3d_normalised.htm">dot_product_3d_normalised</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
dot_product_normalised
dot_product_normalized
-->
  <!-- TAGS
dot_product_normalised
-->
</body>
</html>