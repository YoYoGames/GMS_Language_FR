
  
  Outils externes de fusion/diffusion
  Lorsque vous travaillez sur un projet avec d'autres personnes, il y a toujours une chance qu'il y ait un conflit, car plusieurs personnes éditent le même fichier et la plupart des systèmes de contrôle de source peuvent faire une bonne tentative de fusionner les fichiers en conflit, mais quand il y a des changements au même endroit, il faut un peu d'aide pour savoir quoi faire.
    au même endroit, il faut un peu d'aide pour savoir quoi faire - c'est là qu'intervient un outil de fusion qui vous montre les changements et vous laisse décider.
  Comme chaque outil de fusion est différent, il existe quatre macros qui peuvent être utilisées pour aider à lui spécifier des fichiers. Ces macros peuvent être configurées à partir de la fenêtre Conflits en cliquant sur le bouton intitulé Choose Merge Tool:
  
  Lorsque vous cliquez sur ce bouton, la fenêtre des préférences s'ouvre sur le plugin Git:
  Vous fournissez ici un chemin d'accès à l'outil de fusion choisi, puis une (ou plusieurs) macro(s) Options de l'outil de fusion à utiliser pour décider de ce qu'il faut faire.
    ce qu'il faut faire, avec les options suivantes disponibles :
  
    ${scm_mine}: chemin vers votre version
    ${scm_thers}: chemin vers leur version
    ${scm_base}: chemin d'accès à la version avant les changements conflictuels
    ${scm_merged}: chemin vers l'endroit où l'outil de fusion doit être sauvegardé
  
  Pour vous aider à vous installer, lorsque vous indiquez un chemin d'accès à certains outils de fusion, GameMaker Studio 2 remplit quelques valeurs par défaut pour commencer, en fonction de l'outil choisi :
  
    KDiff3: ${scm_theirs} ${scm_mine} -o ${scm_merged}
    Meld: ${scm_mine} ${scm_merged} ${scm_theirs}
    Notepadd++: ${scm_merged}
    TortoiseMerge: /base:${scm_base} /theirs:${scm_theirs} /mine:${scm_mine} /merged:${scm_merged}
  
  Notez que si vous n'avez pas (ou ne voulez pas utiliser) d'outil de fusion, vous pouvez ouvrir le script dans l'IDE et tenter de le corriger à partir de là.
  Donc, revenons à notre exemple de conflit comme indiqué dans la section sur les conflits... Nous avons fait un pull depuis master et l'un des fichiers est en conflit. Cela ouvre la fenêtre Conflits de contrôle de source, où vous pouvez
    cliquer sur le script en conflit, et maintenant cliquer sur Fusionner, puisque vous avez configuré votre outil de fusion. En cliquant sur Fusionner, vous ouvrez l'outil où vous pouvez traiter le conflit et utiliser la ou les macros fournies pour effectuer les modifications requises.
    modifications requises. Une fois que vous avez terminé et fermé l'outil de fusion, l'IDE GameMaker Studio 2 affiche la fenêtre de confirmation suivante :
  Répondez simplement "Oui" à cette demande car vous venez de le faire vous-même à l'aide de l'outil de fusion, et vous devez ensuite valider ce changement pour signifier la fin de l'opération de fusion (Source Control > Commit Changes).
    pour signifier la fin de l'opération de fusion(Source Control > Commit Changes). La fenêtre Commit indique maintenant qu'une fusion est en cours et présente des fichiers non indexés :
  Ces fichiers non organisés sont notre fichier de script avec l'ajout de .base, .ours et .theirs. Nous pouvons les supprimer en toute sécurité, donc cliquez sur  sur le fichier du haut, puis sur  +  sur le fichier du bas pour les sélectionner tous.
    pour les sélectionner tous. Ensuite, nous faisons un clic droit sur les fichiers sélectionnés et choisissons Supprimer le chemin pour les supprimer. Il y a également un message de livraison pré-rempli pour nous, indiquant qu'il s'agissait d'une fusion et qu'il y avait un conflit (nous pouvons ajouter ou modifier ce message à notre guise).
    ou le modifier comme nous le souhaitons).
  Nous pouvons cliquer sur Commit maintenant.
  Étant donné que vous pouvez avoir des problèmes avec d'autres fichiers, cela signifie que votre flux de travail lorsque vous utilisez des dépôts distants ou partagés doit être le suivant :
  Faire des changements > Sauvegarder > Commit > Pull > Merge > Push
  Vous devriez également configurer un outil de différence pour l'utiliser lorsque vous faites des commits à un référentiel. Cet outil est configuré dans les préférences, comme pour l'outil de fusion :
  L'outil Diff est configuré de la même manière que l'outil Fusion, mais n'utilise que les options ${scm_base} et
    ${scm_theirs} - dans ce cas, ${scm_base} représente le fichier non modifié tandis que ${scm_theirs} représente l'état actuel du fichier. Les options de l'outil doivent
    être pré-remplies avec les options par défaut pour Meld, KDiff3 et TortoiseMerge, tout comme elles l'étaient pour l'outil Fusion. Notez que GameMaker Studio 2 ne prend pas en charge la sortie de patchs de différences de fichiers uniques.
    fichier unique, il n'y a donc pas d'option par défaut pour Notepad++.
  Pour visualiser les changements entre la révision actuelle et les révisions précédentes à l'aide de l'outil Diff, il suffit d'ouvrir la fenêtre Commit et de double-cliquer sur un fichier. Si l'outil a été configuré correctement, il sera lancé et vous serez en mesure de voir les changements
    entre les fichiers.
   
   
   
  
    
      
        Retour : Contrôle de la source
        Suivant : Configuration du plugin GIT
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

