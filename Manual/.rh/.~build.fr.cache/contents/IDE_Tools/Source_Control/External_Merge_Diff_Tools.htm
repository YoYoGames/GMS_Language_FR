 Outils externes de fusion / comparaison Lorsque vous travaillez sur un projet avec d'autres personnes, il y a toujours un risque de conflit, car plusieurs personnes éditent le même fichier et la plupart des systèmes de contrôle de source peuvent faire une bonne tentative de fusionner les fichiers en conflit, mais lorsqu'il y a des changements dans le même endroit, il faut un peu d'aide pour savoir quoi faire - c'est là qu'un outil de fusion entre en jeu pour vous montrer les changements et vous laisser décider. Comme chaque outil de fusion est différent, il existe quatre macros qui peuvent être utilisées pour aider à spécifier des fichiers qui peuvent être configurés à partir de la fenêtre Conflits en cliquant sur le bouton intitulé Choisir l'outil de fusion: Lorsque vous cliquez sur ce bouton, la fenêtre Préférences s'ouvre sur le plugin Git Ici, vous fournissez un chemin vers l'outil de fusion choisi, puis une macro (ou des macros) d'options de l'outil de fusion à utiliser pour décider quoi faire, avec les options suivantes disponibles:${scm_mine}: chemin vers votre version${scm_thers}: chemin vers leur version${scm_base}: chemin d'accès à la version avant les modifications en conflit${scm_merged}: chemin vers l'emplacement où l'outil de fusion doit enregistrer Pour aider à la configuration, lorsque vous donnez un chemin à certains outils de fusion, GameMaker Studio 2 remplira certaines valeurs par défaut pour commencer, en fonction de l'outil choisi: KDiff3: ${scm_theirs} ${scm_mine} -o ${scm_merged} Fondre: ${scm_mine} ${scm_merged} ${scm_theirs} Notepadd ++: ${scm_merged} TortueMerge: /base:${scm_base} /theirs:${scm_theirs} /mine:${scm_mine} /merged:${scm_merged} Notez que si vous ne disposez pas (ou ne souhaitez pas utiliser) d'outil de fusion, vous pouvez ouvrir le script dans l'EDI et tenter de le réparer à partir de là. Donc, revenons à notre exemple Conflict comme indiqué dans la section sur les conflits... Nous avons fait une extraction de master et l'un des fichiers est en conflit. Cela ouvre la fenêtre Conflits de contrôle de source, où vous pouvez cliquer sur le script en conflit, puis cliquez sur Fusionner, puisque vous avez configuré votre outil de fusion. Cliquez sur fusionner pour ouvrir l'outil dans lequel vous pouvez gérer le conflit, puis utiliser la ou les macro (s) fournies pour apporter les modifications requises. Une fois que vous avez terminé et fermé l'outil de fusion, l' GameMaker Studio 2 affichera la fenêtre de confirmation suivante: Répondez simplement «Oui» à cette invite comme vous venez de le faire vous-même en utilisant l'outil de fusion, puis vous devez valider cette modification pour signifier la fin de l'opération de fusion ( Contrôle de la source > Valider les modifications ). La fenêtre de validation montrera maintenant qu'une fusion est en cours ainsi que certains fichiers non mis en scène: Ces fichiers non créés sont notre fichier de script avec l'ajout de .base, .ours et .theirs. Nous pouvons supprimer tous ces éléments en toute sécurité, alors cliquez sur sur celui du haut et ensuite + en bas pour les sélectionner tous. Ensuite, nous faisons un clic droit sur les fichiers sélectionnés et choisissons Supprimer le chemin pour les supprimer. Il y a aussi un message de validation pré-rempli pour nous également, indiquant qu'il s'agissait d'une fusion et qu'il y avait un conflit (nous pouvons l'ajouter ou le modifier comme nous le souhaitons). Nous pouvons cliquer sur Commit now. En raison du fait que vous pouvez avoir des problèmes avec d'autres fichiers, cela signifie que votre flux de travail lorsque vous utilisez des référentiels distants ou partagés doit être le suivant:Make Changes > Save > Commit > Pull > Merge > Push Vous devez également configurer un outil de différence à utiliser lorsque vous effectuez des validations dans un référentiel. Ceci est configuré à partir des préférences, comme pour l'outil de fusion: L'outil Diff est configuré à peu près de la même manière que l'outil Merge, mais utilise uniquement le ${scm_base} et ${scm_theirs} options - dans ce cas, ${scm_base} représente le fichier non modifié alors que ${scm_theirs} représente l'état actuel du fichier. Les options de l'outil doivent être préremplies avec les options par défaut pour Meld, KDiff3 et TortoiseMerge, tout comme elles l'étaient pour l'outil de fusion. Notez que GameMaker Studio 2 ne prend pas en charge la sortie de correctifs de différence de fichier unique, il n'y a donc pas de valeur par défaut pour Notepad ++. Afin de visualiser les changements entre les révisions actuelles et précédentes à l'aide de l'outil Diff, ouvrez simplement la fenêtre de validation, puis double-cliquez sur un fichier. Si l'outil a été correctement configuré, il sera lancé et vous pourrez voir les changements entre les fichiers.  Retour: Contrôle de la source Suivant: Configurer le plugin GIT © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

