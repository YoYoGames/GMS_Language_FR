
  
  Flux de travail standard
  Au fur et à mesure que vous travaillez sur votre projet, vous allez naturellement créer des sprites, modifier des scripts, supprimer des lignes de temps et tout ce qui est nécessaire au fur et à mesure que votre projet se développe. Ce sont toutes des actions dont vous voudrez peut-être garder la trace et retrouver si quelque chose
    quelque chose ne va pas. C'est la principale raison d'utiliser le contrôle de source - afin de pouvoir revenir en arrière en cas d'accident - et nous allons rapidement vous faire découvrir le flux de travail de base dès le début afin que vous compreniez comment cela fonctionne.
  En commençant par le début, créez un nouveau projet GML, puis activez le contrôle de la source par le biais des options principales. Cela nous donne accès au menu Contrôle de la source en haut, nous allons donc immédiatement aller et
    sélectionner Créer un référentiel de projet. Si vous regardez les ressources de la pièce, vous pouvez voir que la pièce par défaut a gagné une exclamation rouge , ce qui signifie que
    qu'elle a été modifiée par rapport à son dernier état. Si nous avions d'autres ressources dans le projet, vous verriez qu'elles ont toutes la même icône comme le montre l'image ci-dessous :
  Nous avons maintenant la possibilité de valider le projet vierge tel qu'il est, ou de le mettre dans un état de base. Pour l'instant, nous allons faire notre premier
    donc cliquez sur Source Control > Commit Changes. Une nouvelle fenêtre s'ouvre alors, divisée en trois zones :
  
  
    Changements échelonnés: Ceci représente les changements qui seront livrés à la source. Ce sera probablement vide, mais il peut montrer un changement des options principales, ce qui est bien.
    Unstaged Changes: Ceci montre les fichiers qui ont été modifiés, mais que nous n'avons pas indiqué à Git que nous voulions les livrer - ce sont des changements "en attente".
    Commit Message: Il s'agit d'une note que nous pouvons ajouter pour expliquer ce que sont les changements.
  
  Pour l'instant, cliquez sur le bouton Stage All, car nous voulons valider toutes les modifications, et tapez quelque chose comme "First Commit !" dans le Commit Message et cliquez sur Commit. Toutes nos ressources devraient maintenant avoir une coche verte, ce qui signifie qu'aucune modification n'a été trouvée.
  Il est intéressant de noter que lorsque vous travaillez dans cette fenêtre, les différents messages Staged et Unstaged seront préfixés par un symbole. Le symbole utilisé varie en fonction de l'opération et du fichier.
    est utilisé :
  
    [...] - Staged Change (précédemment [A])
    [+] - Nouvellement ajouté
    [->] - Renommé/Déplacé
    [-] - Supprimé
    [M] - Changements non-stagés
    [?] - Fichier non suivi
    [!] - Fichier manquant
  
  Notre processus de travail peut maintenant commencer, et nous pouvons commencer à construire notre projet et à enregistrer et valider les modifications, comme nous l'avons fait dans les paragraphes précédents.
  Après avoir travaillé pendant un certain temps, vous pouvez vouloir vérifier et voir ce que vous avez commis à un moment donné, et donc pour cela vous voudrez ouvrir l'historique de commit . Pour ouvrir la fenêtre de l'historique, il suffit d'aller dans Source Control > View History qui ouvre une autre fenêtre avec trois volets :
  Le panneau supérieur décrit les commits, le panneau central décrit le commentaire donné au commit sélectionné, et le panneau inférieur décrit les fichiers qui ont été modifiés dans ce commit.
    les fichiers qui ont été modifiés dans cette livraison. Notez que si vous avez mis en place un outil de comparaison, alors un double-clic sur n'importe quel fichier dans cette fenêtre ouvrira l'outil de comparaison et vous serez en mesure de voir les changements
    entre les fichiers.
   
   
   
  
    
      
        Retour : Contrôle de la source
        Suivant : Annulation de fichiers 
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

