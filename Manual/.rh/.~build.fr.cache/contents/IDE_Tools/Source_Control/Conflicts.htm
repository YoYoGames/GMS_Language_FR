
  
  Conflits
  Dans cette section, nous allons voir comment résoudre les conflits entre un référentiel local cloné et un référentiel maître. En supposant que vous utilisez maintenant un référentiel local, nous allons devoir éditer un fichier et causer une sorte de conflit.
    une sorte de conflit, donc ouvrez le script de test que nous avons utilisé et changez le message "Hello World" en quelque chose comme ceci :
  show_debug_message("Hello World, How Are You ?") ;
  Vous devez maintenant sauvegarder le projet et le commiter sur le dépôt local. Maintenant, puisque nous sommes liés à un dépôt maître distant (même s'il s'agit d'un dépôt que nous avons cloné sur le même disque), nous devons faire un Push pour transférer les changements sur le dépôt maître. Pour cela, allez
    à Source Control > Push Changes, ce qui nous donnera une mise à jour du statut dans l'onglet Source Control Output :
  Nous devons maintenant ouvrir notre projet d'origine (et non le projet cloné). Pour cela, allez à l'endroit où vous l'avez enregistré sur le disque (ou vérifiez simplement les Projets récents dans le menu Fichier, car il doit se trouver directement sous le projet actuel) et chargez-le dans GameMaker Studio 2. Une façon simple de vérifier que vous avez le bon projet est de vérifier le script que vous avez
    et si le message est "Hello World", vous avez le bon projet. Vous pouvez également ouvrir la fenêtre View History et vérifier de cette façon.
  Vous devez maintenant modifier le script à nouveau, pour qu'il se lise comme ceci :
  show_debug_message("Ceci causera un conflit.") ;
  Il est possible de l'enregistrer sur le disque et de valider les modifications, mais si vous essayez de pousser ces modifications, vous obtiendrez le message suivant :
  Quelqu'un a déjà poussé des changements que vous n'avez pas encore ! Cela signifie que vous devez faire un pull
    sur le dépôt et voir quel est exactement le problème, donc allez dans Source Control > Pull Changes. Cela affichera deux fenêtres, la première est un avertissement sur les fichiers modifiés (comme pour les actions précédentes, vous devez choisir
   Reload here et non Save), et l'autre est la fenêtre Conflits :
  Cette fenêtre affichera les fichiers en conflit dans une liste à gauche, et vous pouvez sélectionner les fichiers de cette liste en utilisant le bouton gauche de la souris.
     (ou sélectionner plusieurs fichiers en utilisant  /  ou  et ). Vous avez quatre options pour traiter les fichiers en conflit, disponibles à partir des boutons sur la droite :
  
    Utiliser les leurs - Cela écrasera les changements que vous avez effectués avec ceux du référentiel distant.
    Use Mine - Ceci remplacera les changements du dépôt distant par ceux que vous venez d'effectuer.
    Fusionner - Ceci tentera d'ouvrir un outil de fusion externe pour traiter le conflit.
    Choisissez l'outil de fusion - Cela vous permettra de configurer l'outil de fusion (voir la section sur les outils de fusion/diffusion externes pour plus de détails).
  
  Maintenant, vous pouvez utiliser les boutons pour résoudre le conflit, mais avant de le faire, ouvrons le fichier en conflit pour voir exactement quel est le problème. Si vous ouvrez le script qui est en conflit, il ressemblera à ceci :
  Cela montre que "This Will Cause A Conflict" est sur le HEAD (c'est ce que nous avons poussé vers le dépôt local) et que
    "Hello World, How Are You ?" est tiré de master, le dépôt distant. Vous pouvez maintenant retourner à la fenêtre des conflits et cliquer sur Use Theirs pour extraire le fichier modifié et écraser le fichier HEAD actuel. Le script
    sera maintenant marqué comme modifié et vous devriez faire un nouveau commit et pousser avant de continuer.
  Notez que nous pouvons résoudre ce problème dans l'IDE GameMaker Studio 2. Si nous supprimons les lignes 1, 2, 3 et 5 pour qu'il ne nous reste que show_debug_message("Hello World, How Are You?") et que nous l'enregistrions, le conflit sera résolu,
    car Git suppose que vous savez ce que vous faites avec votre propre fichier. Cependant, cette méthode est sujette aux erreurs, il est donc recommandé d'installer un outil de fusion, puis de le configurer et de l'utiliser au lieu d'essayer de fusionner manuellement.
   
   
   
  
    
      
        Retour : Contrôle de la source
        Suivant : Outils externes de fusion/diffusion
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

