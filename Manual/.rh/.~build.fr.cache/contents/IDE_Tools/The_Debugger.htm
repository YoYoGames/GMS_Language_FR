 Le débogueur Le débogueur est un outil puissant pour vérifier votre jeu, et est particulièrement utile pour traquer les erreurs et les bogues dans votre code, ainsi que pour vérifier que les scripts sont exécutés quand ils devraient l'être, et que les variables et les tableaux contiennent les valeurs que vous attendez, etc... Vous pouvez démarrer le débogueur en exécutant votre jeu à partir de l' IDE GameMaker Studio 2 à l'aide du bouton Déboguer en haut de l'EDI, ou en allant dans le menu Générer et en sélectionnant " Déboguer ". REMARQUE Windows (ou tout autre programme de pare-feu que vous exécutez) peut vous demander de créer une exception de sécurité pour ce module. Vous devez le faire sinon cela ne fonctionnera pas correctement. Cela est dû au fonctionnement du débogueur et est essentiel pour le débogage des plates-formes mobiles. Lorsque vous exécutez un jeu en mode débogage, l'EDI affiche les différents outils disponibles pour le débogueur: L'image ci-dessus montre la disposition par défaut du débogueur, mais comme pour d'autres aspects de l'EDI, vous pouvez la personnaliser en fonction de vos besoins, en fermant les fenêtres dont vous n'avez pas besoin ou en modifiant la taille des documents et des fenêtres dont vous avez besoin. Vous pouvez réinitialiser la disposition du débogueur à tout moment - ou rouvrir les fenêtres fermées - à partir du menu contextuel du débogueur en haut de l'EDI: Ci-dessous, nous expliquons à quoi sert chaque section du débogueur: Vue graphique La vue Graphique vous montre un affichage graphique de la façon dont votre projet utilise la mémoire et sa fréquence d'images dans le temps: Le graphique montre l'utilisation de la mémoire actuelle et moyenne ainsi que le FPS actuel et moyen au fil du temps, et vous pouvez effectuer un zoom avant ou arrière à l'aide du / avec la molette de la souris, et si vous placez le curseur de la souris sur l'un des éléments du graphique, il vous montrera la valeur de cet élément au point sélectionné. La vue Graphique affichera également certains événements de débogage sous forme de points sur la longueur du graphique. Ces événements sont générés automatiquement par GameMaker Studio 2 à certains moments de l'exécution d'un jeu pour afficher des événements importants spécifiques, mais vous pouvez également ajouter vos propres éléments graphiques à l'aide des fonctionsshow_debug_message() etdebug_event(). Les événements système seront signalés dans une couleur différente de celle des événements déclenchés par le code: Lors de l'exécution du jeu en mode débogage et en passant la souris sur ces événements, une liste de tous les événements qui ont été déclenchés à ce stade du jeu s'affiche et vous avez la possibilité de retirer la liste dans une fenêtre séparée pour la révision en cliquant sur le bouton Texte " Cliquer pour ouvrir dans une nouvelle fenêtre ": Vue des ressources La vue des ressources vous montre une liste de toutes les ressources utilisées dans le projet qui peuvent contenir du code ou des DnD™. Cette section fonctionne un peu comme le navigateur de ressources et vous pouvez développer les éléments qu'il contient pour afficher plus d'informations, par exemple, les différents événements pour un objet spécifique. Vous pouvez ensuite double-cliquer sur l'une des ressources pour ouvrir le code correspondant dans la fenêtre Affichage du code, où vous pouvez vérifier les valeurs et ajouter ou supprimer des points d'arrêt. Pile d'appels Cette fenêtre affichera la pile d'événements d'appels en cours, ainsi que le numéro de ligne du code parcouru. La pile d'appels est essentiellement une structure de données «dernier entré - premier sorti» qui montre l'ordre d'exécution de tout le code du jeu à la fois à partir du GameMaker Studio 2 - puisque le débogage est effectué à l'aide de la machine virtuelle (VM) - et à partir de ce que vous ont écrit pour le jeu. Le débogueur devra avoir été mis en pause avant que toute information ne soit affichée ici. Barre d'outils La barre d'outils contient les commandes du débogueur ainsi que des informations de base telles que l'utilisation de la mémoire, le FPS actuel (réel) du jeu et un indicateur pour indiquer si le débogueur est actuellement connecté ou non (l'indicateur sera vert lorsqu'il est connecté à une instance en cours d'exécution de votre projet et rouge dans le cas contraire). Les commandes disponibles sont:  Cela redémarre le jeu une fois qu'il a été mis en pause (raccourci clavier "f5 "). Cela mettra en pause (interrompra) le jeu. Redémarre le jeu. Arrête le jeu. Entrez dans un bloc de code ou un script (raccourci clavier "f11 "). Passer au-dessus d'un bloc de code ou d'un script (raccourci clavier "f10 "). Sortez d'un bloc de code ou d'un script (raccourci clavier + "f11 "). Activez ou désactivez les mises à jour en temps réel des informations de débogage (cette option est désactivée par défaut). Les trois premiers boutons sont utilisés pour contrôler votre jeu, vous permettant de le démarrer, le mettre en pause, le redémarrer ou l' arrêter à tout moment. Lorsque le jeu est mis en pause (soit en cliquant sur le bouton Pause ou à partir d'un point d' arrêt ), vous pouvez ensuite utiliser les boutons en trois étapes pour parcourir votre code. Lorsque nous parlons de "pas à pas" dans le code, nous voulons simplement dire que vous pouvez dire à votre jeu d'exécuter la ligne de code actuelle, puis de "passer" à la suivante, ce qui vous permet de parcourir l'intégralité de votre jeu sur une ligne de code à l'adresse un moment si vous le souhaitez. Normalement, vous utiliseriez simplement le bouton Step In pour ce faire, mais vous en avez également un pour parcourir le code et un pour sortir du code. Le pas à pas est utile lorsque vous avez de gros scripts à exécuter, car en cliquant dessus, tout le script ou le bloc de code sera exécuté en une seule étape et s'arrêtera à la ligne suivante par la suite, tandis que sortir vous fera sortir d'un script (ils s'exécuteront, mais tout à la fois) et arrêtez-vous à l'étape suivante lorsque la portée change. L'icône finale pour les mises à jour en temps réel permet à la fenêtre de débogage de mettre à jour ses données en temps réel, afin que vous puissiez voir comment les variables changent ou les instances sont créées et détruites au fur et à mesure. Notez que cela peut affecter les performances des jeux et que toutes les informations ne sont pas disponibles en temps réel. Par exemple, la montre Render State (voir la section sur les montres ) ne peut pas être visualisée en temps réel. Affichage du code La vue de code est l'endroit où nous pouvons voir et examiner différents scripts ou code d'événement de notre projet au fur et à mesure de son exécution. Par défaut, cela commence vide, mais vous pouvez double-cliquer sur n'importe quel actif de la vue des ressources pour l'ouvrir ici. Vous pouvez également ouvrir plusieurs événements ou scripts différents, et ils seront ajoutés à l'espace de travail Vue de code sous forme d'onglets en haut. Alors qu'une fenêtre de code est ouverte dans la vue Code, vous pouvez cliquer avec le bouton gauche de la souris dans la gouttière (où se trouvent les numéros de ligne) pour ajouter ou supprimer des points d'arrêt (voir plus bas cette page pour plus d'informations sur les points d'arrêt). Vous pouvez également utiliser le bouton droit de la souris pour ouvrir le menu contextuel, qui vous permet également d'ajouter ou de supprimer des points d'arrêt et de copier tout code sélectionné dans le presse-papiers. Montres Cette section est dédiée à "regarder" différents aspects de votre jeu pour permettre un débogage plus approfondi et détaillé. Ceci est traité en détail sur la page suivante: Montres Il est important de noter que pendant que le jeu est en cours d'exécution, il ne met pas à jour les fenêtres de débogage avec des valeurs variables et d'autres détails par défaut, vous devez donc d'abord utiliser le bouton Pause. dans le débogueur pour mettre le jeu en pause avant que les données locales, globales et autres ne soient disponibles, ou activer la mise à jour en temps réel à partir des icônes en haut. La seule exception à cette règle est la vue Profil, qui se met à jour en temps réel lorsqu'elle est activée indépendamment du commutateur en temps réel, car elle possède son propre bouton marche / arrêt. Vous pouvez trouver des informations complètes sur cette vue à partir de la page suivante: Le profileur Un autre élément important du débogage de votre jeu est l'utilisation de points d'arrêt. Un point d'arrêt est un endroit dans le code de votre projet où vous souhaitez qu'il s'arrête afin que vous puissiez voir ce qui se passe. Avec le débogueur en cours d'exécution, vous pouvez ajouter ou supprimer des points d'arrêt à tout moment et dans n'importe quel code ou bloc de script en cliquant avec le bouton gauche de la souris dans la gouttière (où se trouvent les numéros de ligne), ou vous pouvez utiliser le bouton droit de la souris pour ouvrir le menu contextuel, qui vous permet également d'ajouter ou de supprimer des points d'arrêt: Les points d'arrêt peuvent également être définis à partir de l'IDE GameMaker Studio 2 Lors de l'écriture de votre projet, ils peuvent être ajoutés ou supprimés à tout moment en utilisant f9 (ou en utilisant le bouton droit de la souris et en sélectionnant " toggle breakpoint "), soit sur une action dans la fenêtre objet (pour les DnD™), soit sur une ligne dans une fenêtre d'éditeur de code. Désormais, lorsque vous exécutez votre jeu en mode débogage, il se mettra en pause au point (ou aux points) que vous avez défini. Les points d'arrêt définis à partir de l'EDI sont enregistrés avec votre projet et persisteront sur diverses exécutions jusqu'à ce qu'ils soient à nouveau supprimés, mais si vous ajoutez un point d'arrêt à votre code dans le débogueur, il sera perdu après la fermeture du module ou le démarrage d'un nouveau test.. Notez que tous les points d'arrêt apparaîtront dans la fenêtre de sortie où ils peuvent être activés ou désactivés ou même supprimés.  Retour: Outils IDE supplémentaires Suivant: Le micro serveur Web © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

