 Fonctions obsolètes Vous trouverez ici une liste de toutes les fonctions qui sont GameMaker Studio 2 aux anciennes versions du produit. Les fonctions répertoriées ici seront converties en scripts de compatibilité lorsque vous importerez un *.yyz fait avec une version héritée, et vous pouvez continuer à travailler sur le projet comme avant. Cependant, nous vous recommandons de réviser tous les scripts de compatibilité créés dans un projet et de vous assurer que les projets futurs utilisent les nouvelles fonctions / méthodes de travail plutôt que de dépendre de ces scripts. Arrière-plans Dans l'ancien GameMaker vous disposiez d'une ressource d'arrière-plan distincte, dans laquelle vous pouviez ajouter des images à utiliser comme arrière-plan. Dans GameMaker Studio 2 toutes les images sont considérées comme des sprites et l'utilisation que vous en faites dépendra également du calque auquel elles sont affectées dans la pièce. Cela signifie qu'il n'y a plus de ressource "d'arrière-plan", et cela signifie également que les fonctions suivantes sont obsolètes: draw_background draw_background_ext draw_background_ étiré draw_background_ stretched_ext draw_background_ partie draw_background_ part_ext draw_background_ général draw_background_ carrelé draw_background_ tiled_ext background_name background_exists background_get_ Nom draw_background draw_background_ext draw_background_ étiré draw_background_ stretched_ext background_get_ largeur background_get_ la taille background_get_ transparent background_get_ lisse background_get_ précharge background_get_uvs background_get_ texture background_set_alpha_ from_background background_create_ from_surface background_create_ Couleur background_create_ Couleur background_create_ pente background_add background_replace background_add_ alpha background_replace_ alpha background_delete background_duplicate background_assign background_save background_prefetch Contexte_ prefetch_multi background_flush background_flush_ multi room_set_background room_set_ la couleur de fond Legacy GameMaker avait également un certain nombre de variables d'arrière-plan différentes qui accédaient au tableau d'arrière-plan global. Ceux-ci ne sont plus nécessaires dans GameMaker Studio 2: Contexte_ index [0..7] Contexte_ visible [0..7] Contexte_ alpha [0..7] Contexte_ mélange [0..7] background_x [0..7] background_y [0..7] Contexte_ Couleur Contexte_ montrer la couleur Contexte_ premier plan [0..7] Contexte_ hspeed [0..7] Contexte_ vspeed [0..7] Contexte_ htiled [0..7] Contexte_ vtiled [0..7] Contexte_ largeur [0..7] Contexte_ hauteur [0..7] Contexte_ xscale [0..7] Contexte_ yscale [0..7] Vous pouvez en savoir plus sur les calques d'arrière-plan dans la section sur l' éditeur de pièce, et pour plus d'informations sur les fonctions qui contrôlent les calques d'arrière-plan à l'aide du code, voir Calques d'arrière -plan. Carrelage Comme pour les arrière-plans (expliqué ci-dessus), la ressource de tuiles de l'ancien GameMaker n'existe plus, et à la place, nous avons des ensembles de tuiles dans GameMaker Studio 2. Dans l'ancien GameMaker, les tuiles utilisaient une ressource d'arrière-plan et étaient placées à différentes profondeurs dans l'éditeur de salle ou via le code, mais la méthode utilisée n'était pas très flexible et n'était pas non plus aussi efficace. Pour résoudre ces problèmes, dans GameMaker Studio 2, les jeux de mosaïques sont désormais créés à partir d'une ressource de sprite et peuvent avoir différentes propriétés (comme l'animation ou la mosaïque automatique). Ils sont ensuite placés sur une couche tilemap dans l'éditeur de salle ou via du code. En raison de ces changements, les fonctions suivantes sont désormais obsolètes: tile_get_x tile_get_y tile_get_left tile_get_top tile_get_width tile_get_height tile_get_depth tile_get_visible tile_get_xscale tile_get_yscale tile_get_alpha tile_get_background tile_set_visible tile_set_background tile_set_region tile_set_position tile_set_depth tile_set_scale tile_set_blend tile_set_alpha tile_get_count tile_get_id tile_get_ids tile_get_ids_at_depth tile_add tile_exists tile_delete tile_layer_hide tile_layer_show tile_layer_delete tile_layer_shift tile_layer_find tile_layer_delete_at tile_layer_depth room_tile_add room_tile_add_ext room_tile_clear Vous pouvez en savoir plus sur les ensembles de tuiles dans la section du manuel sur l' éditeur d'ensemble de tuiles et sur la façon de les utiliser dans l'éditeur de pièce à partir de la section sur les couches de tuiles. Pour plus d'informations sur les fonctions qui contrôlent les couches d'arrière-plan à l'aide de code, voir Couches Tilemap. Il est également intéressant de noter que le GameMaker a des fonctions spécifiques liées à l'utilisation de tuiles héritées dans les projets importés, et vous pouvez trouver des informations à ce sujet ici. Objets La façon dont les objets sont traités dans GameMaker Studio 2 a légèrement changé en raison de l'introduction de couches dans l'éditeur de salle. Il existe toujours la variable "depth", mais elle n'est plus vraiment utilisée que pour la compatibilité et vous ne pouvez plus obtenir ou définir la profondeur des objets, seulement des instances. Cela rend les fonctions suivantes obsolètes: object_get_depth object_set_depth Vous pouvez en savoir plus sur les ressources d'objets dans la section du manuel de l' éditeur d'objets et sur les fonctions qui contrôlent les objets à l'aide du code de la section Objets. Des sons Legacy GameMaker avait deux API sonores différentes, l'une qui utilisait la version obsolète sound_ fonctions (qui n'était vraiment valable que pour la plate-forme cible HTML5), et l'autre qui utilisait le audio_ les fonctions. L'API audio a été améliorée et étendue dans GameMaker Studio 2, rendant obsolètes les fonctions héritées répertoriées ci-dessous: nom_son sound_exists sound_get_name sound_get_kind sound_get_preload sound_exists sound_restore sound_delete sound_play sound_loop sound_stop sound_stop_all affichage_du_son volume sonore sound_fade sound_global_volume audio_music_gain audio_music_is_playing audio_new_system audio_old_system audio_pause_music audio_play_music audio_resume_music audio_stop_music système audio Vous pouvez en savoir plus sur les ressources audio dans la section du manuel sur l' éditeur de son et sur les fonctions qui contrôlent l'audio à l'aide du code de la section sur l' audio. D3D Lors de l'utilisation de modèles 3D ou de primitives dans l'ancien GameMaker, vous deviez utiliser le d3d_ les fonctions. Ceux-ci utilisaient une API obsolète pour le dessin et, dans de nombreux cas, n'étaient pas strictement liés à l'API Direct 3D, ni même à l'utilisation de la 3D elle-même. Avec l'avènement des tampons de vertex, des matrices et des caméras dans GameMaker Studio 2, les fonctions suivantes sont devenues obsolètes: d3d_start d3d_end d3d_set_perspective d3d_set_hidden d3d_set_depth d3d_set_lighting d3d_set_shading d3d_set_fog d3d_set_culling d3d_set_zwriteenable d3d_set_projection d3d_set_projection_ext d3d_set_projection_ ortho d3d_set_projection_ perspective d3d_transform_set_ identité d3d_transform_ set_translation d3d_transform_set_ mise à l'échelle d3d_transform_ set_rotation_x d3d_transform_set_ rotation_y d3d_transform_ set_rotation_z d3d_transform_set_ rotation_axis d3d_transform_ add_translation d3d_transform_add_ mise à l'échelle d3d_transform_ add_rotation_x d3d_transform_add_ rotation_y d3d_transform_ add_rotation_z d3d_transform_add_ rotation_axis d3d_transform_ stack_clear d3d_transform_stack_ vider d3d_transform_ stack_push d3d_transform_stack_ pop d3d_transform_ stack_top d3d_transform_stack_ Jeter d3d_transform_vertex d3d_light_define_ ambiant d3d_light_define_ direction d3d_light_define_point d3d_light_enable d3d_primitive_begin d3d_primitive_ begin_texture d3d_primitive_end d3d_vertex d3d_vertex_color d3d_vertex_colour d3d_vertex_texture d3d_vertex_texture_ Couleur d3d_vertex_texture_ Couleur d3d_vertex_normal d3d_vertex_normal_ Couleur d3d_vertex_normal_ Couleur d3d_vertex_normal_ texture d3d_vertex_normal_ texture_color d3d_vertex_normal_ texture_colour d3d_draw_block d3d_draw_cylinder d3d_draw_cone d3d_draw_ellipsoid d3d_draw_wall d3d_draw_floor d3d_model_create d3d_model_destroy d3d_model_clear d3d_model_load d3d_model_save d3d_model_draw d3d_model_primitive_ commencer d3d_model_ primitive_end d3d_model_vertex d3d_model_vertex_ Couleur d3d_model_vertex_ Couleur d3d_model_ vertex_texture d3d_model_vertex_ texture_color d3d_model_vertex_ texture_colour d3d_model_vertex_ Ordinaire d3d_model_ vertex_normal_color d3d_model_vertex_ normal_colour d3d_model_vertex_ normal_texture d3d_model_vertex_ normal_texture_color d3d_model_vertex_ normal_texture_colour d3d_model_block d3d_model_cylinder d3d_model_cone d3d_model_ellipsoid d3d_model_wall d3d_model_floor Vous pouvez en savoir plus sur les tampons de vertex ici, plus sur les matrices ici, plus sur les caméras ici, et plus sur les fonctions GPU ici. Afficher les variables et les fonctions de la fenêtre Avec l'avènement des fonctions de caméra dans GameMaker Studio 2, cela signifie qu'un certain nombre de variables de vue ne sont plus nécessaires, en particulier celles faisant référence à la vue dans la pièce plutôt qu'à view_port (qui est toujours utilisé). Il existe également quelques fonctions de contrôle de l'affichage des éléments qui étaient disponibles dans les anciennes versions de GameMaker Studio et qui ne sont plus appropriées. Ces variables et fonctions sont répertoriées ci-dessous: view_object angle de vue view_xview view_yview view_hview view_wview view_hborder view_vborder view_hspeed view_vspeed display_set_windows_ vertex_buffer_method display_get_windows_ vertex_buffer_method display_set_windows_ alterne_sync display_get_windows_ alterne_sync room_set_view Vous pouvez en savoir plus sur les caméras dans la section du manuel sur les caméras et l'écran. Assistance tierce GameMaker Studio 2 nombreuses fonctionnalités intégrées des versions précédentes vers des extensions, ce qui signifie que les fonctions de support tierces suivantes sont considérées comme obsolètes: ads_enable ads_disable ads_move ads_get_display_ largeur ads_get_display_ la taille ads_interstitial_ disponible ads_interstitial_ affichage ads_setup ads_engagement_ disponible ads_engagement_ lancement ads_engagement_ actif ads_event ads_event_preload ads_set_reward_ rappeler playhaven_add_ notification_badge playhaven_hide_ notification_badge playhaven_position_ notification_badge playhaven_update_ notification_badge pocketchange_display_ récompense pocketchange_display_ magasin analytics_event analytics_event_ext facebook_init Identifiant Facebook facebook_request_ publier_permissions facebook_request_ read_permissions facebook_check_ autorisation statut Facebook facebook_accesstoken facebook_user_id facebook_graph_ demander facebook_dialog facebook_send_invite  facebook_post_ un message  facebook_logout facebook_launch_ offerwall iap_event_queue iap_files_purchased iap_is_downloaded iap_product_files iap_product_status iap_store_status iap_data iap_activate iap_status iap_enumerate_products iap_restore_all iap_acquire iap_consume iap_product_details iap_purchase_details immersion_play_effect immersion_stop Vous pouvez obtenir les YoYo Games pour la publicité et d'autres choses sur leur page Marketplace. Actions Drag And Drop™Les anciens GameMaker et GameMaker Studio 2 ont tous deux une Drag and Drop™ ( DnD™) pour créer vos jeux, mais la façon dont il est géré dans GameMaker Studio 2 est assez différente des méthodes utilisées précédemment. Auparavant, toutes les DnD™ avaient leur propre fonction correspondante qui fonctionnait «en coulisse» pour obtenir les résultats souhaités, mais cela n'était pas très transparent et ajoutait des frais généraux supplémentaires aux appels de fonction, entraînant de moins bonnes performances. Dans GameMaker Studio 2 cela a été modifié et maintenant toutes les actions sont compilées en code pur (et peuvent être affichées comme telles si nécessaire), ce qui signifie que les fonctions d'action suivantes sont obsolètes: action_path_old action_set_sprite action_draw_font action_draw_font_old action_fill_color action_fill_colour action_line_color action_line_colour action_highscore action_set_relative action_move action_set_motion action_set_hspeed action_set_vspeed action_set_gravity action_set_friction action_move_point action_move_to action_move_start action_move_random action_snap action_wrap action_reverse_xdir action_reverse_ydir action_move_contact action_bounce action_path action_path_end action_path_position action_path_speed action_linear_step action_potential_step action_kill_object action_create_object action_create_object_motion action_create_object_random action_change_object action_kill_position action_sprite_set action_sprite_transform action_sprite_color action_sprite_colour action_sound action_end_sound action_if_sound action_another_room action_current_room action_previous_room action_next_room action_if_previous_room action_if_next_room action_set_alarm action_sleep action_set_timeline action_timeline_set action_timeline_start action_timeline_stop action_timeline_pause action_set_timeline_position action_set_timeline_speed action_message action_show_info action_show_video action_end_game action_restart_game action_save_game action_load_game action_replace_sprite action_replace_sound action_replace_ Contexte action_if_empty action_if_collision action_if action_if_number action_if_object action_if_question action_if_dice action_if_mouse action_if_aligned action_execute_script action_inherited action_if_variable action_draw_variable action_set_score action_if_score action_draw_score action_highscore_show action_highscore_clear action_set_life action_if_life action_draw_life action_draw_life_images action_set_health action_if_health action_draw_health action_set_caption action_partsyst_create action_partsyst_destroy action_partsyst_clear action_parttype_create_old action_parttype_create action_parttype_color action_parttype_colour action_parttype_life action_parttype_speed action_parttype_gravity action_parttype_secondary action_partemit_create action_partemit_destroy action_partemit_burst action_partemit_stream action_cd_play action_cd_stop action_cd_pause action_cd_resume action_cd_present action_cd_playing action_set_cursor action_webpage action_splash_web action_draw_sprite action_draw_background action_draw_text action_draw_text_transformed action_draw_rectangle action_draw_gradient_hor action_draw_gradient_vert action_draw_ellipse action_draw_ ellipse_gradient action_draw_line action_draw_arrow action_color action_colour action_font action_fullscreen action_snapshot action_effect Vous pouvez en savoir plus sur le nouveau DnD™ dans la section du manuel sur le Drag And Drop™. Les variables globales intégrées suivantes sont également obsolètes, bien qu'elles soient toujours considérées comme des variables réservées dans GML afin que l'EDI puisse les reconnaître et les marquer pour mise à jour / suppression lorsqu'un projet hérité qui les utilise est importé (tout comme les variables répertoriées sous les sections Vues et Arrière-plans ci-dessus): gamemaker_registered gamemaker_progamemaker_ version mode sécurisé show_health show_score show_lives caption_score caption_lives caption_health argument_relatif room_caption room_speed transition_steps transition_kind game_guid error_last erreur est survenue buffer_surface_copy  Retour: Informations complémentaires Suivant: Le système de fichiers © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

