
  
  dot_product_3d_normalised
  Le produit scalaire est une valeur exprimant la relation angulaire entre deux vecteurs. On le trouve en prenant deux vecteurs, en les multipliant et en additionnant les résultats. Le nom "produit scalaire" est dérivé du point centré "-" qui est souvent utilisé pour désigner cette opération.
    centré qui est souvent utilisé pour désigner cette opération (l'appellation alternative "produit scalaire" souligne la nature scalaire plutôt que vectorielle du résultat).
  La formule mathématique réelle peut être écrite comme suit :
  
  En 2D, le produit scalaire des vecteurs a[x1,y1] et b[x2,y2] est x1x2 + y1y2, alors en 3D, le produit scalaire des vecteurs a[x1,y1,z1] et b[x1,y1,z1] est x1x2 + y1y2 + z1z2. Ainsi, le dot_product_3d dans GameMaker Studio 2 est calculé comme suit :
  a - b = (x1*x2) + (y1*y2) + (z1*z2) ;
  Qu'en est-il du produit scalaire normalisé? Le produit scalaire normalisé a été corrigé de manière à ce que la valeur de retour soit comprise entre -1 et 1 (voir Vecteurs pour de plus amples informations).
    ), ce qui est exceptionnellement utile dans de nombreuses circonstances, notamment lorsqu'il s'agit d'éclairage et d'autres fonctions 3D.
   
  Syntaxe :
  dot_product_3d_normalised(x1, y1, z1, x2, y2, z2)
  
    
      
        Arguments
        Description
      
      
        x1
        La coordonnée x du premier vecteur.
      
      
        y1
        La coordonnée y du premier vecteur.
      
      
        z1
        La coordonnée z du premier vecteur.
      
      
        x2
        La coordonnée x du deuxième vecteur.
      
      
        y2
        La coordonnée y du deuxième vecteur.
      
      
        z2
        La coordonnée z du deuxième vecteur.
      
    
  
   
  Les retours :
  Real
   
  Exemple :
  var x1, y1, x2, y2 ; x1 = 0 ; y1 = 1 ; z1 = 0 ; x2 = o_Player.x - x ; y2 = o_Player.y - y ; z2 = o_Player.z - z ; if dot_product_3d_normalised(x1, y1, z1, x2, y2, z2) > 0 above=true else above=false ;
  Le code ci-dessus crée un vecteur normal le long de l'axe y (haut) de l'instance, puis ramène le vecteur de l'objet joueur "o_Player" à lui-même. Enfin, il calcule le produit scalaire de ces deux vecteurs et s'il est supérieur à 0, il met la variable "above" à true.
    "above" à true, et si elle est inférieure ou égale à 0, elle la met à "false".
   
   
   
  
    
      
        Retour : Angles et distances
        Suivant : angle_différence
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

