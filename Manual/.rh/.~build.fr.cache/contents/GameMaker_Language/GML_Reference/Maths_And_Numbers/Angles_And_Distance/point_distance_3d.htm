




  
  distance_point_3d
  Cette fonction prend les composantes fournies du vecteur et renvoie la longueur (distance) du vecteur. Elle fonctionne exactement de la même manière que distance_point() mais avec l'ajout de la factorisation de la valeur z
    (profondeur) pour une utilisation dans l'espace 3D.
   
  Syntaxe :
  point_distance_3d(x1, y1, z1, x2, y2, z2) ;
  
    
      
        Arguments
        Description
      
      
        x1
        La coordonnée x de la première composante du vecteur
      
      
        y1
        La coordonnée y de la première composante du vecteur
      
      
        z1
        La coordonnée z de la première composante du vecteur
      
      
        x2
        La coordonnée x de la deuxième composante du vecteur
      
      
        y2
        La coordonnée y de la deuxième composante du vecteur
      
      
        z2
        La coordonnée z de la deuxième composante du vecteur
      
    
  
   
  Les retours :
  Real
   
  Exemple :
  var inst, ex, ey, ez ; inst = instance_nearest(x, y, enemy) ; if inst {
     ex = inst.x ; ey = inst.y ; ez = inst.z ; if point_distance_3d(x, y, z, ex, ey, ez) < 200 {
     instance_create_layer(x, y, "Bullets", obj_Missile) }
     }
  
  Le code ci-dessus obtiendra les coordonnées x, y et z de l'ennemi le plus proche, puis les utilisera pour vérifier la distance (longueur) du vecteur formé par ces coordonnées et celles du joueur. Si cette valeur est inférieure à 200, l'objet joueur créera une instance
    de "obj_Missile".
   
   
   
  
    
      
        Retour : Angles et distances
        Suivant : distance_à_l'objet
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

