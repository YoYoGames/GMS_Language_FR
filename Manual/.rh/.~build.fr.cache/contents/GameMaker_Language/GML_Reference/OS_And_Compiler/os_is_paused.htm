
  
  os_is_paused
  Lorsque vous développez pour des appareils mobiles, vous devez avoir un moyen de vérifier si l'appareil est toujours concentré sur votre jeu ou non, d'autant plus que si votre jeu est sur un appareil iOS, Android ou Windows Phone, il peut être interrompu par des appels téléphoniques et d'autres applications.
    Vous pouvez utiliser cette fonction pour vérifier si l'appareil est en pause ou non.
  Il convient de noter que cette fonction exécutera tout code contenu dans le bloc de code sur les appareils, mais que GameMaker Studio 2 sera mis en pause immédiatement après, car l'appareil met en cache le jeu en tant que processus d'arrière-plan. Ainsi, si vous avez quelque chose
    comme l'exemple de code fourni ci-dessous, l'instance à créer n'apparaîtra pas réellement et n'exécutera aucun de ses événements avant que le jeu n'ait été relancé à partir de l'état de mise en cache. Cela signifie que vous préférerez peut-être que la fonction os_is_paused appelle une alarme et qu'ensuite, dans l'événement d'alarme (qui sera défini lorsque le périphérique est mis en pause mais ne sera pas exécuté tant qu'il n'aura pas été mis en pause), vous créerez un menu de pause, relancerez la musique, etc...
  Si vous utilisez cette fonction sur les plates-formes Windows, Ubuntu(Linux), MacOS ou HTML5, la fonction n'est basculée qu'une seule fois sur vrai lorsque le jeu perd le focus, puis elle reviendra sur faux jusqu'à ce que le jeu revienne au focus (et le perde à nouveau).
    jusqu'à ce que le jeu retrouve le focus (et le perde à nouveau). Cela s'explique par le fait que ces plateformes ne mettent pas en cache les applications et les jeux, qui continuent donc à s'exécuter en arrière-plan.
  REMARQUE: Sur les appareils mobiles, les sons et la musique sont arrêtés lorsque l'os est en pause. Ils ne redémarreront pas à moins que vous ne les démarriez spécifiquement avec la fonction appropriée.
   
  Syntaxe :
  os_is_paused()
   
  Les retours :
  Booléen
   
  Exemple :
  if os_is_paused() {
     if !instance_exists(obj_PauseMenu) {
     instance_create_layer(0, 0, "Controllers", obj_PauseMenu) ; }
     }
  
  Le code ci-dessus vérifie si le jeu a été mis en pause, et si c'est le cas, il crée une instance de l'objet "obj_PauseMenu" si aucune n'existe déjà.
   
   
   
  
    
      
        Retour : Système d'exploitation et compilateur
        Suivant : os_is_network_connected
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

