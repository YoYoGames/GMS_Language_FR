external_define Cette fonction peut être utilisée pour définir un appel de fonction externe vers une DLL spécifique (pour Windows ) ou dylib (pour Mac). Ce fichier peut être un fichier inclus ou une partie d'une extension. Vous indiquez le nom (et le chemin) du fichier, puis le nom de la fonction que vous souhaitez définir. Ensuite, vous devez définir la convention d'appel à utiliser (voir la liste des constantes ci-dessous) ainsi que le type de résultat à attendre (également une constante, comme indiqué ci-dessous). Enfin, vous devez donner le nombre d'arguments que la fonction peut prendre (de 0 à 15) et pour chacun des arguments, vous devez également spécifier son type. Veuillez noter que pour les fonctions avec 4 arguments ou plus, ils doivent tous être de type ty_real. REMARQUE: Ceci concerne uniquement les dll ou dylib qui ont été ajoutés en tant que «Fichiers inclus» à l' GameMaker Studio 2. Cela ne fonctionnera pas avec ces fichiers ajoutés en tant qu'extensions, car ceux-ci nécessitent que vous définissiez les fonctions dans le package d'extension lui-même. Constant Description dll_cdecl Il s'agit de l'appel C, C ++ par défaut dll_stdcall Il s'agit de l'appel WinAPI standard ( Windows dll seul) ty_real Un argument de nombre réel ty_string un argument de chaîne terminé par null Syntaxe:external_define(dll, name, calltype, restype, argnumb, argtype[0], argtype[1], ...argtype[10]) ; Argument Description dll Le nom du fichier dll (chaîne) name Le nom de la fonction (chaîne) calltype La convention d'appel utilisée restype Le type de résultat à attendre argnumb Le nombre d'arguments (0-10) argtype[0... 10] Les différents types d'arguments utilisés Retour:Real (Unique function ID value) Exemple:my_funcion = external_define("MyDLL.dll", "MyMin", dll_cdecl, ty_real, 2, ty_real, ty_real); L'exemple de code ci-dessus définira une fonction externe appelée "MyMin" avec deux arguments.  Retour: OS et compilateur Suivant:external_call © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

