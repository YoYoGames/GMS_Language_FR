os_get_info Cette fonction renvoie un DS Map avec des informations détaillées sur le système d'exploitation sur lequel le jeu s'exécute. Les informations exactes renvoyées dépendront du système d'exploitation et de l'appareil, il est donc recommandé de tester cette fonction sur toutes les plates-formes que vous souhaitez cibler et de générer les valeurs renvoyées à l'aide d'une fonction telle que show_debug_message(). Notez que le DS Map n'est pas automatiquement effacé de la mémoire et vous devez utiliser le ds_map_destroy() fonction lorsque vous n’avez plus besoin des données qu’il contient. Vous trouverez ci-dessous quelques détails sur les informations supplémentaires qui seront mises à disposition de la carte DS spécifiques aux plates-formes suivantes, et il convient de noter que sur toutes les plates-formes à l' exception de HTML5, la carte aura la clé " is64bit"qui sera soit ne true ou false si la plateforme est un OS 64 bits ou non: Windows / UWP Sur Windows Desktop et Windows UWP, vous obtiendrez des informations supplémentaires de DX11 avec les touches suivantes disponibles dans la carte DS (utile pour les extensions): video_d3d11_device - pointeur vers le périphérique DX11 video_d3d11_context - pointeur vers le contexte DX11 video_adapter_vendorid - chaîne avec l'ID du fournisseur des adaptateurs video_adapter_deviceid - chaîne avec l'ID de périphérique de l'adaptateur video_adapter_subsysid - chaîne avec l'ID du sous-système de l'adaptateur video_adapter_revision - chaîne avec le numéro de révision de l'adaptateur video_adapter_dedicatedvideomemory - chaîne avec la taille de la mémoire vidéo video_adapter_dedicatedsystemmemory - chaîne avec la taille de la mémoire système (utilisée par l'adaptateur DX11) Android Sur la Android forme Android, vous obtiendrez des informations supplémentaires à partir de différentes API avec les clés suivantes disponibles dans la carte DS:android_tv - cela reviendra true si l'appareil est détecté comme étant un Android TV, ou false autrement GL_VERSION - la version d'OpenGL telle que rapportée par le pilote GL_VENDOR - le fournisseur d'OpenGL tel que rapporté par le pilote GL_RENDERER - le moteur de rendu d'OpenGL tel que rapporté par le pilote GL_EXTENSIONS - les extensions d'OpenGL disponibles telles que rapportées par le pilote GL_SHADING_LANGUAGE_VERSION - la version du GLSL prise en charge par ce pilote OpenGL GL_MAX_TEXTURE_SIZE - la taille de texture maximale prise en charge par ce pilote OpenGL SDK_INT - valeur de android.os.Build.VERSION.SDK_INT voir ici pour plus d'informations.RELEASE - valeur de android.os.Build.VERSION.RELEASE voir ici pour plus d'informations.MODEL - valeur de android.os.Build.MODEL voir ici pour plus d'informations.DEVICE - valeur de android.os.Build.DEVICE voir ici pour plus d'informations.MANUFACTURER - valeur de android.os.Build.MANUFACTURER voir ici pour plus d'informations.CPU_ABI - valeur de android.os.Build.CPU_ABI voir ici pour plus d'informations.CPU_ABI2 - valeur de android.os.Build.CPU_ABI2 voir ici pour plus d'informations.BOOTLOADER - valeur de android.os.Build.BOOTLOADER voir ici pour plus d'informations.BOARD - valeur de android.os.Build.BOARD voir ici pour plus d'informations.VERSION - valeur de os.version depuis Android System.getProperty méthode REGION - valeurs de user.region depuis Android System.getProperty méthode VERSION_NAME - valeur de ce package versionName - voir ici pour plus d'informations.PHYSICAL_KEYBOARD - si on pense qu'un clavier physique est disponible alors la chaîne "TRUE" sinon "FALSE" REMARQUE: cette fonction ne fonctionne que sur Android, iOS, Mac, Ubuntu et Windows (bureau + UWP), sur toutes les autres plates-formes cibles, elle renverra -1 plutôt qu'un DS Map. Syntaxe:os_get_info() Retour:Real (ds_map index) Exemple:os_map = os_get_info(); if (os_map != -1)    {
        var size = ds_map_size(os_map);    var key = ds_map_find_first(os_map);    for (var i = 0; i < size - 1; i++;)       {
           map_data[i] = ds_map_find_value(os_map, key);       key = ds_map_find_next(os_map, key);       }
        ds_map_destroy(os_map);
        }
   Le code ci-dessus vérifiera les informations du système d'exploitation pour voir si un DS Map est retourné. Si tel est le cas, le code parcourt la carte et attribue toutes les valeurs à un tableau.  Retour: OS et compilateur Suivant:os_powersave_enable © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

