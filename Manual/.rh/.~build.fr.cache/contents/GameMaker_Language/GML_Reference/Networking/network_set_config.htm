
  
  réseau_set_config
  Cette fonction vous permet de définir différentes configurations de réseau.
  NOTE: Cette fonction ne fonctionnera pas si elle est utilisée dans un projet fonctionnant sur la cible HTML5.
  Ces configurations sont données comme des constantes et le réglage dépendra de la constante que vous avez choisie. Le tableau ci-dessous répertorie les constantes disponibles et leurs paramètres :
   
  
    
      
        Constant
        Description
        Réglage de
      
      
        délai d'attente pour la connexion à un réseau_configuré
        Définir une valeur de délai de connexion
        Une valeur en millisecondes
      
      
        configuration_réseau_utilisation_socket_non_bloquante
        Dites à GameMaker Studio 2 de ne pas bloquer la connexion.
        0 = bloquer, 1 = ne pas bloquer
      
      
        configuration réseau_enable_reliable_udp
        Active le protocole "UDP fiable" pour un socket UDP existant.
        L'ID de la socket à cibler
      
      
        réseau_config_disable_reliable_udp
        Désactive le protocole "UDP fiable" pour un socked UDP existant.
        L'ID de la socket à cibler
      
      
        réseau_config_éviter_temps_attente
        Fixe la valeur du délai d'attente de SO_LINGER à 0 pour un socket TCP existant.
        L'ID de la socket à cibler
      
    
  
  
     La première option(network_config_connect_timeout) définit simplement le délai de connexion à un serveur, mais ne modifie pas le comportement de la connexion, hormis le temps d'attente. Il est recommandé de ne pas le définir trop bas et de le conserver
    Il est recommandé de ne pas le définir trop bas et de le maintenir à environ 1000 pour un jeu en réseau local uniquement ou 4000 pour Internet, sinon le jeu risque de ne pas se connecter de manière aléatoire. Si vous souhaitez définir une valeur de délai d'attente pour l'envoi/la réception de paquets, utilisez la fonction network_set_timeout().
  La deuxième option(network_config_use_non_blocking_socket) signifie que les fonctions de connexion au réseau renverront toutes un socket_id instantanément, mais que vous ne pourrez pas envoyer ou recevoir sur ce socket avant d'avoir reçu un événement réseau asynchrone.
    L'événement déclenché aura la clé "type" définie sur network_type_non_blocking_connect (vous pouvez trouver plus de détails dans la page sur l'événement réseau asynchrone).
    Il s'agit d'un paramètre global car GameMaker Studio 2 ne prend pas en charge un mélange de blocage et de non-blocage dans une même application.
  Les troisième et quatrième options(network_config_enable_reliable_udp, network_config_disable_reliable_udp) permettent d'activer ou de désactiver le protocole UDP fiable de GameMaker Studio 2 et ne doivent donc être utilisées qu'avec des connexions UDP.
    Dans ce cas, le terme "fiable" signifie que, lorsqu'il est activé aux deux extrémités d'une connexion, GameMaker Studio 2 tentera de vérifier que vos paquets sont arrivés correctement et renverra ceux qui ne sont pas arrivés (remarque : nous ne garantissons pas que les paquets arrivent dans l'ordre).
    que vos paquets arriveront dans l'ordre de leur transmission). Si vous utilisez un type de socket fiable, un en-tête de 12 octets sera ajouté à tous les paquets udp. Cet en-tête contient les informations nécessaires à GameMaker Studio 2 pour vérifier l'absence d'erreurs dans le paquet et renvoyer les paquets manquants.
    manquants. Les points suivants sont à noter lors de l'utilisation de cette option :
  
    Le protocole doit être activé/désactivé des deux côtés avant d'envoyer vos données, et toute donnée envoyée ou reçue avant que l'option ait été activée/désactivée ne sera pas affectée.
    Vous pouvez activer ou désactiver plusieurs fois le protocole pour un ID de socket donné, à condition que cela soit correctement géré à la fois du côté serveur et du côté client.
    Il est possible d'avoir deux sockets UDP distincts, l'un avec un UDP fiable activé pour l'un et un UDP fiable désactivé pour l'autre.
  
  La dernière option, network_config_avoid_time_wait, ne concerne que les connexions TCP et peut être utilisée pour fixer la valeur de SO_LINGER à 0 afin d'éviter qu'un grand nombre de connexions ne restent dans l' TIME_WAIT étatet n'accaparent toutes les ressources disponibles sur un serveur. Ce changement de
    changement est permanent tant que la socket est en vie et ne peut être annulé.
   
  Syntaxe :
  réseau_set_config(config_value, setting) ;
  
    
      
        Arguments
        Description
      
      
        valeur de la configuration
        La constante de configuration à définir (voir le tableau en haut de cette page).
      
      
        réglage
        Le réglage de la valeur de la configuration.
      
    
  
   
  Les retours :
  Chaîne de caractères
   
  Exemple :
  network_set_config(network_config_connect_timeout, 1000) ; network_set_config(network_config_use_non_blocking_socket, 1) ;
  Le code ci-dessus fixe le délai d'attente pour la connexion réseau à 1000 ms et indique à GameMaker Studio 2 de ne pas bloquer la connexion.
   
   
   
  
    
      
        Retour : Mise en réseau
        Suivant : network_set_timeout
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

