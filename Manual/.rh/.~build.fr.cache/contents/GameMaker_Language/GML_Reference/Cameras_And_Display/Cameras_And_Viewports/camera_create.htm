camera_create Cette fonction créera une caméra "vide", c'est-à-dire: une caméra sans paramètres de vue ou de projection définis. Une fois que vous avez créé la caméra, vous pouvez utiliser les différentes fonctions de matrice pour définir les matrices de vue et de projection. Vous pouvez également utiliser cette fonction pour créer la caméra, puis utiliser les différents camera_set_* fonctions pour configurer la vue, cependant notez que vous devez fournir au moins une position et une taille de vue, sinon la caméra résultante ne sera pas valide et donnera des résultats étranges si elle est appliquée à un port de vue (si vous ne définissez pas l'objet suivant, les bordures ou vitesse de déplacement, ceux-ci seront réglés sur les valeurs par défaut pour une caméra de vue dans l'éditeur de pièce). Notez que les caméras sont comme toutes les ressources dynamiques et occuperont de la mémoire lors de leur création. Cela signifie que vous devez faire attention à ne pas créer de caméras inutilement et à détruire celles dont vous n'avez pas besoin en appelant la fonction camera_destroy(). Cela signifie également que les caméras persisteront d'une pièce à l'autre si elles sont affectées à un global variable (elles persisteront lorsqu'elles seront également affectées à des variables d'instance ou locales, mais vous ne pourrez pas y accéder après le changement de pièce, d'où la fuite de mémoire), afin que vous puissiez - par exemple - créer une nouvelle caméra, l'assigner à une variable globale, puis au début de chaque pièce, définissez les matrices de vue et de projection requises et le port de vue que vous devez utiliser. Syntaxe:camera_create(); Retour:Real (unique camera ID value) Exemple:view_camera[0] = camera_create(); var viewmat = matrix_build_lookat(640, 240, -10, 640, 240, 0, 0, 1, 0); var projmat = matrix_build_projection_ortho(640, 480, 1.0, 32000.0); camera_set_view_mat(view_camera[0], viewmat); camera_set_proj_mat(view_camera[0],
    projmat); Le code ci-dessus crée une nouvelle caméra et attribue son ID à la vue [0]. Les matrices de vue et de projection sont ensuite créées et stockées dans des variables locales avant d'être utilisées pour régler la caméra.  Arrière: caméras et ports d'affichage Suivant:camera_create_view © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

