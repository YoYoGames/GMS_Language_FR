
  
  view_surface_id
  Avec cette variable, vous pouvez définir le contenu d'un port de vue donné pour dessiner sur une surface, ou obtenir l'identifiant de la surface actuelle si une surface a été assignée à un port de vue. Lorsque vous travaillez avec des surfaces, il est souvent nécessaire de capturer toute la région visible de l'écran sur la surface.
    de l'écran à la surface, et donc vous l'assignerez à un port de vue en utilisant cette variable. Cela signifie que tout ce qui est affiché dans la vue choisie sera désormais dessiné sur la surface assignée. La vue ne sera pas dessinée à l'écran.
    ce qui signifie que vous devrez soit.. :
  
    Activez une nouvelle vue et dessinez la surface uniquement dans cette vue (en utilisant la commande view_current pour vérifier quelle vue est dessinée)
    Dessinez la surface dans l'événement Draw GUI d'une instance, puisque la couche GUI est indépendante des vues.
  
  Vous pouvez également lire cette variable pour obtenir l'index de la surface qui a été assignée à la vue choisie ou elle retournera -1 si aucune surface n'a été assignée, et généralement la surface utilisée pour cette fonction devrait être la taille de la caméra de vue elle-même
    (et non du port de vue). L'exemple étendu ci-dessous montre une configuration de base pour capturer une vue et la dessiner dans l'événement Draw GUI. Pour plus d'informations sur les surfaces, consultez la section Surfaces.
  Notez que vous pouvez également définir un port de vue sur une surface en utilisant la fonction view_set_surface_id().
   
  Syntaxe :
  view_surface_id [0...7] ;
   
  Les retours :
  Réel (indice de surface ou -1 si aucune surface n'a été assignée)
   
  Exemple étendu :
  Dans cet exemple étendu, nous allons créer une surface et l'affecter au port de vue [0] afin qu'elle capture la vue de la caméra affectée à ce port, puis la dessiner à l'écran dans l'événement Draw GUI. Pour commencer, nous devons initialiser notre variable de surface dans l'événement
   Create Event d'une instance de contrôleur :
  surf = -1 ;
  Nous avons défini la variable de surface à -1, car toutes les fonctions de surface doivent être utilisées dans les événements Draw pour éviter les erreurs ou les comportements indéfinis. Ainsi, une fois cela fait, nous aurions ceci dans l'événement principal Draw:
  if !surface_exists(surf) {
     surf = surface_create(camera_get_view_width(view_camera[0]), camera_get_view_height(view_camera[0])) ; view_surface_id[0] = surf ; }
  
  Les surfaces sont volatiles, ce qui signifie qu'elles peuvent être supprimées de la mémoire à tout moment en raison de la gestion de la mémoire du système d'exploitation et d'autres choses, donc ici nous vérifions si notre surface existe et si elle n'existe pas, nous la créons et l'assignons à la vue 0.
    cela fait, tout ce qui apparaîtrait dans la vue 0 sera maintenant dessiné sur la surface que nous avons créée à la place. Si vous ne faites rien d'autre à ce stade, lorsque vous lancerez votre jeu, vous obtiendrez simplement un écran vide car tous les dessins sont effectués sur la surface,
    mais la surface elle-même n'est dessinée nulle part. Par conséquent, nous devons maintenant dessiner la surface à l'écran dans l'événement Draw GUI comme ceci :
  if surface_exists(surf) {
     draw_surface_stretched(surf, 0, 0, display_get_gui_width(), display_get_gui_height()) ; }
  
  Ce code va maintenant dessiner la surface que nous avons créée à partir de la caméra de vue étirée pour remplir la totalité de la couche GUI.
   
   
   
  
    
      
        Retour : Caméras et ports d'observation
        Suivant : view_get_camera
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

