sprite_create_from_surface Avec cette fonction, vous pouvez créer un sprite à partir d'une surface précédemment initialisée (la valeur de l'ID d'index de surface est renvoyée lorsque vous créez la surface à l'aide de surface_create() ). Les coordonnées x et y que vous entrez ensuite dans la fonction doivent être relatives à la position (0,0) de la surface (le coin supérieur gauche) et non à la fenêtre de jeu (ni à la vue si vous en avez une active). Les arguments largeur et hauteur sont en pixels et définissent la largeur et la hauteur de la partie de la surface à utiliser. Définition de l'argument "removeback" sur true supprimera une couleur de l'image-objet, en vérifiant le pixel inférieur gauche de l'image-objet pour la couleur à cet endroit, puis en l'utilisant comme couleur à supprimer. Si vous choisissez l'option "removeback", vous pouvez également souhaiter que GameMaker Studio 2 les bords de l'image-objet en définissant l'argument "smooth" sur true. Tout cela ne fait que créer une bordure semi-transparente autour des bords du sprite après que son arrière-plan ait été supprimé. Enfin, vous pouvez également spécifier le x et l' origine y pour l'image - objet. C'est le point où le sprite est "fixé" sur l'instance qui l'utilise, et est toujours calculé par rapport au coin supérieur gauche 0,0 d'une sous-image de sprite. Ainsi, par exemple, un sprite de 32 x 32 pixels avec ces valeurs définies sur (16,16) aura son origine au centre. Par défaut, tous les nouveaux sprites ont leurs cadres de délimitation calculés automatiquement (la bbox exacte dépendra de la taille et de la transparence du sprite), mais vous souhaiterez peut-être personnaliser cela, auquel cas vous devez également utiliser la fonction sprite_collision_mask(). REMARQUE: lorsque vous créez un sprite dans GameMaker Studio 2 avec cette méthode, vous devez vous rappeler de le supprimer à nouveau (avec sprite_delete() ) lorsqu'il n'est plus nécessaire, sinon il y a un risque de fuite de mémoire qui ralentira et finira par planter votre jeu. Syntaxe:sprite_create_from_surface(index, x, y, w, h, removeback, smooth, xorig, yorig); Argument Description index L'indice de la surface à partir de laquelle créer. x La position x à partir de laquelle copier. y La position y à partir de laquelle copier. w La largeur de la zone à copier (à partir de la position x). h La hauteur de la zone à copier (à partir de la position y). removeback Indique s'il faut rendre transparents tous les pixels avec la couleur d'arrière-plan (pixel en bas à gauche). smooth Indique s'il faut lisser les bords. xorig Indique la position x de l'origine dans le sprite. yorig Indique la position y de l'origine dans le sprite. RetourReal (unique sprite ID value) Exemple:var surf; surf = surface_create(32, 32); surface_set_target(surf);
     draw_clear_alpha(c_black, 0); draw_sprite(spr_Body, 0, 0, 0); draw_sprite(spr_Clothes, 0, 0, 0); draw_sprite(spr_Hair, 0, 0, 0); spr_custom = sprite_create_from_surface(surf, 0, 0, 32, 32, true, true, 16, 16); surface_reset_target();
     surface_free(surf);
   Le code ci-dessus crée une surface et stocke son index dans la variable locale "surf". Il cible ensuite cette surface, l'efface et dessine plusieurs sprites les uns sur les autres. Enfin, il crée un nouveau sprite à partir de l'image composite dessinée sur la surface et affecte son index à "spr_Custom" avant de libérer la mémoire utilisée par la surface.  Retour: Manipulation des sprites Suivant:sprite_add_from_surface © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

