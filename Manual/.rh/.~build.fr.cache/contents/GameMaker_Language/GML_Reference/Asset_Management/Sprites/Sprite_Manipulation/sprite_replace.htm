
  
  sprite_replace
  Cette fonction fonctionne presque de la même manière que la fonction sprite_add()mais au lieu de renvoyer l'index du sprite que vous importez, elle écrase un index de sprite précédemment créé. Lorsque vous utilisez
    cette fonction, vous devez utiliser un index de sprite qui a été créé et stocké dans une variable à l'aide d'autres fonctions telles que sprite_add() ou  sprite_create_from_surface(),
    ou encore sprite_duplicate()plutôt qu'un actif de sprite de l'arbre de ressources. Vous pouvez remplacer un sprite à partir des ressources du jeu en utilisant cette fonction, mais cela signifie que
    vous perdrez l'ID de référence du sprite que vous remplacez, que vous appeliez game_restart() ou non, et ce n'est donc pas recommandé. Indépendamment du sprite remplacé, cette fonction créera une nouvelle page de texture pour le sprite.
    Il convient donc d'être prudent lors de son utilisation, car elle peut nuire aux performances en augmentant le nombre de changements de texture nécessaires pour le rendu.
  Le fichier image à charger doit toujours être au format *.png et toutes les images qui doivent être transformées en sprites animés doivent avoir un format "bande" (voir l'image ci-dessous).
    Elles seront divisées en un nombre de sous-images spécifié selon la règle suivante : largeur du sprite = largeur de la bande / sous-images.
  
  Comme vous pouvez le voir dans l'image ci-dessus, le sprite a été placé sur un fond violet foncé, et cela peut être supprimé en définissant l'argument "removeback" à true. Cela fonctionne en vérifiant le pixel inférieur gauche 
    du sprite pour connaître la couleur qui s'y trouve et l'utiliser comme couleur à supprimer. Par exemple, dans l'image ci-dessus, si la couleur du pixel inférieur gauche était le vert, toutes les parties vertes du sprite auraient été supprimées et le reste du fond violet aurait été ignoré.
    ignoré le reste de l'arrière-plan violet.
  Si vous choisissez l'option "removeback", vous pouvez également souhaiter que GameMaker Studio 2 lisse les bords du sprite en définissant l'argument "smooth" sur true. Tout ce que cela fait est de créer
    une bordure semi-transparente autour des bords du sprite après la suppression de son arrière-plan.
  Enfin, vous pouvez également spécifier l'origine x et y du sprite. Il s'agit du point où le sprite est "fixé" sur l'instance qui l'utilise, et il est toujours calculé comme étant relatif au coin supérieur gauche 0,0
    d'une sous-image de sprite. Ainsi, par exemple, un sprite de 32 x 32 pixels dont les valeurs sont définies sur (16,16) aura son origine au centre.
  Par défaut, les boîtes de délimitation de tous les nouveaux sprites sont calculées automatiquement (la boîte de délimitation exacte dépend de la taille et de la transparence du sprite), mais vous pouvez souhaiter personnaliser cette fonction, auquel cas vous devez également utiliser la fonction     sprite_collision_mask().
  REMARQUE: selon la plate-forme cible choisie, vous êtes limité quant à l'endroit où vous pouvez enregistrer et charger des fichiers. Voir Manipulation des fichiers pour plus d'informations.
  REMARQUE: vous devez savoir que si vous utilisez cette fonction dans votre jeu cible HTML5 pour charger des ressources à partir d'un serveur externe, alors, en raison de la protection XSS des navigateurs, les tentatives de chargement de ressources à partir d'autres domaines peuvent être bloquées et renvoyer des résultats vides.
    renvoyer des résultats vides.
   
  Syntaxe :
  sprite_replace(ind, fname, imgnumb, removeback, smooth, xorig, yorig) ;
  
    
      
        Arguments
        Description
      
      
        ind
        L'index du sprite à remplacer définitivement.
      
      
        fname
        Le nom de fichier de l'image pour créer le nouveau sprite.
      
      
        imgnumb
        Le nombre d'images dans lesquelles le sprite sera découpé horizontalement. 1 = une seule image / *.gif.
      
      
        retirer
        Indique s'il faut rendre transparents tous les pixels ayant la couleur de fond (pixel inférieur gauche).
      
      
        lisse
        Indique s'il faut lisser les bords.
      
      
        xorig
        La coordonnée x de l'origine, par rapport au coin supérieur gauche du sprite.
      
      
        yorig
        La coordonnée y de l'origine, par rapport au coin supérieur gauche du sprite.
      
    
  
   
  Renvoie à
  N/A
   
  Exemple :
  sprite_replace(spr_banner, "gravemaker.png", 1, false, false, 0, 0) ;
  Le code ci-dessus remplacera l'image indexée dans "spr_banner" par une autre image chargée depuis une source externe.
   
   
   
  
    
      
        Retour : Manipulation des sprites
        Suivant : sprite_duplicate
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

