sprite_replace Cette fonction fonctionne presque exactement de la même manière que sprite_add(), mais au lieu de renvoyer l'index du sprite que vous importez, il écrase un index de sprite précédemment créé. Lorsque vous utilisez cette fonction, vous devez utiliser un index de sprite qui a été créé et stocké dans une variable en utilisant d'autres fonctions telles que sprite_add() ou sprite_create_from_surface(), ou même sprite_duplicate(), plutôt qu'un élément de sprite d'arbre de ressources. Vous pouvez remplacer un sprite des ressources du jeu à l'aide de cette fonction, mais cela signifie que vous perdrez l'ID de référence du sprite que vous remplacez, que vous appeliez ou non game_restart() ou pas, et n'est donc pas recommandé. Indépendamment du sprite remplacé, cette fonction créera une nouvelle page de texture pour le sprite et donc des précautions doivent être prises lors de son utilisation car cela peut nuire aux performances en augmentant le nombre de permutations de texture requises pour le rendu. Le fichier image à charger doit toujours être au format *.png format et toutes les images qui doivent être transformées en sprites animés doivent avoir un format «bande» (voir l'image ci-dessous). Elles seront divisées en le nombre de sous-images spécifié en suivant la règle sprite width = strip width / sub images. Comme vous pouvez le voir dans l'image ci-dessus, le sprite a été placé sur un fond violet foncé, et cela peut être supprimé en définissant l'argument "removeback" sur true. Cela fonctionne en vérifiant le pixel en bas à gauche de l'image-objet pour la couleur à cet endroit, puis en l'utilisant comme couleur à supprimer. Par exemple, dans l'image ci-dessus, si la couleur du pixel en bas à gauche était verte, toutes les parties vertes du sprite auraient été supprimées et le reste de l'arrière-plan violet ignoré. Si vous choisissez l'option "removeback", vous pouvez également souhaiter que GameMaker Studio 2 les bords de l'image-objet en définissant l'argument "smooth" sur true. Tout cela ne fait que créer une bordure semi-transparente autour des bords du sprite après que son arrière-plan ait été supprimé. Enfin, vous pouvez également spécifier le x et l' origine y pour l'image - objet. C'est le point où le sprite est "fixé" sur l'instance qui l'utilise, et est toujours calculé par rapport au coin supérieur gauche 0,0 d'une sous-image de sprite. Ainsi, par exemple, un sprite de 32 x 32 pixels avec ces valeurs définies sur (16,16) aura son origine au centre. Par défaut, tous les nouveaux sprites ont leurs cadres de délimitation calculés automatiquement (la bbox exacte dépendra de la taille et de la transparence du sprite), mais vous souhaiterez peut-être personnaliser cela, auquel cas vous devez également utiliser la fonction sprite_collision_mask(). REMARQUE: selon la plate-forme cible choisie, vous êtes limité quant à l'endroit où vous pouvez enregistrer et charger des fichiers. Voir Gestion des fichiers pour plus d'informations. REMARQUE: vous devez savoir que si vous utilisez cette fonction dans votre jeu cible HTML5 pour charger des ressources à partir d'un serveur externe, alors, en raison de la protection XSS dans les navigateurs, les tentatives de chargement de ressources à partir de plusieurs domaines peuvent être bloquées et sembler revenir résultats vides. Syntaxe:sprite_replace(ind, fname, imgnumb, removeback, smooth, xorig, yorig); Argument Description ind L'index du sprite à remplacer définitivement. fname Le nom de fichier de l'image pour créer le nouveau sprite. imgnumb Le nombre d'images dans lesquelles le sprite sera découpé horizontalement. 1 = une seule image /*.gif. removeback Indique s'il faut rendre transparents tous les pixels avec la couleur d'arrière-plan (pixel en bas à gauche). smooth Indique s'il faut lisser les bords. xorig Coordonnée x de l'origine, par rapport au coin supérieur gauche de l'image-objet. yorig Coordonnée y de l'origine, par rapport au coin supérieur gauche de l'image-objet. RetourN/A Exemple:sprite_replace(spr_banner, "gravemaker.png", 1, false, false, 0, 0); Le code ci-dessus remplacera l'élément d'image indexé dans "spr_banner" par un autre chargé depuis une source externe.  Retour: Manipulation des sprites Suivant:sprite_duplicate © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

