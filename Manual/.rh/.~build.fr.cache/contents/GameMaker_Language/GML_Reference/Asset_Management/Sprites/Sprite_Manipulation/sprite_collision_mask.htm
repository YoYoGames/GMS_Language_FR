sprite_collision_mask Avec cette fonction, vous pouvez définir les propriétés du masque de collision qu'un sprite doit avoir. Si vous sélectionnez automatique (0) ou image complète (1) comme mode de zone de délimitation, les valeurs de la zone de délimitation individuelle peuvent être définies sur 0. Cependant, pour un masque défini par l'utilisateur (2), vous devrez définir ces valeurs. Les différentes valeurs de la boîte englobante sont toujours relatives au coin supérieur gauche de l'image-objet (indépendamment de l'origine x et y) qui est considérée comme la position (0, 0). La définition du type de masque définit la forme générale du masque lui-même, mais notez que tout autre élément qu'un masque rectangulaire nécessitera plus de puissance de traitement lors de la résolution des collisions, ce qui entraînera une baisse des performances. En général, vous ne devez utiliser des types de masque autres que rectangulaires que lorsque cela est absolument nécessaire. REMARQUE: Cette fonction n'autorise pas le type de masque de collision rectangle pivoté. Le type de masque qui peut être défini sera l'une des constantes suivantes: Constant Description bboxkind_rectangular Une forme de masque de collision rectangle rectangulaire (non rotatif)bboxkind_ellipse Une forme de masque de collision elliptique bboxkind_diamond Une forme de masque de collision en diamant bboxkind_precise Un masque de collision précis, où le masque se conformera aux pixels non transparents du sprite, basé sur la valeur de tolérance donnée (voir ci-dessous)) Enfin, la tolérance est utilisée pour définir la précision du masque (lorsqu'il est utilisé avec un masque "pleine image", cela n'aura aucun effet), avec une tolérance de 0 signifiant que le masque suivra chaque pixel qui a une transparence au-dessus de 0, tandis que d'autres valeurs déplaceront le périmètre du masque de collision en fonction de la transparence des pixels. REMARQUE: Cette fonction n'est utile que pour les sprites bitmap et ne fonctionnera pas avec les sprites SWF ou JSON (Spine). REMARQUE: Cette fonction ne fonctionnera que sur les sprites ajoutés ou les sprites dupliqués et pas directement sur les ressources prédéfinies. Vous pouvez dupliquer des sprites en utilisant la fonction sprite_duplicate (). Syntaxe:sprite_collision_mask(ind, sepmasks, bboxmode, bbleft, bbtop, bbright, bbbottom, kind, tolerance); Argument Description ind L'index de l'image-objet pour définir le cadre de sélection. sepmasks S'il faut créer des masques de collision pour chaque sous-image du sprite (true ), ou un masque pour tous (false ). bboxmode Quel type de cadre de délimitation utiliser. 0 = automatique, 1 = image complète, 2 = défini par l'utilisateur. bbleft La position gauche maximale du cadre de sélection. bbtop La position supérieure maximale du cadre de sélection. bbright La position droite maximale du cadre de sélection. bbbottom La position inférieure maximale du cadre de sélection. kind Le type de masque, une constante (voir le tableau dans la description). tolerance Indique la tolérance dans la valeur de transparence (0 = aucune tolérance, 255 = tolérance totale). RetourN/A Exemple:spr = sprite_add("player_5.png", 16, true, true, 0, 0); sprite_collision_mask(spr, true, 1, 0, 0, 0, 0, 0, 0); Le code ci-dessus charge un sprite à partir d'une source externe et stocke le nouvel index dans la variable "spr". Le code définit ensuite le nouveau sprite pour avoir un masque de collision précis pour chacune de ses sous-images.  Retour: Manipulation des sprites Suivant: sprite_nineslice_create © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

