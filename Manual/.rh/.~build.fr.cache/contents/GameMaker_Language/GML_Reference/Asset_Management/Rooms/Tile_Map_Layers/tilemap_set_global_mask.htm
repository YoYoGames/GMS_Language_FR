
  
  tilemap_set_global_mask
  Cette fonction peut être utilisée pour définir le masque binaire des tuiles pour toutes les cartes de tuiles du jeu. L'idée est que si vous avez, par exemple, de petits ensembles de tuiles de 16 x 16, vous aurez un total de 256 tuiles différentes dans chaque ensemble de tuiles, ce qui n'utilise que 8 bits de votre index dans le "blob" de données de tuiles (sur les 19 bits de données disponibles).
    8 bits de votre index dans le "blob" de données de tuiles (sur les 19 bits de données disponibles). Ces bits peuvent être "masqués" et le reste des données de tuiles peut être utilisé pour stocker des valeurs supplémentaires.
  Une façon simple d'obtenir la valeur initiale de l'index de masque est de prendre le nombre de tuiles dans le jeu de tuiles et de soustraire 1, donc un jeu de tuiles 16x16 a 256 tuiles et une valeur de masque de 255 (ou $ff en hexadécimal), et si le jeu de tuiles a un nombre de tuiles qui n'est pas une puissance de deux, alors arrondissez à la puissance de deux la plus proche pour obtenir le masque, par exemple un jeu de tuiles de 20x20 a 400 tuiles, que vous arrondirez à 512, et ainsi vous obtiendrez une valeur d'index de masque de 511 ($1ff en hexadécimal). En dehors du masque d'index,
    vous voudriez normalement préserver les valeurs d'inversion, de rotation et de miroir qui sont assignées à une tuile aussi, donc pour vous aider il y a quelques constantes qui peuvent être utilisées. Celles-ci peuvent être "or"-ées avec la valeur du masque d'index pour préserver ces bits de données.
    ces bits de données. Les constantes suivantes peuvent être utilisées (voir l'exemple de code ci-dessous pour l'utilisation) :
   
  
    
      
        Constant
        Description
      
      
        rotation des tuiles
        Utilisé pour définir/obtenir le bit de rotation d'un blob de données de tuiles.
      
      
        tuile_mirror
        Utilisé pour définir/obtenir le bit miroir d'un blob de données de tuile.
      
      
        tuile_flip
        Utilisé pour définir/obtenir le bit de retournement d'un blob de données de tuile.
      
      
        masque d'indexation des tuiles
        Une constante spéciale qui est utilisée pour "et" avec le blob de données de la tuile pour extraire l'index de la tuile.
      
    
  
   
  Le masquage des bits de la carte des tuiles est une fonction avancée qui vous permet d'utiliser les bits du "blob" des données des tuiles pour votre propre usage. Par exemple, l'utilisateur peut réserver un bit pour signifier "solide" dans la structure des données de tuiles, ce qui permet de vérifier les collisions rapides.
    collisions rapides. Fondamentalement, le masque de bits est "and" contre les données des tuiles lorsque la carte des tuiles est dessinée (de sorte qu'il n'affecte pas les autres fonctionnalités), ce qui signifie que les bits qui ne sont pas dans le masque sont ignorés, mais peuvent toujours être lus et écrits par l'utilisateur.
    être lus et écrits par l'utilisateur pour ses propres besoins. Notez qu'il existe deux masques différents - un masque global et un masque par carte de tuiles - et qu'ils sont assemblés par "et" en interne par GameMaker Studio 2 avant d' être utilisés pour le dessin.
   
  Syntaxe :
  tilemap_set_global_mask(mask)
  
    
      
        Arguments
        Description
      
      
        masque
        La valeur du masque à utiliser
      
    
  
   
  Les retours :
  N/A
   
  Exemple :
  var mask = tile_mirror | tile_flip | tile_rotate | 255 ; tilemap_set_global_mask(mask) ;
  
  Le code ci-dessus définit le masque binaire global de la carte des tuiles à 8 bits, préservant les valeurs d'inversion, de miroir et de rotation pour chaque tuile de la carte.
   
   
   
  
    
      
        Retour : Carrelage des couches de la carte
        Suivant :  tilemap_set_width 
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

