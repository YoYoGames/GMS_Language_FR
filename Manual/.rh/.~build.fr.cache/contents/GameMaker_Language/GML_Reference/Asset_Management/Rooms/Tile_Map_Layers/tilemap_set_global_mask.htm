tilemap_set_global_mask Cette fonction peut être utilisée pour définir le masque de bit de tuile pour toutes les cartes de tuiles du jeu. L'idée est que si vous avez, par exemple, de jolis petits ensembles de tuiles de 16 x 16 tuiles auront un total de 256 tuiles différentes dans chaque jeu de tuiles, ce qui n'utilise que 8 bits de votre index dans le "blob" de données de tuiles ( à partir de 19 bits de données disponibles). Ces bits peuvent être "masqués" et ensuite le reste des données de tuile peut être utilisé pour stocker des valeurs supplémentaires. Un moyen simple d'obtenir la valeur initiale du masque d'index est de prendre le nombre de tuiles dans le jeu de tuiles et de soustraire 1, donc un jeu de tuiles 16x16 a 256 tuiles et une valeur de masque de 255 (ou $ff en hexadécimal), et si le l'ensemble de tuiles a un nombre de tuiles qui ne sont pas une puissance de deux, puis arrondis à la puissance de deux la plus proche pour obtenir le masque, par exemple un ensemble de tuiles de 20x20 a 400 tuiles, que vous arrondiriez à 512, et alors obtenez une valeur d'index de masque de 511 ( $1ff en hexadécimal). En dehors du masque d'index, vous voudrez normalement conserver les valeurs d'inversion, de rotation et de miroir qui sont également affectées à une tuile, donc pour vous aider, quelques constantes peuvent être utilisées. Ceux-ci peuvent être "ou" associés à la valeur du masque d'index pour conserver ces bits de données. Les constantes suivantes peuvent être utilisées (voir l'exemple de code ci-dessous pour l'utilisation): Constant Description tile_rotate Utilisé pour définir / obtenir le bit de rotation d'un objet blob de données de mosaïque. tile_mirror Utilisé pour définir / obtenir le bit miroir d'un objet blob de données de tuile. tile_flip Utilisé pour définir / obtenir le bit de retournement d'un blob de données de tuile. tile_index_mask Une constante spéciale qui est pour "et" -ing avec le blob de données de tuile pour extraire l'index de tuile. Le masquage de bits de mosaïque est une fonctionnalité avancée et vous permet d'utiliser des bits de la "goutte" de données de mosaïque pour votre propre usage. Par exemple, l'utilisateur peut réserver un peu pour signifier "solide" dans la structure de données de tuiles et cela peut être vérifié pour des collisions rapides. Fondamentalement, le masque de bits est placé "et" par rapport aux données de tuile lorsque la carte de tuiles est dessinée (donc cela n'affecte aucune des autres fonctionnalités), ce qui signifie que les bits qui ne sont pas dans le masque sont ignorés, mais peuvent être lu et écrit par l'utilisateur à ses propres fins. Notez qu'il existe deux masques différents - un global et un par mosaïque - et ceux-ci sont "et" - assemblés en interne par GameMaker Studio 2 avant d'être utilisés pour le dessin. Syntaxe:tilemap_set_global_mask(mask) Argument Description mask La valeur de masque à utiliser Retour:N/A Exemple:var mask = tile_mirror | tile_flip | tile_rotate | 255; tilemap_set_global_mask(mask);
   Le code ci-dessus définit le masque binaire global de la mappe de tuiles sur 8 bits, préservant les valeurs de retournement, de miroir et de rotation pour chaque tuile de la carte.  Retour: Couches de carte de mosaïque Suivant: tilemap_set_width © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

