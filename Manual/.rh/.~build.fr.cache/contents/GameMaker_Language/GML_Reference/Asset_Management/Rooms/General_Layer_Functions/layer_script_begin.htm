
  
  layer_script_begin
  Avec cette fonction, vous pouvez attribuer une fonction de script à un calque et elle sera appelée avant le rendu du calque. Lorsque vous ajoutez une fonction à un calque, de cette manière, elle sera exécutée au début de chacun des différents événements de dessin.
    de chacun des différents événements de dessin. Vous pouvez donc vérifier dans la fonction assignée quel événement est en cours de rendu et adapter le code en conséquence. Cela peut être fait en vérifiant les paramètres event_type    et/ou la fonction numéro_de_l'événement (voir l'exemple étendu ci-dessous). Notez que la fonction n'est pas censée être appelée dans les événements de dessin ou les événements d'étape, mais qu'elle doit être appelée uniquement
    au début de la pièce dans le code de création de pièce ou dans l'événement de création / événement de début de pièce d'une instance.
   
  Syntaxe :
  layer_script_begin(layer_id, script) ;
  
    
      
        Arguments
        Description
      
      
        identifiant de la couche
        La valeur d'identification unique de la couche à cibler (ou le nom de la couche sous forme de chaîne).
      
      
        script
        L'index de la fonction de script à affecter à la couche
      
    
  
   
  Les retours :
  N/A
   
  Exemple étendu :
  Dans cet exemple étendu, nous allons d'abord vous montrer comment une simple fonction de script est structurée pour définir certaines données uniformes du shader de sorte que lorsque la couche donnée est dessinée, cette fonction sera exécutée et le shader fonctionnera correctement. Dans l'exemple, il est intéressant de
    Dans l'exemple, il est intéressant de noter comment nous vérifions quel événement est appelé afin que le reste de la fonction ne soit exécuté que sur l'événement spécifique sur lequel nous voulons qu'elle fonctionne - dans ce cas, uniquement sur l'événement principal de dessin :
  /// @function layer_shader_start() ; function layer_shader_start()
     {
     if event_type == ev_draw {
     if event_number == 0 {
     colour_to_find = shader_get_uniform(sShaderDemo5, "f_Colour1") ; colour_to_set = shader_get_uniform(sShaderDemo5, "f_Colour2") ; shader_set(s_ColourChanger) ;
     shader_set_uniform_f(colour_to_find, 1,1,1 ) ; shader_set_uniform_f(colour_to_set, 1,0,0 ) ; }
     }
     }
  
  Nous aurions alors une fonction complémentaire pour réinitialiser le shader une fois le dessin terminé :
  /// @function layer_shader_end() ; function layer_shader_end()
     {
     if event_type == ev_draw {
     if event_number == 0 {
     shader_reset() ;
     }
     }
     }
  
  Maintenant que nous avons défini nos fonctions de script pour le réglage du shader, nous devons les affecter à un calque spécifique afin que ce dernier sache comment les appeler. Cela peut être fait dans le code de création de la pièce, ou dans l'événement de création ou l'événement de démarrage de la pièce d'un objet contrôleur.
    (il n'est pas nécessaire de les définir à chaque étape, mais plutôt une fois au début de la pièce, ou lorsque la couche est initialement créée) :
  var lay_id = layer_get_id("Instances") ; layer_script_begin(lay_id, layer_shader_start) ; layer_script_end(lay_id, layer_shader_end) ;
  Ce dernier bloc de code affecte les scripts à la couche.
   
   
   
  
    
      
        Retour : Fonctions générales des couches
        Suivant : layer_script_end
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

