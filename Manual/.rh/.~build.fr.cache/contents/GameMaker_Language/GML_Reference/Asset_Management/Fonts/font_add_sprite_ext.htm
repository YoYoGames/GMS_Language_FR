font_add_sprite_ext Avec cette fonction, vous pouvez utiliser une "bande de sprite" (le sprite lui-même doit être un élément de sprite du navigateur de ressources, ou un sprite que vous avez ajouté aux ressources du jeu en utilisant sprite_add ) pour créer un nouvel élément de police, où chaque sous-image serait un symbole ou une lettre individuelle. Contrairement à la normale font_add_sprite() qui a un ordre spécifique pour les sous-images du sprite, cette fonction mappera les sous-images du sprite en fonction de l'argument "string_map" de la fonction. Cet argument est une chaîne que vous pouvez utiliser pour indiquer à GameMaker Studio 2 ordre des sous-images de la police de sprite et il les mappera automatiquement lors de l'écriture de texte. Ainsi, par exemple, si vous avez un string-map de "AaBbCcDdEeFfGgHh", votre police de sprite doit avoir les sous-images ordonnées de cette manière. Vous pouvez définir "espace" comme étant n'importe quel caractère que vous voulez, par exemple une seule ligne de la taille que vous voulez que l'espace soit, et tous les espaces dans le texte seront rendus à cette largeur (mais l'image choisie ne sera jamais rendue), ou si vous ne fournissez pas de sprite pour l'espace, la largeur du caractère le plus large de la police de sprite sera utilisée à la place. Vous pouvez également définir l'espacement de la police pour qu'il soit proportionnel (true ) ou non (false ), où une police proportionnelle est espacée en fonction de la largeur réelle des lettres (la lettre «i» prend donc moins de place que la lettre «w», par exemple) tandis qu'une police non proportionnelle sera espacée en fonction du sous- largeur de l'image, comme une police à espacement fixe. Enfin, vous pouvez définir l'espace à laisser entre chaque lettre lors de l'écriture, et cela peut être n'importe quelle valeur entière, 0 étant sans espace (les lettres "toucheront" si elles sont proportionnelles). La fonction renvoie une valeur d'index qui doit être stockée dans une variable car elle sera nécessaire dans tous les autres codes faisant référence à cette police, ou elle retournera -1 si la fonction échoue pour une raison quelconque. Il est à noter que pour que les fonctions d'alignement des polices fonctionnent (comme draw_set_halign() ), alors le sprite de police doit avoir son origine définie dans le coin supérieur gauche. Si vous utilisez d'autres valeurs, vous devrez prendre en compte le décalage d'origine lors du dessin du texte à l'aide de la police. REMARQUE: lorsque vous chargez une police dans GameMaker Studio 2 vous devez vous rappeler de la supprimer à nouveau (avec font_delete () ) lorsqu'elle n'est plus nécessaire, sinon il y a un risque de fuite de mémoire qui ralentira et finira par planter votre jeu. Syntaxe:font_add_sprite_ext(spr, string_map, prop, sep); Argument Description spr Le sprite sur lequel ajouter une police. string_map Chaîne à partir de laquelle l'ordre des sous-images des sprites est pris. prop Définir comme police proportionnelle ou non. sep L'espace à laisser entre chaque lettre. Retour:Real Exemple:global.Font = font_add_sprite_ext(spr_CalcFont, "0123456789+-*/=", true, 2); Le code ci-dessus créera un nouvel actif de police à partir du sprite indexé dans la variable "spr_CalcFont" et stockera l'index de la nouvelle police dans la variable "global.Font". Les sous-images de la police de sprite seront mappées à la chaîne spécifiée.  Retour: Polices Suivant:font_replace © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

