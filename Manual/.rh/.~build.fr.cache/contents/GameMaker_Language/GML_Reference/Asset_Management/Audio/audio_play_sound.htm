
  
  audio_play_sound
  Avec cette fonction, vous pouvez jouer n'importe quelle ressource sonore dans votre jeu. Vous fournissez l'index du son et lui attribuez une priorité, qui est ensuite utilisée pour déterminer comment les sons sont traités lorsque le nombre de sons joués dépasse la limite fixée par la fonction 
    audio_channel_num(). Les sons de priorité inférieure seront arrêtés en faveur des sons de priorité supérieure. La valeur de la priorité peut être un nombre réel quelconque (la valeur réelle est arbitraire et peut être comprise entre 0 et 1 ou entre 0 et 100, car GameMaker Studio 2 leur accordera la même priorité).
      les classera de la même façon). Notez que lorsqu'il s'agit de priorité, plus le nombre est élevé, plus la priorité est élevée, de sorte qu'un son de priorité 100 sera favorisé par rapport à un son de priorité 1.
      priorité 1. Le dernier argument sert à faire tourner le son en boucle. Si vous lui attribuez la valeur true (vrai), le son tournera en boucle jusqu'à ce qu'il soit arrêté, et si vous lui attribuez la valeur false (faux), le son sera joué une seule fois.
      seulement.
  Cette fonction renvoie également un numéro d'index unique pour le son en cours de lecture, qui peut ensuite être stocké dans une variable afin que vous puissiez le mettre en pause ou l'arrêter avec les fonctions appropriées. Cela signifie que si vous avez plusieurs instances du même son en cours de lecture, vous pouvez cibler une seule instance de ce son.
    son en cours de lecture à un moment donné, vous pouvez cibler une seule instance de ce son à traiter à l'aide des fonctions audio.
   
  Syntaxe :
  audio_play_sound(index, priorité, boucle) ;
  
    
      
        Arguments
        Description
      
      
        indice
        L'index du son à jouer.
      
      
        priorité
        Définissez la priorité du canal pour le son.
      
      
        boucle
        Règle le son en boucle ou non.
      
    
  
   
  Les retours :
  Index (ID sonore)
   
  Exemple :
  si santé <= 0 {
     vies -= 1 ; audio_play_sound(snd_PlayerDead, 10, false) ; }
  
  Le code ci-dessus vérifie la variable globale "health" et si elle est inférieure ou égale à 0, il retire 1 de la variable globale "lives" et joue un son.
   
   
   
  
    
      
        Retour : Audio
        Suivant : audio_play_sound_at
         
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

