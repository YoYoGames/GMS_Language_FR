audio_play_sound_at Avec cette fonction, vous pouvez lire n'importe quelle ressource sonore à une position donnée dans l'espace audio. Vous fournissez l'index sonore, puis vous lui attribuez une position dans l'espace 3D. La position de l'auditeur par défaut est (0, 0, 0), cela signifie que si l'auditeur n'a pas été déplacé et que vous voulez que le son vienne de la gauche (par exemple), vous devez définir la position x sur une valeur négative (pour plus d'informations sur le réglage de la position de l'auditeur voir audio_listener_position() ). Vous pouvez également définir une distance d'atténuation (0 rendra le son silencieux, la valeur par défaut est 100) qui fera disparaître le son à mesure qu'il s'éloigne de la position de l'auditeur. La façon dont le fondu lui-même est entendu dépendra de la référence d'atténuation (qui est la distance sous laquelle le volume de la source chuterait normalement de moitié) et du facteur d'atténuation (qui affecte le son au-delà de la distance de référence d'atténuation uniquement). Le facteur par défaut est normalement 1, et l'effet des différentes valeurs d'atténuation dépendra du modèle choisi (pour un guide complet des différents modèles d'atténuation et de la façon dont ces valeurs sont utilisées, veuillez consulter la fonction audio_falloff_set_model() ). Les deux derniers arguments sont pour définir le son soit en boucle ou non et, enfin, pour attribuer une priorité au son. Cette priorité est ensuite utilisée pour déterminer comment les sons sont traités lorsque le nombre de sons joués dépasse la limite fixée par la fonction audio_channel_num(). Les sons de priorité inférieure seront arrêtés au profit des sons de priorité plus élevée, et la valeur de priorité peut être n'importe quel nombre réel (la valeur réelle est arbitraire, et peut être de 0 à 1 ou de 0 à 100, car GameMaker Studio 2 donnera la même priorité. ). Notez que lorsqu'il s'agit de priorité, plus le nombre est élevé, plus la priorité est élevée, de sorte qu'un son de priorité 100 sera privilégié par rapport à un son de priorité 1. Cette fonction renverra un numéro d'index unique pour le son en cours de lecture qui peut ensuite être stocké dans une variable afin que vous puissiez ensuite le mettre en pause ou l'arrêter avec les fonctions appropriées. Cela signifie que si plusieurs instances du même son sont lues à un moment donné, vous pouvez cibler une seule instance de ce son à utiliser avec les fonctions audio. Syntaxe:audio_play_sound_at(index, x, y, z, falloff_ref, falloff_max, falloff_factor, loop, priority); Argument Description index L'index du son à jouer. x La position x. y La position y. z La position z. falloff_ref La référence d'atténuation par rapport à l'auditeur (pince). falloff_max La distance d'atténuation maximale par rapport à l'auditeur. falloff_factor Le facteur d'atténuation (par défaut 1). loop Marque le son comme en boucle ou non. priority Définissez la priorité du canal pour le son. Retour:Index (sound ID) Exemple:if global.SFX    {
        audio_play_sound_at(snd_Waterfall, x, y, 0, 100, 300, 1, true, 1);    }
   Le code ci-dessus vérifie la variable globale "SFX" et si elle renvoie true puis le son indexé dans la variable "snd_Waterfall" sera bouclé à sa position de pièce, avec une référence d'atténuation de 100, une distance d'atténuation de 300, un facteur d'atténuation de 1 et une priorité faible.  Retour: Audio Suivant:audio_pause_sound © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

