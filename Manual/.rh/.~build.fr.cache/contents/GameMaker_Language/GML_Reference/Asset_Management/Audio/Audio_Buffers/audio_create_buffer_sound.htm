
  
  audio_create_buffer_sound
  Avec cette fonction, vous pouvez créer un nouveau son à partir du contenu d'un tampon. Le tampon aura été créé précédemment (voir les fonctions de tampon pour plus de détails sur la façon de le faire), et des données y auront été ajoutées ou chargées.
    données qui y ont été ajoutées ou chargées. Vous le passez ensuite à cette fonction avec le format de données (seuls buffer_u8 ou buffer_s16 sont actuellement supportés), la fréquence d'échantillonnage (qui peut être comprise entre 1000hz et 48000hz), et un décalage dans le tampon pour récupérer les données.
    données. Vous devez également fournir le nombre d'échantillons dans le tampon et les canaux requis par le son. Ces canaux sont définis par l'une des constantes suivantes :
   
  
    
      
        Constant
        Description
      
      
        audio_mono
        Audio mono (un seul canal).
      
      
        audio_stereo
        Audio stéréo (double canal).
      
      
        audio_3D
        Audio 3D (5.1).
      
    
  
   
  Notez qu'après avoir créé un son, vous devez libérer l'index pointeur qui lui est associé lorsqu'il n'est plus nécessaire en utilisant la fonction audio_free_buffer_sound(). Si vous ne le faites pas et que vous
    réassignez ensuite la variable ou changez de pièce, etc... l'ID du son sera perdu et vous aurez une fuite de mémoire. Notez également que vous ne pouvez pas supprimer le tampon si un son a été créé à partir de celui-ci et que le son n'a pas été libéré au préalable. Vous devez donc
    libérer le son (ou les sons) d'abord, puis supprimer le tampon. Il convient également de noter que l'ajout de quoi que ce soit au tampon, ou la modification de la taille du tampon, après qu'un son ait été créé à partir de celui-ci, donnera des résultats inattendus et n'est pas recommandé.
    - une fois que vous avez commencé à créer des sons à partir d'un tampon, vous ne devez plus le manipuler de quelque manière que ce soit.
   
  Syntaxe :
  audio_create_buffer_sound(bufferId, bufferFormat, bufferRate, bufferOffset, bufferLength, bufferChannels) ;
  
    
      
        Arguments
        Description
      
      
        bufferId
        L'ID du tampon à utiliser.
      
      
        Format de la mémoire tampon
        Le format des données dans le tampon(tampon_u8 ou tampon_s16).
      
      
        taux de tampon
        La fréquence d'échantillonnage des données dans le tampon.
      
      
        bufferOffset
        Le décalage dans le tampon pour lire les données de l'échantillon (en octets).
      
      
        longueur du tampon
        La longueur du tampon (le nombre d'octets de données audio, sans compter l'en-tête).
      
      
        canaux tampons
        Les canaux à utiliser à partir d'une des constantes listées ci-dessous.
      
    
  
   
  Les retours :
  Entier (ID du son)
   
  Exemple :
  var rate = 44100 ; var hertz = irandom_range(220, 880) ; var samples = 44100 ; var bufferId = buffer_create(rate, buffer_fast, 1) ; var buffer_seek(bufferId, buffer_seek_start, 0) ; var num_to_write = rate / hertz ; var length
    = buffer_get_size(bufferId) ; var val_to_write = 1 ; for (var i = 0 ; i < (samples / num_to_write) + 1 ; i++ ;)  {
     for (var j = 0 ; j < num_to_write ; j++ ;) {
     buffer_write(bufferId, buffer_u8, val_to_write * 255) ; }
     val_to_write = (1 - val_to_write) ; }
     soundId = audio_create_buffer_sound(bufferId, buffer_u8, rate, 0, length, audio_stereo) ;
  L'exemple ci-dessus crée un tampon, puis le remplit de manière procédurale avec des données. Ces données sont ensuite utilisées pour créer un nouveau son, qui est stocké dans la variable "soundId".
   
   
   
  
    
      
        Retour : Tampons audio
        Suivant : audio_free_buffer_sound
         
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

