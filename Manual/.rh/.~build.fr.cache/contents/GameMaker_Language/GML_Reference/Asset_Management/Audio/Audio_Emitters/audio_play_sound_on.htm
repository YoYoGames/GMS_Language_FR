
  
  audio_play_sound_on
  Cette fonction permet de lire n'importe quelle ressource sonore par le biais d'un émetteur, les modifications apportées au gain, à la position, à la hauteur ou à la vitesse de l'émetteur affectant la façon dont l'utilisateur entend le son final joué. Vous fournissez l'indice d'émetteur à utiliser, l'indice de son
    du son à jouer, puis vous indiquez si le son doit être joué en boucle ou non. Enfin, vous pouvez attribuer une priorité, qui est ensuite utilisée pour déterminer comment les sons sont traités lorsque le nombre de sons joués dépasse la limite fixée par la fonction 
    audio_channel_num(). Les sons de priorité inférieure seront arrêtés au profit des sons de priorité supérieure. La valeur de la priorité peut être un nombre réel quelconque (la valeur réelle est arbitraire et peut être comprise entre 0 et 1 ou 0 et 100, car GameMaker Studio 2 leur attribuera la même priorité).
      les classera de la même façon). Notez que lorsqu'il s'agit de priorité, plus le nombre est élevé, plus la priorité est élevée, de sorte qu'un son de priorité 100 sera favorisé par rapport à un son de priorité 1.
      priorité 1.
  Cette fonction renvoie également un numéro d'index unique pour le son en cours de lecture, qui peut ensuite être stocké dans une variable afin que vous puissiez le mettre en pause ou l'arrêter avec les fonctions appropriées. Cela signifie que si vous avez plusieurs instances du même son en cours de lecture, vous pouvez cibler une seule instance de ce son.
    son en cours de lecture à un moment donné, vous pouvez cibler une seule instance de ce son à traiter à l'aide des fonctions audio.
   
  Syntaxe :
  audio_play_sound_on(emitter, sound, loop, priority) ;
  
    
      
        Arguments
        Description
      
      
        émetteur
        L'indice de l'émetteur à utiliser.
      
      
        son
        L'index du son à utiliser.
      
      
        boucle
        Indique que le son est en boucle ou non.
      
      
        priorité
        Définissez la priorité du canal pour le son.
      
    
  
   
  Les retours :
  Index
   
  Exemple :
  if global.SFX {
     audio_play_sound_on(s_emit, snd_Explode, false, 1) ; }
  
  Le code ci-dessus vérifie la variable globale "SFX" et s'il retourne vrai, alors le son indexé dans la variable "snd_Explode" sera joué par l'émetteur indexé dans la variable "s_emit".
    avec une faible priorité et sans bouclage.
   
   
   
  
    
      
        Retour : Émetteurs audio
        Suivant : audio_emitter_get_gain
         
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

