audio_get_recorder_info Cette fonction renverra une carte DS avec des informations sur l'index source de l'enregistreur donné. Vous pouvez savoir combien de sources d'enregistreur sont disponibles à l'aide de la fonction audio_get_recorder_count(), et la carte retournée contiendra les paires clé / valeur suivantes: " nom " - un nom pour décrire l'appareil " index " - l'index à utiliser pour enregistrer " data_format " - le format des données sera renvoyé (c'est actuellement toujours buffer_s16 mais d'autres formats peuvent être pris en charge à l'avenir) " sample_rate " - la fréquence d'échantillonnage (en Hz) des données renvoyées (actuellement limitée à 16000 Hz, mais cela peut changer à l'avenir) " canaux " - la constante audio_mono (d'autres constantes pour la stéréo et la 3D peuvent être prises en charge à l'avenir) Notez que si la fonction crée une DS carte pour vous, il ne supprime pas plus tard et donc vous devriez être en train de détruire la carte vous - même quand il est plus nécessaire pour éviter toute fuite de mémoire. REMARQUE: la plupart des plates-formes, à l' exception de HTML5, prennent en charge l'enregistrement audio sous une forme ou une autre, mais cela ne signifie pas que tous les périphériques le permettront, même si la plate-forme le fait, vous devez donc toujours vérifier que la fonction audio_get_recorder_count () renvoie une valeur supérieure à 0 pour vérifier que les appareils d'enregistrement sont disponibles avant d'utiliser le reste des fonctions d'enregistrement. Syntaxe:audio_get_recorder_info(recorder_index); Argument Description recorder_index L'index de la source de l'enregistreur à partir de laquelle obtenir les informations. Retour:Integer (DS map ID) Exemple:len = async_load[? "data_len"]; audio_buff = buffer_create(len, buffer_fast, 1); buffer_copy(async_load[? "buffer_id"], 0, len, buff, 0); audio_queue_sound(audio_queue, audio_buff, 0, len); audio_play_sound(audio_queue,
    10, 0); Le code ci-dessus serait appelé dans l' événement d'enregistrement audio asynchrone et attribue certaines données enregistrées à un tampon, qui est ensuite ajouté à une file d'attente audio. Ceci est alors joué.  Arrière: Tampons audio Suivant:audio_create_buffer_sound © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

