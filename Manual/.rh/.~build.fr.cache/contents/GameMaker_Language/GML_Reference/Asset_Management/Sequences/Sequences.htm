
  
  Séquences
  Les séquences sont généralement créées dans l'IDE à l'aide de l'éditeur de séquences, mais elles peuvent également être créées et modifiées à l'aide du code. Cependant, avant d'examiner les fonctions disponibles, il est important de
    de comprendre la manière dont les séquences sont définies dans GameMaker et les différents termes qui seront utilisés.
  Pour commencer, au niveau supérieur, vous avez un élément de séquence. C'est ce que vous placez sur une couche dans une pièce, soit par le biais de l'éditeur de pièce, soit dans le code en utilisant les fonctions de couche appropriées.
    L'élément de couche n'a pas de propriétés réelles autres qu'une valeur d'ID d'élément, mais cet ID est nécessaire pour utiliser les fonctions de couche mentionnées ci-dessus afin de modifier la lecture de la séquence ou d'accéder aux données de la séquence.
  Ensuite, vous avez des objets de séquence et des instances de séquence, tout comme vous avez des objets généraux et des instances. Un objet de séquence est la ressource de base telle que vous l'avez créée dans l'Asset Browser ou en utilisant la fonction sequence_create(),
    et l'instance de séquence est la "copie" de cet objet de séquence qui a été placée dans une pièce en tant qu'élément sur une couche. Considérez les objets de séquence comme des plans et les instances de séquence comme la création à partir de ces plans. Séquence
    sont des structures et - contrairement aux objets ordinaires - une structure d'objet de séquence peut être modifiée au moment de l'exécution, ce qui aura une incidence sur toutes les autres instances de cette séquence lorsque vous les créerez en tant qu'éléments.
    (et toute modification apportée à un objet séquence ne sera pas réinitialisée par le redémarrage du jeu ou de la room à l'aide des fonctions room_restart() ou game_restart() ). La structure d'instance de séquence contient quelques paramètres pour contrôler la lecture
    et autres (ceci est expliqué plus en détail ci-dessous) ainsi que la structure de données de la séquence.
  Enfin, comme mentionné ci-dessus, vous avez les données de la séquence, qui est une autre structure. Cette structure contient toutes les données relatives à la séquence. Les pistes qu'elle contient, les propriétés de ces pistes, la vitesse de lecture et bien plus encore. Les détails exacts
    Les détails exacts du contenu de cette structure sont décrits ci-dessous, mais il s'agit essentiellement de structures de pistes d'actifs et de pistes de paramètres qui utilisent des données d'images clés pour effectuer des actions pendant la lecture de la séquence.
  Les éléments de séquence sont traités à l'aide des fonctions de la couche de salle, mais pour les objets de séquence, les instances et les données, nous disposons des fonctions suivantes :
   
  
    séquence_existe
    séquence_créer
    séquence_destruction
    séquence_get
    séquence_piste_nouveau
    séquence_cadre_clé_nouveau
    séquence_données_clés_nouvelle
    séquence_get_objets
    objet de recouvrement de l'instance de la séquence
  
   
  Il existe également une variable intégrée associée aux instances qui peut être utilisée pour déterminer si l'instance a été utilisée dans une séquence ou non :
   
  
    dans_séquence
  
  IMPORTANT ! Si votre séquence contient des instances, celles-ci ne doivent pas changer leur image_xscale / image_yscale /.
    image_angle x / y, car elles seront écrasées lorsque la séquence mettra à jour chaque pas
      met à jour chaque étape après avoir commencé à être jouée.
   
  Avant d'utiliser ces fonctions pour créer ou modifier des séquences, nous vous recommandons de lire les descriptions détaillées données ci-dessous pour les propriétés des structures. Voici un aperçu général de la façon de créer une nouvelle séquence :
  
    Créez le nouvel objet séquence à l'aide de la fonction seqeunce_create() et stocke l'index de l'objet séquence dans une variable. Cet index vous permet d'accéder à la structure de l'objet séquence.
  
  myseq = sequence_create() ;
  
    Définissez les valeurs de haut niveau de l'objet séquentiel, comme la longueur, le mode de lecture, la vitesse de lecture, etc... Par exemple :
  
  myseq.length = 120 ; myseq.loopmode = seqplay_pingpong
  
    Avant de pouvoir ajouter des pistes à l'objet séquence, vous devez les créer, donc vous allez maintenant créer un tableau de pistes d'actifs qui ont été définies avec la fonction sequence_track_new(). Notez que
      dans le code, il n'y a pas vraiment de différence entre les pistes de ressources et les pistes de paramètres - il s'agit simplement de pistes et leur comportement dépend du type de piste que vous créez et du fait qu'elles soient assignées en tant que sous-pistes à une piste de niveau supérieur ou non.
      Ainsi, vous pouvez créer une piste pour un actif, puis lui attribuer des sous-pistes pour les différents paramètres et ces sous-pistes agiront comme des pistes de paramètres pour l'actif. L'exemple ci-dessous crée une seule piste pour un actif graphique qui sera
      qui sera ajoutée à la séquence ultérieurement :
  
  var mytracks = array_create(1) ; mytracks[0] = sequence_track_new(seqtracktype_graphic) ;
  
    Chaque piste d'actif doit avoir des données pour indiquer à la séquence son apparence, sa position, etc... et ceci est ajouté sous la forme de images-clés. Au niveau supérieur d'une piste d'actif, vous pouvez définir des images clés pour divers éléments (listés dans la section sur la structure de piste, ci-dessous).
      sur la structure de la piste, ci-dessous), mais notez que comme il s'agit d'images clés de piste d'asset, elles ne seront pas interpolées et changeront simplement la valeur à laquelle elles se réfèrent lorsque l'image donnée sera atteinte. Chaque image clé est un struct qui est ajouté à un tableau,
      et ce tableau est ensuite assigné à la piste de l'actif. Pour créer la structure de l'image clé, il faut appeler la fonction sequence_keyframe_new() et pour remplir l'image-clé avec les données requises, nous utiliserons
      la fonction sequence_keyframedata_new():
  
  // Créez une nouvelle structure d'image clé pour une piste d'actif graphique et ajoutez-la à un tableau (car vous pouvez avoir plusieurs clés dans une image) var graphickeys = array_create(1) ; graphickeys[0] = sequence_keyframe_new(seqtracktype_graphic) ; // Définissez les données de haut niveau de l'image clé graphique pour la position et la longueur de l'image clé, etc.
    données de haut niveau de l'image clé graphique pour la position et la longueur de l'image clé, etc... graphickeys[0].frame = 0 ; graphickeys[0].length = 1 ; graphickeys[0].stretch = true ; graphickeys[0].disabled = false ; // Crée les données de canal qui seront utilisées dans cette
    qui iront dans cette image clé (encore une fois un tableau, car chaque clé peut avoir plusieurs canaux de données d'image clé ) var graphickeydata = array_create(1) ; graphickeydata[0] = sequence_keyframedata_new(seqtracktype_graphic) ; graphickeydata[0].spriteIndex
    = spr_Platform ; graphickeydata[0].channel = 0 ; // Ajoute les canaux de données d'images clés à l'image clé dela piste graphique graphickeys[0].channels = graphickeydata ; // Ajoute les images clés définies à la piste mytracks[0].name = "TestGraphicTrack" ; mytracks[0]. keyframes= graphickeys;
  
    Nous devons maintenant créer une piste de paramètres que nous assignerons comme sous-piste à la piste graphique que nous venons de créer. Cela se fera de la même manière que ci-dessus, mais nous devons maintenant donner à la piste un nom qui indique son but, dans ce cas-ci
      "position" car nous utiliserons cette piste pour déplacer la piste graphique au cours des images d'animation de la séquence :
  
  // Créer une nouvelle structure de piste de paramètres pour la position du graphique var paramtracks = array_create(1) ; paramtracks[0] = sequence_track_new(seqtracktype_real) ; paramtracks[0].name = "position" ; paramtracks[0].interpolation
    = true ; // Créez la structure d'image clé pour contenir les données du canal de paramètres et définissez la position de l'image clé var paramkeys = array_create(2) ; paramkeys[0] = sequence_keyframe_new(seqtracktype_real) ; paramkeys[0].frame =
    0 ; paramkeys[1] = sequence_keyframe_new(seqtracktype_real) ; paramkeys[1].frame = 120 ; // Créer les structures de données d'images clés var paramkeydata1 = array_create(2) ; paramkeydata1[0] = sequence_keyframedata_new(seqtracktype_real) ; paramkeydata1[0].channel = 0 ; // Canal 0 pour une piste de position est la position X paramkeydata1[0].value = 0 ; paramkeydata1[1] = sequence_keyframedata_new(seqtracktype_real) ; paramkeydata1[1].channel = 1 ; // Canal 1 pour une position
    la piste est la position Y paramkeydata1[1].value = 0 ; var paramkeydata2 = array_create(2) ; paramkeydata2[0] = sequence_keyframedata_new(seqtracktype_real) ; paramkeydata2[0].channel = 0 ; paramkeydata2[0].value = room_width ; paramkeydata2[1] = sequence_keyframedata_new(seqtracktype_real) ; paramkeydata2[1].channel = 1 ; paramkeydata2[1].value = room_height ; // Affecte les structures de données d'images clés aux canaux pour chaque clé paramkeys[0].channels = paramkeydata1 ; paramkeys[1].channels = paramkeydata2 ; // Affecte les clés à la piste de paramètres paramtracks[0].keyframes = paramkeys ;
  
    Ceci étant fait, la dernière chose à faire est d'assigner la piste de paramètres comme sous-piste à notre piste principale d'actifs graphiques que nous avons créée au début, puis d'assigner ces pistes à la séquence dont nous pouvons ensuite créer une instance dans la pièce :
  
  mytracks[0].tracks = paramtracks ; myseq.tracks = mytracks ; layer_sequence_create("Assets_1", 0, 0, myseq) ;
  Les instructions ci-dessus créent un objet séquence très simple qui dessine un sprite à la position (0, 0) de la séquence, puis le déplace vers le coin inférieur droit et inversement dans une boucle. Comme mentionné, il existe un certain nombre d'endroits où vous devez
    d'accéder à différentes structs pour donner ou obtenir des données sur la séquence, et les sections ci-dessous listent toutes les différentes propriétés que ces structs contiennent :
  
    La structure de l'objet séquence
    La structure d'instance de séquence
    La structure de la piste
    La structure des images clés 
    La structure de données des images clés 
  
   
  Enfin, il est possible d'ajouter du code aux séquences qui peuvent être déclenchées soit comme un événement par moment, soit comme un message de diffusion. Ceci est expliqué en détail à la page suivante :
  
    Événements, moments et messages diffusés
  
   
   
   
  
    
      
        Retour : Gestion des actifs
        Suivant : Polices de caractères
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

