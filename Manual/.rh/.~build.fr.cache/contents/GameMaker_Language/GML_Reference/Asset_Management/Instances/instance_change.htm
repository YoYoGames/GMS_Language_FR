instance_change Vous pouvez utiliser cette fonction pour changer une instance d'un objet en une autre instance d'un objet différent et, ce faisant, décider s'il faut exécuter les instances initiales Destroy and Clean Up Events et les nouvelles instances Create Event. De cette façon, vous pouvez faire (par exemple) changer une bombe en explosion - auquel cas l'argument "perf" serait probablement vrai car vous voudriez que la bombe effectue son événement de destruction et son événement de nettoyage, ainsi que le explosion pour effectuer son événement de création - ou vous pourriez faire changer le personnage de votre joueur en un autre - auquel cas l'argument «perf» serait probablement faux car vous ne voulez pas que les instances exécutent leurs événements de création et de destruction / nettoyage. Il est à noter que changer l'instance signifie que vous ne devez effectuer aucune autre action avec cette instance jusqu'à l'étape suivante, en particulier en essayant d'accéder à des variables, etc... car cela provoquera une erreur. En gros, vous modifiez l'instance mais elle n'est réellement disponible qu'à la fin de l'étape en cours, donc pour accéder directement à l'une des variables qu'elle contient (par exemple, appeler obj_Changed.x ) ne fonctionnera pas. ATTENTION! Lors de la modification d'une instance activée pour la physique, les propriétés physiques ne seront pas transférées à la nouvelle instance en cours de modification. Par conséquent, vous devez avoir un code en place pour "transférer" l'état physique de l'instance actuelle vers la nouvelle instance, ou avoir défini les propriétés physiques des nouvelles instances dans son événement de création ou dans l'éditeur d'objets. Pour cette raison, il est recommandé de ne pas utiliser cette fonction avec des instances activées pour la physique, mais plutôt d'utiliser une combinaison de instance_destroy () et instance_create_layer (). Syntaxe:instance_change(obj, perf); Argument Description obj Le nouvel objet dans lequel l'objet appelant se transforme. perf Indique s'il faut exécuter les événements de création et de destruction de ce nouvel objet (vrai) ou non (faux). Retour:N/A Exemple:if keyboard_check(vk_enter)     {
         instance_change(obj_Player_Swimming, false);     exit;
         }
   Le code ci-dessus changera l'instance appelante en une instance de "obj_Player_Swimming" sans exécuter l'événement de destruction des instances d'origine ni l'événement de création de nouvelles instances lorsque l'utilisateur appuie sur la touche "Entrée", sortant du bloc de code une fois terminé.  Retour: Instances Suivant:instance_copy © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

