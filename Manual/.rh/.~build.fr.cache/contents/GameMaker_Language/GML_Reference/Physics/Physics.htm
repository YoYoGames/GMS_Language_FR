 La physique L'intégration d'une bibliothèque de physique dédiée à GameMaker Studio 2 signifie que vous pouvez désormais prendre le contrôle de tous les aspects du comportement physique des objets dans votre monde de jeu, en particulier les collisions et l'interaction avec les objets. Le système de collision «traditionnel» (auquel GameMaker Studio 2 est par défaut) est un système «réactif», dans lequel vous recherchez une collision et réagissez ensuite à cette collision avec le code que vous placez dans des objets individuels. C'est bien pour les jeux simples, mais lorsque vous avez un grand nombre d'objets et que vous devez coder la façon dont ils réagissent tous à différentes situations dans le monde du jeu, il devient rapidement évident que ce système n'est tout simplement pas suffisant. C'est à ce moment-là que vous devez vous tourner vers le système physique GameMaker Studio 2 Le système physique fonctionne d'une manière très différente des collisions normales. Il s'agit plutôt d'un système «passif» où vous définissez une série de propriétés pour vos objets dans le monde du jeu, ainsi que les propriétés du monde du jeu lui-même, avant toute collision ou interaction. Ces «règles» codées régiront alors la manière dont tout dans votre monde de jeu interagit. De cette façon, avec quelques codes simples et la configuration correcte de la pièce, vous pouvez créer des interactions très complexes entre les objets et le monde qui se produiront et se résoudront sans que vous ayez à coder pour chaque résultat possible. Il y a quelques points à noter lorsque vous travaillez avec le monde physique de GameMaker Studio 2 Le système physique existe «en dehors» de la structure de base de la pièce et de l'instance de GameMaker Studio 2 ce qui signifie que ses timings et ses fonctions ne sont pas nécessairement liés à la vitesse de la pièce et à l'ordre des pas comme tout le reste. Le système physique remplace de nombreuses fonctions d'instance normales... par exemple, plutôt que de définir une vitesse et une direction pour une instance, si elle a été déclarée comme étant un corps physique entièrement simulé, vous utiliseriez une force ou une impulsion pour obtenir pour se déplacer dans le monde du jeu, ou si la physique n'est pas activée, vous devrez définir vous-même les positions x et y. Cela prend un peu de temps pour s'y habituer, alors expérimentez les fonctions physiques et apprenez à savoir comment tout fonctionne avant d'essayer de les intégrer dans votre projet. Vous devez limiter le nombre d'instances créées, ainsi que le nombre de collisions et de groupes de collisions auxquels le monde de la physique doit faire face. Vous ne pouvez pas avoir des milliers d'instances, toutes avec des propriétés physiques et des collisions et vous attendre à ce que tout fonctionne correctement car la physique nécessite des calculs assez intensifs, alors limitez-vous et optimisez si possible. Lors de la configuration des collisions, utilisez les parents autant que possible car le système de collision dispose d'un nombre limité de bits de collision disponibles à attribuer aux instances pour que Box2D détecte les collisions. Par exemple, si vous avez cinq objets de mur différents, ne recherchez pas cinq collisions, créez plutôt un objet parent et affectez-le aux cinq murs, puis faites UN contrôle de collision avec le parent. Les propriétés physiques des objets ne sont pas héritées uniquement des collisions. De cette façon, vous pouvez garder votre jeu optimisé et sans erreur. Essayez de ne pas déplacer les instances d'un point de la pièce à un autre autrement qu'en utilisant les fonctions physiques (c'est-à-dire: ne définissez pas les coordonnées x / y manuellement). Bien que cela puisse être fait et que cela puisse être nécessaire dans certaines circonstances, cela doit généralement être évité en raison des résultats imprévisibles que cela peut avoir sur le moteur physique, en particulier lorsque vous essayez de résoudre des collisions. Des précautions doivent être prises lors de la liaison d'appareils fixes, car ils peuvent être liés à des objets et des instances indépendamment. Cela signifie que si vous liez un appareil à (par exemple) «o_Wall», toutes les instances de cet objet obtiendront l'appareil. Si vous ne souhaitez lier un appareil qu'à une seule instance, utilisez l'ID de cette instance dans la fonction appropriée. Veuillez noter qu'en raison des différences de précision en virgule flottante, vous pouvez constater que les versions de votre jeu pour différentes plates-formes cibles peuvent présenter un comportement légèrement différent de la Windows, bien que chaque version soit auto-cohérente lors des exécutions ultérieures. Pour éviter les instabilités dans la simulation physique, Box2D contraint à des limites supérieures la quantité de rotation et de translation d'un corps en une seule mise à jour. Les limitations apparentes varieront en fonction de la précision de la simulation physique en fonction du nombre de mises à jour et de la vitesse de mise à jour du monde de la physique, et également en fonction de la mise à l'échelle du monde de la physique. Cela signifie que (par exemple) si vous avez une vitesse de mise à jour mondiale de 60, la vitesse de déplacement maximale serait de 20. Vous trouverez des informations sur les fonctions physiques dans les pages suivantes: Le monde de la physique Les forces Agencements Les articulations Particules corporelles molles Variables de physique Enfin, il existe quelques fonctions physiques spéciales qui peuvent être utiles pour des simulations physiques plus avancées. Le premier est pour tester les collisions possibles à un point spécifique de la pièce, et le second est pour générer des propriétés de masse et d'inertie personnalisées dans une instance:physics_test_overlapphysics_mass_properties Retour: Référence GML Suivant: Achats intégrés © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

