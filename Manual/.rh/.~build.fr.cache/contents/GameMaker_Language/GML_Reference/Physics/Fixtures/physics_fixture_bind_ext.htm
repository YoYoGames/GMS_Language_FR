
  
  physics_fixture_bind_ext
  Une fois que nous avons défini notre dispositif, il doit être lié à une instance. Cela signifie que ses propriétés sont transférées à l'instance sélectionnée, et non au dispositif lui-même, de sorte qu'un dispositif peut être lié à plusieurs instances si toutes doivent avoir les mêmes propriétés.
    avoir les mêmes propriétés. Vous pouvez spécifier un index d'objet pour la cible et toutes les instances présentes dans la pièce à ce moment-là recevront les propriétés de ce luminaire (mais pas les nouvelles instances de l'objet créées ultérieurement), ou vous pouvez utiliser les mots-clés spéciaux
    spéciaux other et all. Vous pouvez même spécifier un objet parent et toutes les instances enfants avec ce parent recevront également le fixture. Une fois que le repère a été lié à toutes les instances dont vous avez besoin, il peut être supprimé s'il n'est plus nécessaire.
    Les instances possédant les propriétés de ce dispositif ne seront pas affectées et conserveront ces propriétés.
  Normalement, la fixation sera liée à l'instance avec le centre de masse positionné à l'origine de l'instance, cependant ce n'est pas toujours ce dont vous avez besoin et donc cette fonction vous permet également de décaler la position x et y où la fixation est liée d'une quantité donnée (si vous n'avez pas besoin de cela, utilisez la fonction physics_fixture_bind().
    est lié d'une quantité donnée (si vous n'avez pas besoin de cela, utilisez plutôt la fonction physics_fixture_bind() à la place). Il est important de noter qu'un appareil ne peut supporter qu'un seul décalage.
    à un seul appareil n'est pas supporté par Box2D.
  La fonction renvoie également une valeur "id" unique pour le dispositif lié (pas ledispositif lui-même) qui peut ensuite être utilisée pour supprimer ("délier") les propriétés physiques de l'instance à l'aide de la fonction physics_remove_fixture(). Cela vous permet
    d'ajouter et de supprimer des propriétés physiques d'une instance sans avoir à détruire et recréer des objets.
  REMARQUE: les installations doivent être supprimées lorsqu'elles ne sont plus nécessaires, faute de quoi elles risquent de provoquer une fuite de mémoire qui ralentira et finira par faire planter votre jeu.
   
  Syntaxe :
  physics_fixture_bind_ext(fixture, target, xoffset, yoffset)
  
    
      
        Arguments
        Description
      
      
        L'appareil
        l'appareil qui doit être lié
      
      
        cible
        l'instance cible qui doit recevoir la fixation (peut être un identifiant d'instance, un identifiant d'objet, autre, ou tous)
      
      
        xoffset
        le décalage le long de l'axe des x
      
      
        yoffset
        le décalage le long de l'axe des y
      
    
  
   
  Les retours :
  Real
   
  Exemple :
  var fix, inst ; fix = physics_fixture_create() ; physics_fixture_set_circle_shape(fix, 16) ; physics_fixture_set_density(fix, 1.0) ; inst = instance_create_layer(x, y, "Instances", genericBodyObject) ; my_fix = physics_fixture_bind_ext(fix,
    inst, sprite_width / 2, -(sprite_height / 2)) ; physics_fixture_delete(fix) ;
  
  Le code ci-dessus va créer un fixture et affecter son index à la variable "fix". Il définit ensuite la forme et la densité du repère avant de le lier à l'instance avec un décalage basé sur la largeur et la hauteur du sprite. L'index du
    le dispositif lié est stocké dans la variable "my_fix". Enfin, la fixation elle-même est supprimée pour éviter les fuites de mémoire car elle n'est plus nécessaire.
   
   
   
  
    
      
        Retour : Fixtures
        Suivant : physics_fixture_set_collision_group
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

