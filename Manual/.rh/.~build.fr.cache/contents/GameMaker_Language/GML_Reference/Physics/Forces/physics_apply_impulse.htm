
  
  physique_appliquer_impulsion
  Non seulement vous pouvez appliquer une force et une gravité à un objet avec la physique de GameMaker Studio 2, mais vous pouvez également appliquer une impulsion. Celle-ci est légèrement différente d'une force dans la mesure où, lorsqu'elle est appliquée, elle affecte immédiatement la vitesse, et,
    potentiellement le couple (ou "spin") de l'objet, en particulier si le point choisi pour appliquer l'impulsion n'est pas aligné avec le centre de masse (remarque : le centre de masse n'est pas nécessairement le même que l'origine !) Voici une illustration :
  Comme vous pouvez le voir, le joueur a cliqué sur la balle, ce qui lui a donné une impulsion pour se déplacer vers le haut à droite, en tournant sur elle-même.
    pour se déplacer vers la partie supérieure droite, en tournant sur elle-même. L'impulsion exacte est définie par le vecteur que nous obtenons à partir des composantes ximpulse/yimpulse en relation avec les coordonnées xpos/ypos - ce qui signifie simplement que l'impulsion est calculée comme la distance de
    Cela signifie simplement que l'impulsion est calculée comme la distance entre xpos/ypos et ximpulse/yimpulse en Newtons, et que la direction est l'angle que nous obtenons entre xpos/ypos et ximpulse/yimpulse.
  NOTE: Le monde physique utilise des mètres pour tous ses calculs, et le ratio de pixels par mètre est défini dans l'éditeur de pièce ou en utilisant la méthode suivante physics_world_create().
   
  Syntaxe :
  physics_apply_impulse(xpos, ypos, ximpulse, yimpulse)
  
    
      
        Arguments
        Description
      
      
        xpos
        La coordonnée x dans la pièce où l'impulsion sera appliquée.
      
      
        ypos
        La coordonnée y dans la pièce où l'impulsion sera appliquée.
      
      
        ximpulse
        la composante x du vecteur d'impulsion
      
      
        yimpulse
        la composante y du vecteur d'impulsion
      
    
  
   
  Les retours :
  N/A
   
  Exemple :
  if mouse_check_button_pressed(mb_left) {
     with (place_meeting(mouse_x, mouse_y, all)) {
     physics_apply_impulse(mouse_x, mouse_y, -10 + irandom(20), -10 + irandom(20)) ; }
     }
  
  Le code ci-dessus va appliquer une impulsion avec un vecteur aléatoire à une instance qui se trouve à la position de la souris lorsque le bouton gauche est pressé.
   
   
   
  
    
      
        Retour : Forces
        Suivant : physics_apply_local_force
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

