
  
  physique_appliquer_impulsion_locale
  Non seulement vous pouvez appliquer une force et une gravité à un objet avec la physique de GameMaker Studio 2, mais vous pouvez également appliquer une impulsion. Celle-ci est légèrement différente d'une force dans la mesure où, lorsqu'elle est appliquée, elle affecte immédiatement la vitesse, et,
    potentiellement le couple (ou "spin") de l'objet, en particulier si le point choisi pour appliquer l'impulsion a un vecteur qui n'est pas aligné avec le centre de masse (note : le centre de masse n'est pas nécessairement le même que l'origine !)
    Cette fonction applique une impulsion localement à une instance. Cela signifie que la force et la direction de l'impulsion sont calculées en fonction de l'origine (ou de la position si l'instance n'a pas de sprite) de l'instance, sans prendre en compte
    la direction ou la rotation qu'elle peut avoir dans la salle de jeu ou le monde physique. Voici une illustration :
  Comme vous pouvez le voir, la grenouille dans l'image reçoit une impulsion par le bas pour
    pour la faire "sauter". L'impulsion exacte est définie par le vecteur que nous obtenons à partir des composantes ximpulse/yimpulse par rapport aux coordonnées xpos/ypos - ce qui signifie simplement que l'impulsion est calculée comme la distance de xpos/ypos à ximpulse/yimpulse
    en Newtons, et la direction est l'angle que l'on obtient de xpos/ypos à ximpulse/yimpulse.
  NOTE: Le monde physique utilise des mètres pour tous ses calculs, et le ratio de pixels par mètre est défini dans l'éditeur de pièce ou en utilisant la méthode suivante physics_world_create().
   
  Syntaxe :
  physics_apply_local_impulse(xpos, ypos, ximpulse, yimpulse)
  
    
      
        Arguments
        Description
      
      
        xpos
        La coordonnée x par rapport à l'origine où l'impulsion sera appliquée.
      
      
        ypos
        La coordonnée y relative à l'origine où l'impulsion sera appliquée.
      
      
        ximpulse
        la composante x du vecteur d'impulsion (par rapport à la coordonnée xpos)
      
      
        yimpulse
        la composante y du vecteur d'impulsion (par rapport à la coordonnée ypos)
      
    
  
   
  Les retours :
  N/A
   
  Exemple :
  if jump { physics_apply_local_impulse(0, 20, 0, 50) ; }
  Le code ci-dessus appliquera une impulsion avec une force de 30 Newtons et une direction allant de bas en haut par rapport à l'origine de l'instance si la variable "jump" est vraie.
   
   
   
  
    
      
        Retour : Forces
        Suivant : physics_apply_torque
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

