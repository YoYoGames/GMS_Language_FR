physics_particle_get_data Cette fonction renvoie diverses informations sur chaque particule dans la simulation physique en utilisant les indicateurs donnés cochés. Le tampon utilisé doit avoir été créé au préalable à l'aide de la fonction buffer_create(), et doit être du type «grandir», la taille étant approximativement celle des données de retour attendues. Les indicateurs sont définis en utilisant l'une des constantes ci-dessous, et vous utiliseriez le bit au niveau du bit ou "|" pour créer une valeur d'indicateur unique pour obtenir les informations souhaitées. Constant Description Type de données phy_particle_data_flag_typeflags La valeur des indicateurs pour la particule. buffer_u32 phy_particle_data_flag_position Les positions x et y de la particule. 2 x buffer_f32 phy_particle_data_flag_velocity La vitesse horizontale et verticale. 2 x buffer_f32 phy_particle_data_flag_colour La couleur et la valeur alpha (hexadécimale). buffer_f32 phy_particle_data_flag_category La catégorie de particules (telle que définie lorsque vous avez créé la particule ou le groupe auquel elle appartient). buffer_u32 Syntaxe:physics_particle_get_data(buffer, flags) Argument Description buffer Le tampon (créé précédemment) à utiliser pour stocker les données. flags Les indicateurs à utiliser pour extraire des données sur des types de particules spécifiques. Retour:Buffer data Exemple:var count = physics_particle_count(); var flags = phy_particle_data_flag_position | phy_particle_data_flag_colour; if (count > 0)     {
         var buffer = buffer_create(count * 12, buffer_grow, 4);     physics_particle_get_data(buffer, flags);     for (var n = 0; n < count; n++;)         {
             var xx = buffer_read(buffer, buffer_f32);         var yy = buffer_read(buffer, buffer_f32);         var argb = buffer_read(buffer, buffer_u32);         var alpha = (argb >> 24) & 255;         draw_sprite_ext(sprBlob,
    0, xx, yy, 1, 1, 0, c_green, alpha);         }
         buffer_delete(buffer);
         }
   Le code ci-dessus obtient le nombre de particules et crée une variable avec les indicateurs de données à vérifier, puis vérifie s'il y a des particules dans la pièce. Si tel est le cas, un tampon est créé, puis rempli avec les données de particule, qui sont vérifiées et utilisées pour dessiner un sprite à la position de la particule.  Retour: Particules corporelles molles Suivant:physics_particle_get_data_particle © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

