
  
  physique_joint_roue_créer
  Un joint de roue combine simplement un piston et un joint tournant, comme une roue montée sur l'amortisseur d'une voiture. Vous spécifiez le point d'ancrage de l'articulation ainsi que les deux instances activées par la physique pour l'articulation, et la première instance agira comme le "corps" de l'articulation, tandis que la seconde sera la "roue".
    pour le joint, tandis que la seconde sera la "roue", et sera autorisée à se déplacer librement autour de l'axe du joint. Vous pouvez également définir un vecteur d'axe, qui est la ligne imaginaire le long de laquelle l'articulation agira comme un "ressort" permettant à la roue de rebondir le long de l'axe.
    roue de rebondir le long de cette ligne lorsqu'elle rencontre des obstacles (tout comme l'articulation à piston). L'image suivante illustre cela :
  Si vous choisissez d'activer un moteur, alors la deuxième instance tournera autour de la position d'ancrage, et
    vous pouvez définir le couple moteur maximal utilisé pour atteindre la vitesse moteur souhaitée (N/m) ainsi que la vitesse à laquelle le moteur doit tourner. Comme l'articulation de la roue a également un axe le long duquel elle peut se déplacer, vous pouvez définir la fréquence d'oscillation (en Hz) ainsi que le rapport d'amortissement pour l'articulation de la roue.
    Vous devrez peut-être jouer avec ces valeurs pour les affiner et il est recommandé de commencer par des valeurs plus petites et de les augmenter jusqu'à ce que vous obteniez l'effet désiré.
  Comme pour tous les joints, si vous définissez la valeur "col" sur true, les deux instances peuvent interagir et entrer en collision l'une avec l'autre, mais seulement si elles ont des événements de collision .
    quoi qu'il arrive.
   
  Syntaxe :
  physics_joint_wheel_create(inst1, inst2, anchor_x, anchor_y, axis_x, axis_y, enableMotor, max_motor_torque, motor_speed, freq_hz, damping_ratio, col)
  
    
      
        Arguments
        Description
      
      
        inst1
        La première instance à se connecter avec l'articulation
      
      
        inst2
        La deuxième instance pour se connecter avec le joint
      
      
        anchor_x
        La coordonnée x où l'articulation est ancrée, dans le monde du jeu.
      
      
        anchor_y
        La coordonnée y où l'articulation est ancrée, dans le monde du jeu.
      
      
        axis_x
        La composante x du vecteur de l'axe de la roue
      
      
        axis_y
        La composante y du vecteur de l'axe de la roue
      
      
        enableMotor
        Si le moteur doit être actif (true) ou non (false).
      
      
        couple_moteur_maximal
        Définit le couple moteur maximal utilisé pour atteindre la vitesse moteur souhaitée (en Newtons par mètre).
      
      
        vitesse du moteur
        C'est la vitesse à laquelle le moteur doit tourner.
      
      
        freq_hz
        C'est la fréquence d'oscillation de l'articulation, en hertz.
      
      
        rapport d'amortissement
        Ce rapport d'amortissement pour l'articulation
      
      
        col
        Si les deux instances peuvent entrer en collision (vrai) ou non (faux).
      
    
  
   
  Les retours :
  Nombre entier (indice de l'articulation)
   
  Exemple :
  var mainFixture = physics_fixture_create() ; physics_fixture_set_box_shape(mainFixture, 128, 32) ; var wheelFixture = physics_fixture_create() ; physics_fixture_set_circle_shape(wheelFixture, 32) ; var o_id = instance_create_layer(x+25,
    y + 100, "Instances", obj_Wheel) ; physics_fixture_bind(mainFixture, id) ; physics_fixture_bind(wheelFixture, o_id) ; physics_joint_wheel_create(id, o_id, o_id.x, o_id.y, 0, 1, true, 10, 1, 15, 6, false) ; physics_fixture_delete(mainFixture) ;
     physics_fixture_delete(wheelFixture) ;
  
  Le code ci-dessus crée et définit deux nouveaux déplacements imposés. Ils sont ensuite liés à l'instance appelante et à une nouvelle instance qui est créée avant qu'un joint de roue ne soit appliqué pour les relier, après quoi les dispositifs sont supprimés de la mémoire.
   
   
   
  
    
      
        Dos : Articulations
        Suivant : physics_joint_weld_create
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

