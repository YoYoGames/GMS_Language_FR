
  
  physique_joint_poulies_créer
  Le joint de poulie est utilisé pour connecter deux instances dans le monde physique de telle sorte que le déplacement de l'une d'elles influence directement le mouvement de l'autre. Ces articulations sont d'abord ancrées dans l'espace du monde en deux points, chacun étant connecté à une instance
    à son centre de masse. Ceci peut être modifié en réglant les coordonnées x/y de l'ancrage local par rapport à l'origine de l'instance, ce qui signifie que la connexion réelle de l'instance au point d'ancrage du monde physique peut être décalée ailleurs qu'à son origine.
    que son origine. L'image suivante illustre cela :
  Si vous regardez inst2, vous pouvez voir que son point d'ancrage local a été décalé de 20 pixels vers la "gauche" de son origine.
    de son origine (N'oubliez pas ! Les points d'ancrage mondiaux sont définis à l'aide des coordonnées de la salle, tandis que les points d'ancrage locaux sont définis par rapport à l'origine de l'instance). Vous pouvez également spécifier un ratio pour le joint de la poulie, ce qui indique à un côté ou à l'autre de se déplacer plus rapidement, avec un ratio plus élevé.
    Une valeur inférieure à 1 fait bouger la première instance plus vite (par exemple, 0,5 la fera bouger deux fois plus vite) et une valeur supérieure à 1 fait bouger la seconde instance plus vite (par exemple, 2 la fera bouger deux fois plus vite).
  Comme pour tous les joints, si vous définissez la valeur "col" sur true, les deux instances peuvent interagir et entrer en collision l'une avec l'autre, mais seulement si elles ont des événements de collision .
    quoi qu'il arrive.
   
  Syntaxe :
  physics_joint_pulley_create(inst1, inst2, w_anchor1_x, w_anchor1_y, w_anchor2_x, w_anchor2_y, l_anchor1_x, l_anchor1_y, l_anchor2_x, l_anchor2_y, ratio, col)
  
    
      
        Arguments
        Description
      
      
        inst1
        La première instance à se connecter avec l'articulation
      
      
        inst2
        La deuxième instance pour se connecter avec le joint
      
      
        w_anchor1_x
        La coordonnée x où la première partie de l'articulation est ancrée, dans le monde du jeu.
      
      
        w_anchor1_y
        La coordonnée y où la première partie de l'articulation est ancrée, dans le monde du jeu.
      
      
        w_anchor2_x
        La coordonnée x où la deuxième partie de l'articulation est ancrée, dans le monde du jeu.
      
      
        w_anchor2_y
        La coordonnée y où la deuxième partie de l'articulation est ancrée, dans le monde du jeu.
      
      
        l_anchor1_x
        La coordonnée x locale où l'articulation 1 est ancrée à la première instance.
      
      
        l_anchor1_y
        La coordonnée locale y où l'articulation 1 est ancrée à la première instance.
      
      
        l_anchor2_x
        La coordonnée x locale où l'articulation 2 est ancrée à la deuxième instance.
      
      
        l_anchor2_y
        La coordonnée locale y où l'articulation 2 est ancrée à la deuxième instance.
      
      
        rapport
        Définir le rapport de vélocité entre deux instances
      
      
        col
        Si les deux instances peuvent entrer en collision (vrai) ou non (faux).
      
    
  
   
  Les retours :
  Nombre entier (indice de l'articulation)
   
  Exemple :
  var t_fix, inst1, inst2 ; t_fix = physics_fixture_create() ; physics_fixture_set_circle_shape(t_fix, 20) ; inst1 = instance_create_layer(150, room_height - 90, "Instances", obj_Block) ; inst2 = instance_create_layer(300, room_height
    - 90, "Instances", obj_block) ; physics_fixture_bind(t_fix, inst1) ; physics_fixture_bind(t_fix, inst2) ; physics_joint_pulley_create(inst1, inst2, 150, room_height - 140, 300, room_height - 140, 0, 0, 0, 0, 0, 2, 0) ; physics_fixture_delete(t_fix) ;
  
  Le code ci-dessus crée et définit un nouveau dispositif de fixation, crée deux instances de "obj_Block", puis lie ce dispositif de fixation à celles-ci. Il définit ensuite un joint de poulie entre ces instances, sans décalage pour les joints, avec un rapport de 2:1 (ce qui signifie que
    que l'inst2 se déplacera plus rapidement). Aucune collision ne se produit entre les deux instances dans la poulie.
   
   
   
  
    
      
        Dos : Articulations
        Suivant : physics_joint_gear_create
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

