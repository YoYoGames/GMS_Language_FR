physics_joint_prismatic_create Comme une articulation révolutionnaire, l'articulation prismatique n'a qu'un seul degré de liberté, mais avec cette articulation, elle est directionnelle par rapport à un axe plutôt que rotative et empêche en fait toute forme de rotation. Voici une image pour vous aider à visualiser comment cela fonctionne: Nous avons deux instances jointes au point d'ancrage, avec un axe de mouvement défini à partir du vecteur les deux coordonnées x / y de l'axe w par rapport aux coordonnées (0,0) du monde physique (donc une composante x de 0 et une composante ay de 1 (0,1) ferait du joint un joint prismatique vertical). Cette articulation ne peut alors se déplacer que par rapport à cet axe, comme un ressort ou un piston. Si vous définissez la limite inférieure ou supérieure de trans, vous limitez essentiellement la quantité de mouvement le long de cet axe, où la position 0 est le point exact que vous avez défini avec w_anchor x / y, donc une valeur négative irait vers la «gauche» de ce point le long de l'axe et une valeur positive vers la «droite» comme le montre le diagramme suivant (sachez que «gauche» et «droite» sont des termes relatifs!): Vous pouvez également définir l'articulation comme ayant un moteur ou non. Cela signifie que lorsqu'elle n'est pas influencée par une collision, l'articulation se déplacera dans une direction le long de l'axe. cette direction est définie par la vitesse du moteur, avec un nombre positif vers les coordonnées de l'axe ("droite") et un nombre négatif vers le point d'ancrage ("gauche"). L'argument "max_motor_force" sert à limiter la vitesse du mouvement afin de ne pas avoir de moteur en accélération perpétuelle et à limiter l'influence qu'une collision peut avoir sur le mouvement. De cette façon, vous pouvez utiliser un moteur d'articulation pour simuler le frottement d'articulation en réglant la vitesse d'articulation à zéro et la force maximale à une valeur petite mais significative. Le moteur essaiera d'empêcher le joint de bouger, mais cédera à une charge importante. Comme pour toutes les liaisons, si vous définissez la valeur "col" sur true alors les deux instances peuvent interagir et entrer en collision l'une avec l'autre, mais uniquement si elles ont des événements de collision, mais si elle est définie sur false, ils n'entreront pas en collision quoi qu'il arrive. Syntaxe:physics_joint_prismatic_create(inst1, inst2, w_anchor_x, w_anchor_y, w_axis_x, w_axis_x, lower_trans_limit, upper_trans_limit, limit, max_motor_force, motor_speed, motor, col) Argument Description inst1 La première instance à se connecter avec l'articulation inst2 La deuxième instance pour se connecter avec l'articulation w_anchor_x La coordonnée x où l'articulation est ancrée, dans le monde du jeu w_anchor_y La coordonnée y où l'articulation est ancrée, dans le monde du jeu w_axis_x La composante x du vecteur axe w_axis_y La composante y du vecteur axe lower_trans_limit La limite inférieure autorisée pour le mouvement de l'articulation upper_trans_limit La limite inférieure autorisée pour le mouvement de l'articulation limit Limiter le mouvement de l'articulation (vrai) ou non (faux) max_motor_force Règle la vitesse de déplacement maximale du moteur motor_speed C'est la vitesse à laquelle le moteur doit se déplacer motor Si le moteur doit être actif (vrai) ou non (faux) col Si les deux instances peuvent entrer en collision (vrai) ou non (faux) Retour:Integer (index of the joint) Exemple:var mainFixture, o_id; mainFixture = physics_fixture_create(); physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2); o_id = instance_create_layer(x+25, y, "Instances", obj_Piston); physics_fixture_bind(mainFixture,
    id); physics_fixture_bind(mainFixture, o_id); physics_joint_prismatic_create(id, o_id, x, y, 0, 10, 0, 0, 0, 5, 0, 1, 1); physics_fixture_delete(mainFixture);
   Le code ci-dessus crée et définit un nouveau luminaire, puis crée une instance de "obj_Piston", liant le luminaire créé aux deux nouveaux objets. Ils sont ensuite réunis par un joint prismatique avec la position d'ancrage aux mêmes coordonnées x / y de la première instance et un axe formé par le vecteur de la position x / y et de l'axe x / y (dans ce cas 0,10, qui est "vers le bas"). Il n'y a pas de limites sur la quantité de mouvement le long de cet axe, mais nous avons ajouté un moteur avec une vitesse de 0 et une force maximale de 5 pour simuler le frottement de l'articulation.  Arrière: Joints Suivant:physics_joint_pulley_create © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

