physics_joint_weld_create Le joint de soudure est conçu pour attacher deux fixations ensemble dans une liaison solide mais flexible. Le joint de soudure permettra la flexion entre les deux fixations jointes mais sans l'étirement associé, par exemple, à un joint de distance, et essaiera toujours de "ressortir" à l'angle de référence lorsqu'il est soumis à une contrainte ou une charge. Vous définissez le point dans la pièce où le joint doit être créé, ainsi que l'angle que vous souhaitez que le joint essaie de maintenir à tout moment, comme indiqué dans l'image ci-dessous: Comme vous pouvez le voir, les points d'ancrage sont spécifiés en tant que coordonnées de la pièce, il faut donc faire attention lors de leur définition, en particulier si les instances sont créées en même temps que les joints plutôt que d'être placées dans la pièce via l'éditeur de pièce. Vous devez également vous rendre compte que les liaisons sont créées indépendamment de la taille du sprite des instances ou des appareils qu'elles ont attachés. Ainsi, si vous créez un joint de soudure ailleurs qu'à l'origine de l'instance, il est toujours valide et contraindra les deux instances par rapport à la position à laquelle il a été créé. Étant donné que le joint de soudure est flexible et se pliera et fléchira sous n'importe quelle contrainte, vous pouvez définir la fréquence d'oscillation (en Hz) ainsi que le rapport d'amortissement du joint pour obtenir des effets différents - vous devrez peut-être jouer avec ces valeurs pour affiner réglez-les et il est recommandé de commencer par des valeurs plus petites et de les incrémenter jusqu'à ce que vous obteniez l'effet souhaité. Si vous définissez la valeur "col" sur true alors les deux instances peuvent interagir et entrer en collision l'une avec l'autre, mais uniquement si elles ont des événements de collision, mais si elle est définie sur false, ils n'entreront pas en collision quoi qu'il arrive. Syntaxe:physics_joint_weld_create(inst1, inst2, anchor_x, anchor_y, ref_angle, freq_hz, damping_ratio, col) Argument Description inst1 La première instance à se connecter avec l'articulation inst2 La deuxième instance pour se connecter avec l'articulation anchor_x La coordonnée x pour l'articulation, dans le monde du jeu anchor_y La coordonnée y pour l'articulation, dans le monde du jeu ref_angle L'angle d'articulation à maintenir freq_hz C'est la fréquence d'oscillation de l'articulation, en hertz damping_ratio Ce rapport d'amortissement pour le joint col Si les deux instances peuvent entrer en collision (vrai) ou non (faux) Retour:Integer (index of the joint) Exemple:var i, fix, o_id, p_id; p_id = noone; o_id = noone; fix = physics_fixture_create(); physics_fixture_set_box_shape(fix, 64, 32); for (i = 0; i < 5; i++;)     {
         o_id = instance_create_layer(x + (128 * i), y, "Instances", obj_BridgePart);     physics_fixture_bind(fix, o_id);     if i > 0 && i < 4         {
             physics_joint_weld_create(p_id, o_id, x + (128 * i) - 64, y, 0, 10, 12, true);         }
         p_id = o_id;     }
     physics-fixture_delete(fix);
   Le code ci-dessus créera un appareil, puis utilisera une boucle pour créer un certain nombre d'instances, liant l'appareil à chaque nouvelle instance, puis les joignant tous ensemble à l'aide d'un joint de soudure. Enfin, l'appareil est supprimé de la mémoire.  Arrière: Joints Suivant:physics_joint_friction_create © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

