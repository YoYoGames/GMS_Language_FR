
  
  physique_joint_soudure_créer
  Le joint de soudure est conçu pour fixer deux appareils ensemble dans une liaison solide, mais flexible. Le joint de soudure permet la flexion entre les deux pièces jointes, mais sans l'étirement associé, par exemple, à un joint à distance.
    Il essaiera toujours de revenir à l'angle de référence lorsqu'il sera soumis à une contrainte ou à une charge. Vous définissez le point de la pièce où le joint doit être créé, ainsi que l'angle que vous souhaitez que le joint essaie de maintenir à tout moment, comme le montre l'image ci-dessous.
    l'image ci-dessous :
  Comme vous pouvez le constater, les points d'ancrage sont spécifiés en tant que coordonnées de la pièce.
    surtout si les instances sont créées en même temps que les articulations plutôt que d'être placées dans la room via l'éditeur de room. Vous devez également savoir que les articulations sont créées indépendamment de la taille du sprite des instances
    ou des fixtures qu'elles ont attachées. Ainsi, si vous créez un joint de soudure ailleurs qu'à l'origine de l'instance, il est toujours valide et contraindra les deux instances par rapport à la position à laquelle il a été créé.
  Puisque le joint de soudure est flexible et qu'il se pliera et fléchira sous l'effet d'une quelconque contrainte, vous pouvez définir la fréquence d'oscillation (en Hz) ainsi que le taux d'amortissement du joint pour obtenir différents effets - vous devrez peut-être jouer avec ces valeurs pour les affiner
    et il est recommandé de commencer par de petites valeurs et de les augmenter jusqu'à ce que vous obteniez l'effet désiré.
  Si vous définissez la valeur "col" à true, les deux instances peuvent interagir et entrer en collision l'une avec l'autre, mais seulement si elles ont des événements de collision, mais si elle est définie à false, elles n'entreront pas en collision quoi qu'il arrive.
   
  Syntaxe :
  physics_joint_weld_create(inst1, inst2, anchor_x, anchor_y, ref_angle, freq_hz, damping_ratio, col)
  
    
      
        Arguments
        Description
      
      
        inst1
        La première instance à se connecter avec l'articulation
      
      
        inst2
        La deuxième instance pour se connecter avec le joint
      
      
        anchor_x
        La coordonnée x de l'articulation, dans l'univers du jeu.
      
      
        anchor_y
        La coordonnée y de l'articulation, dans l'univers du jeu.
      
      
        réf_angle
        L'angle d'articulation à maintenir
      
      
        freq_hz
        C'est la fréquence d'oscillation de l'articulation, en hertz.
      
      
        rapport d'amortissement
        Ce rapport d'amortissement pour l'articulation
      
      
        col
        Si les deux instances peuvent entrer en collision (vrai) ou non (faux).
      
    
  
   
  Les retours :
  Nombre entier (indice de l'articulation)
   
  Exemple :
  var i, fix, o_id, p_id ; p_id = noone ; o_id = noone ; fix = physics_fixture_create() ; physics_fixture_set_box_shape(fix, 64, 32) ; for (i = 0 ; i < 5 ; i++ ;) {
     o_id = instance_create_layer(x + (128 * i), y, "Instances", obj_BridgePart) ; physics_fixture_bind(fix, o_id) ; if i > 0 && i < 4 {
     physics_joint_weld_create(p_id, o_id, x + (128 * i) - 64, y, 0, 10, 12, true) ; }
     p_id = o_id ; }
     physics-fixture_delete(fix) ;
  
  Le code ci-dessus crée un dispositif, puis utilise une boucle pour créer un certain nombre d'instances, en liant le dispositif à chaque nouvelle instance, puis en les réunissant toutes à l'aide d'un joint soudé. Enfin, le dispositif est supprimé de la mémoire.
   
   
   
  
    
      
        Dos : Articulations
        Suivant : physics_joint_friction_create
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

