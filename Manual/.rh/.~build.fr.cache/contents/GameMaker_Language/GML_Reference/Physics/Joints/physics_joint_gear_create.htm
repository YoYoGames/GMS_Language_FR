physics_joint_gear_create Si vous souhaitez créer un engin mécanique sophistiqué, vous voudrez peut-être utiliser des engrenages. En principe, vous pouvez créer des engrenages dans GameMaker Studio 2 en utilisant des instances de composition pour modéliser les dents d'engrenage, mais ce n'est pas très efficace et peut être fastidieux à créer! Heureusement, il existe une méthode plus simple, à savoir utiliser un joint d'engrenage. Pour en faire un, vous devez avoir préalablement défini vos appareils et créé les deux joints de base qui vont constituer votre équipement - ceux-ci doivent être constitués d'un joint tournant et d'un joint prismatique ou d'un autre joint tournant. L'image ci-dessous montre comment un équipement serait généralement créé dans un jeu: Alors que se passe-t-il? Eh bien, une fois que les deux articulations sont ajoutées à l'engrenage, l'interaction avec l'une aura un effet sur l'autre, donc dans l'exemple d'image ci-dessus, si vous faites pivoter inst2, inst3 se déplacera de haut en bas, ou si vous déplacez inst3 de haut en bas. puis inst2 tournera. Vous pouvez également modifier le rapport de démultiplication, ce qui signifie que vous devez déplacer une instance de plus (ou moins) pour obtenir l'effet souhaité. Le code dans l'exemple en bas montre comment quelque chose comme l'image ci-dessus peut être créé. REMARQUE: Si vous devez supprimer l'une des deux instances impliquées dans le joint d'engrenage (ou simplement supprimer leurs joints), vous devez d'abord supprimer le joint d'engrenage en utilisant physics_joint_delete (), sinon vous obtiendrez une erreur! Syntaxe:physics_joint_gear_create(inst1, inst2, joint_1, joint_2, ratio) Argument Description inst1 La première instance à se connecter avec l'articulation inst2 La deuxième instance pour se connecter avec l'articulation joint_1 Une articulation révolutionnaire préalablement définie joint_2 Une articulation révolutionnaire ou prismatique préalablement définie ratio Réglez le rapport de vitesse entre les deux articulations Retour:Integer (index of the joint) Exemple:var t_fix, g_fix, inst1, inst2, inst3, r_joint, p_joint; g_fix = physics_fixture_create(); physics_fixture_set_box_shape(g_fix, 40, 10); t_fix = physics_fixture_create(); physics_fixture_set_circle_shape(t_fix, 10); physics_fixture_set_density(t_fix,
    0.5); inst1 = instance_create_layer(60, room_height - 30, "Background", obj_Ground); inst2 = instance_create_layer(40, room_height - 300, "Instances", obj_Cog); inst3 = instance_create_layer(150, room_height - 300,
    "Instances", obj_Barrel); physics_fixture_bind(g_fix, inst1); physics_fixture_bind(t_fix, inst2); physics_fixture_bind(t_fix, inst3); r_joint = physics_create_revolute_joint(inst1, inst2, 40, room_height - 300, -80, 80,
    1, 10, 0.5, 1, 0); p_joint = physics_create_prismatic_joint(inst1, inst3, 150, room_height - 300, 0, 1, -10, 10, true, 0, 0, 0, 0); physics_create_gear_joint(inst2, inst3, r_joint, p_joint, 0.5); Le code ci-dessus crée et définit deux fixture puis crée trois instances, une "obj_Ground" et deux autres, "obj_Cog" et "obj_Barrel". Les fixtures sont alors liées à ces instances et deux liaisons sont créées. Un joint tournant entre le sol et le pignon, et un joint prismatique entre le sol et le canon. Enfin, un joint d'engrenage est créé entre les instances de pignon et de barillet en utilisant les joints révolutionnaires et prismatiques précédemment définis.  Arrière: Joints Suivant:physics_joint_rope_create © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

