
  
  surface_set_target
  Cette fonction permet de définir tous les dessins ultérieurs sur la surface cible plutôt que sur l'écran. De cette manière, vous pouvez demander à GameMaker Studio 2 de ne dessiner que des éléments spécifiques sur la surface spécifiée. Veuillez noter que si vous n'appelez pas surface_reset_target()    après avoir terminé, rien ne sera dessiné à l'écran car tous les dessins ultérieurs (même dans d'autres instances) seront effectués sur la surface. Vous devez également savoir que rien ne sera vu si la surface elle-même n'est pas dessinée à l'écran dans l'événement draw
    d'une instance. Vous pouvez également vérifier la valeur de retour de cette fonction comme outil de débogage pour vérifier si la cible de la surface a été définie ou non, une valeur de retour de 0 étant un échec de la définition de la cible et toute autre valeur positive étant un succès.
  Il convient de noter que les surfaces sont empilées. Vous ne pouvez donc pas passer d'une cible à l'autre et revenir à la cible de dessin normale à la fin, mais vous devez ouvrir et fermer les cibles de rendu. Par exemple, ceci ne fonctionnera pas correctement :
  surface_set_target(surf1) ; draw_text(32, 32, "surface1") ; surface_set_target(surf2) ;
     draw_text(32, 64, "surface2") ; surface_reset_target() ;
  
  Au lieu de cela, vous devez réinitialiser la cible pour chacune des surfaces que vous avez définies, tout comme vous devez utiliser des crochets ouvrants et fermants {} pour les blocs de code. Donc, ce qui précède devrait être écrit comme ceci :
  surface_set_target(surf1) ; draw_text(32, 32, "surface1") ; surface_reset_target() ;
     surface_set_target(surf2) ;
     draw_text(32, 64, "surface2") ; surface_reset_target() ;
  
  ou comme ceci :
  surface_set_target(surf1) ; draw_text(32, 32, "surface1") ; surface_set_target(surf2) ;
     draw_text(32, 64, "surface2") ; surface_reset_target() ;
     surface_reset_target() ;
  
  REMARQUE: Lorsque vous travaillez avec des surfaces, il est possible qu'elles cessent d'exister à tout moment, car elles sont stockées dans la mémoire de texture. Vous devriez TOUJOURS vérifier qu'une surface existe en utilisant surface_exists()    avant d'y faire référence directement.
   
  Syntaxe :
  surface_set_target(surface_id) ;
  
    
      
        Arguments
        Description
      
      
        surface_id
        L'ID de la surface à définir comme cible du dessin.
      
    
  
   
  Les retours :
  Booléen
   
  Exemple :
  if view_current = 0 {
     surface_set_target(surf) ;
     with (obj_Effect) {
     draw_self() ;
     }
     surface_reset_target() ;
     }
     else
     {
     draw_surface(surf, 0, 0) ; }
  
  Le code ci-dessus vérifie quelle vue est actuellement dessinée, et si c'est la vue [0], il définit la cible de dessin sur une surface et dessine toutes les instances de l'objet "obj_Effect" avant de réinitialiser à nouveau la cible de dessin. Si la vue n'est pas view[0]
    la surface est dessinée à l'écran.
   
   
   
  
    
      
        Retour : Surfaces
        Suivant : surface_set_target_ext
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

