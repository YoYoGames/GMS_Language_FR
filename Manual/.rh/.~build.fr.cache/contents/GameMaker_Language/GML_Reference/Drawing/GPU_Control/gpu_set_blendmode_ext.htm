gpu_set_blendmode_ext Lorsque GameMaker Studio 2 va dessiner un pixel, il y a une couleur source (la couleur du pixel que nous allons dessiner) et une couleur de destination (la couleur qui est déjà dans le pixel sur lequel nous dessinons), donc lors de la détermination de la nouvelle couleur du pixel, les couleurs source et destination sont calculées en fonction du mode de fusion choisi. Chaque composant des couleurs est stocké sous forme de valeur à virgule flottante entre 0 et 1, et la nouvelle couleur est calculée en multipliant chaque composant de la couleur source par un certain facteur et en multipliant chaque composant de la couleur de destination par un autre facteur, puis en ajoutant le résultats ensemble composant par composant. Cette fonction vous permet de définir les différents composants qui doivent être factorisés ensemble pour créer un mode de fusion personnalisé. La source et la destination ont toutes deux une composante rouge, verte, bleue et alpha, et dans le tableau suivant, les RVBA de la source sont considérés (Rs, Gs, Bs, As) tandis que les destinations sont (Rd, Gd, Bd, Ad). Les onze constantes utilisables peuvent être soit source, soit destination (ou les deux) lorsqu'elles sont utilisées dans cette fonction. Constant Facteur de fusion (rouge, vert, bleu, alpha) bm_zero (0, 0, 0, 0) bm_one (1, 1, 1, 1) bm_src_colour (Rs, Gs, Bs, As) bm_inv_src_colour (1-Rs, 1-Gs, 1-Bs, 1-As) bm_src_alpha (As, As, As, As) bm_inv_src_alpha (1-As, 1-As, 1-As, 1-As) bm_dest_alpha (Annonce, annonce, annonce, annonce) bm_inv_dest_alpha (1 annonce, 1 annonce, 1 annonce, 1 annonce) bm_dest_colour (Rd, Gd, Bd, Ad) bm_inv_dest_colour (1-Rd, 1-Gd, 1-Bd, 1-Ad) bm_src_alpha_sat (f, f, f, 1) où f = min (As, 1-Ad) IMPORTANT! HTML5 sans WebGL activé ne pourra pas afficher correctement les modes suivants:bm_src_colour bm_inv_src_colour bm_dest_colour bm_inv_dest_colour bm_src_alpha_sat Notez que vous pouvez soit fournir deux arguments individuels à cette fonction, soit fournir un tableau d'arguments (tels que renvoyés par la fonction gpu_get_blendmode_ext() par exemple). Si vous fournissez un tableau, il doit avoir les deux éléments suivants: [0] = Mode de fusion source (la valeur par défaut est bm_src_alpha ) [1] = Mode de fusion de destination (la valeur par défaut est bm_inv_src_alpha ) Pour vous aider à tirer le meilleur parti des modes de fusion et à comprendre comment ils fonctionnent et comment ils affectent l'image finale dessinée à l'écran, nous vous recommandons de lire le guide suivant: Guide d'utilisation des modes de fusion Syntaxe:gpu_set_blendmode(src, dest); Argument Description src Facteur de mode de fusion source (voir les constantes ci-dessus). dest Facteur de mode de fusion de destination (voir les constantes ci-dessus) Retour:N/A Exemple:gpu_set_blendmode_ext(bm_src_alpha, bm_one); draw_circle_colour(100, 100, 50, c_white, c_black, 0); gpu_set_blendmode(bm_normal);
   Cela transformera le noir en transparence, créant un effet de «lueur» du blanc étant fort à l'extérieur et s'affaiblissant progressivement plus loin du centre du cercle. Le mode de fusion est réinitialisé une fois le cercle dessiné pour garantir que le mélange additif n'est pas également appliqué à tout le reste après lui.  Retour: Contrôle GPU Suivant:gpu_set_blendmode_ext_sepalpha © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

