
  
  création d'un tampon
  Vous utilisez cette fonction pour allouer une partie de la mémoire comme tampon dans votre jeu. La fonction renvoie l'identifiant unique du tampon qui doit être stocké dans une variable et utilisé pour tous les autres appels de fonction au tampon. Le tampon peut ensuite être
    être utilisé pour stocker différents types de données (spécifiées lorsque vous écrivez dans le tampon à l'aide de la fonction). buffer_write() les constantes suivantes étant utilisées pour définir le type de tampon :
   
  
    
      
        Constant
        Description
      
      
        tampon_fixe
        Un tampon de taille fixe.
      
      
        buffer_grow
        Un tampon qui "croît" dynamiquement au fur et à mesure que des données sont ajoutées.
      
      
        buffer_wrap
        Un tampon où les données seront "enveloppées". Lorsque les données ajoutées atteignent la limite de la taille du tampon, l'écrasement sera replacé au début du tampon, et l'écriture se poursuivra à partir de ce point.
      
      
        buffer_fast
        Tampon spécial "dépouillé" dont la lecture/écriture est extrêmement rapide. Ne peut être utilisé qu'avec les types de données buffer_u8, et doit être aligné sur 1 octet.
      
      
        tampon_vbuffer
        Ce type de tampon ne doit être utilisé que pour les sommets.
      
    
  
   
  Outre le type de tampon, vous devrez également définir l'alignement des octets du tampon. Cette valeur varie en fonction des données que vous souhaitez stocker dans le tampon. Dans la plupart des cas, une valeur de 1 convient parfaitement. Toutefois, sachez que
    pour certaines opérations, un alignement spécifique est essentiel, et un alignement incorrect peut provoquer des erreurs (pour plus de détails sur l'alignement, voir Tampons). Ce qui suit est un guide général
    général pour montrer quelles valeurs sont les plus appropriées pour chaque type de données (en cas de doute, utilisez un alignement de 1) :
  
    Les chaînes de caractères doivent être alignées sur un octet.
    Les entiers 8 bits signés ou non signés peuvent être alignés sur n'importe quelle valeur, mais notez que pour un tampon rapide (voir buffer_write()), ils doivent être alignés sur 1.
    Les entiers 16 bits signés ou non signés doivent être alignés sur 2 octets.
    Les entiers 32 bits signés ou non signés doivent être alignés sur 4 octets.
    Les flottants jusqu'à 16 bits doivent être alignés sur 2 octets. (Non supporté actuellement !)
    Les flottants jusqu'à 32 bits doivent être alignés sur 4 octets.
    Les flottants jusqu'à 64 bits doivent être alignés sur 8 octets.
  
  REMARQUE: L'alignement des octets peut être très important car un mauvais choix peut nuire aux performances.
  REMARQUE: Il est important de supprimer de la mémoire toute ressource créée dynamiquement comme celle-ci lorsque vous n'en avez plus besoin afin d'éviter les fuites de mémoire. Ainsi, lorsque vous avez fini d'utiliser le tampon que vous avez créé, vous devez le libérer à nouveau.
    en utilisant buffer_delete().
   
  Syntaxe :
  buffer_create(taille, type, alignement)
  
    
      
        Arguments
        Description
      
      
        taille
        La taille (en octets) du tampon.
      
      
        type
        Le type de tampon à créer (voir la liste des constantes ci-dessus).
      
      
        alignement
        L'alignement des octets pour le tampon
      
    
  
   
  Les retours :
  Int (ID du tampon de sommets)
   
  Exemple :
  player_buffer = buffer_create(16384, buffer_fixed, 2) ;
  Le code ci-dessus alloue 16384 octets de mémoire à un tampon et renvoie l'index de ce tampon, qui est stocké dans la variable "player_buffer", pour une utilisation future. Le tampon est aligné sur une frontière de deux octets.
   
   
   
  
    
      
        Retour : Tampons
        Suivant : buffer_create_from_vertex_buffer
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

