buffer_save_async Avec cette fonction, vous pouvez enregistrer une partie du contenu d'un tampon dans un fichier, prêt à être relu en mémoire à l'aide du buffer_load() fonction (ou l'une des autres fonctions de chargement des tampons). Le "décalage" définit la position de départ dans le tampon pour l'enregistrement (en octets), et la "taille" est la taille de la zone de tampon à enregistrer à partir de ce décalage (également en octets). Cette fonction fonctionne de manière asynchrone, et ainsi le jeu continuera à fonctionner pendant son enregistrement, et tous les fichiers enregistrés à l'aide de cette fonction seront placés dans un dossier «par défaut». Ce dossier n'a pas besoin d'être inclus dans le nom de fichier car il est ajouté automatiquement par GameMaker. Par exemple, le chemin du nom de fichier "Data\Player_Save.sav "serait en fait enregistré dans "default\Data\Player_Save.sav ". Cependant, si vous chargez ensuite le fichier à l'aide de la fonction buffer_load_async(), vous n'avez pas non plus besoin de fournir la partie "par défaut" du chemin (mais toute autre fonction de fichier le nécessitera, sauf sur les consoles Xbox One, PS4 et Nintendo Switch ). REMARQUE: sur HTML5, "default /" n'est pas ajouté automatiquement et vous devrez peut-être en tenir compte dans votre code. La fonction renvoie une valeur d'ID unique et déclenche un événement de sauvegarde / chargement asynchrone où vous pouvez utiliser l'ID renvoyé pour vérifier le async_load Valeur d'ID, comme indiqué dans l'exemple étendu ci-dessous. Le async_load map dans l'événement aura les deux paires clé / valeur suivantes: "id": l'ID de la fonction asynchrone tel que renvoyé par la fonction de sauvegarde. "status": retournera true si les données ont été enregistrées / chargées correctement, et false autrement. Notez que vous pouvez enregistrer plusieurs tampons en un en appelant cette fonction plusieurs fois entre les appels à buffer_async_group_begin() et buffer_async_group_end() (voir ces fonctions pour plus d'informations à ce sujet). REMARQUE: sur HTML5, les résultats renvoyés sont enregistrés sous forme de chaînes codées en base64 lors de l'enregistrement dans un fichier. Syntaxe:buffer_save_async(buffer, filename, offset, size); Argument Description buffer L'index du tampon à enregistrer. filename Le nom du fichier sous lequel enregistrer. offset Décalage dans le tampon à partir duquel enregistrer (en octets). size La taille de la zone tampon à enregistrer (en octets). Retour:Real Exemple étendu: Le buffer_save_async() La fonction peut être appelée à partir de n'importe quel événement, et comme elle est asynchrone, le rappel peut être presque instantané ou prendre plusieurs secondes. L'appel de la fonction est simple et ressemblerait à ceci:saveid = buffer_save_async(buff, "Player_Save.sav", 0, 16384); Le code ci-dessus enregistre le contenu du tampon " buff " dans le fichier de sauvegarde donné, en stockant l'ID de l'appel de fonction dans la variable " saveid ". Lorsque la sauvegarde est terminée, l'événement asynchrone Save / Load sera déclenché et vous pourrez analyser le async_load map pour l'ID correct de la fonction, comme ceci:if ds_map_find_value(async_load, "id") == saveid     {
         if ds_map_find_value(async_load, "status") == false         {
             show_debug_message("Save failed!");         }
         }
   Le code ci-dessus vérifiera d'abord l'ID de la carte DS qui a été créée, puis vérifiera l'état du rappel, en publiant un message de débogage s'il y a eu des problèmes.  Retour: Tampons Suivant:buffer_load © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

