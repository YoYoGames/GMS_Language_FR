 Tampons Un tampon est une région de mémoire physique utilisée pour contenir temporairement des données pendant qu'elles sont déplacées d'un endroit à un autre ou manipulées d'une manière ou d'une autre, par exemple, vous pouvez utiliser une mémoire tampon pour contenir des données de paquet en attente de transmission sur un réseau ou pour stocker un paquet. qui a été reçu sur un réseau. GameMaker Studio 2 a un certain nombre de fonctions spécifiques liées à la création, la modification et le chargement / enregistrement de tampons, mais avant de les utiliser, veuillez noter les points suivants: Lorsqu'un tampon est créé, il est automatiquement effacé et rempli à 0. L'argument "taille" des fonctions de tampon se réfère toujours à la taille en octets du tampon. L'argument "Alignement" fait référence à la manière dont les données sont stockées dans un tampon. Si votre alignement est défini sur 4 et que vous écrivez une seule donnée d'une taille de 1 octet, effectuez un buffer_tell, vous obtiendrez un décalage de 1. Cependant, si vous écrivez un autre élément de données, également de 1 octet, effectuez un buffer_tell, vous obtiendrez un décalage de 5 car l'alignement a "rempli" les données à cette taille. L'alignement n'affecte que l' endroit où les choses sont écrites, donc si vous faites un buffer_tell après avoir écrit quelque chose, il retournera la position d'écriture actuelle qui suit immédiatement les données que vous avez écrites. Notez, cependant, que si vous écrivez ensuite un autre élément de données, le tampon déplacera en interne la position d'écriture le long du multiple suivant de la taille d'alignement avant d'écrire réellement l'élément de données. Lorsqu'il s'agit de "offset", il s'agit de la valeur en octets pour décaler les données dans le tampon donné. Donc, si votre tampon est aligné sur 2 octets et que vous souhaitez ignorer les 4 premiers emplacements alignés, vous auriez un décalage de 2 * 4 bytes. Certaines des fonctions de tampon créent également un nouveau tampon (comme buffer_load par exemple). N'oubliez pas que ces tampons devront également être supprimés de la mémoire lorsqu'ils ne sont pas utilisés à l'aide du buffer_delete fonction. La mémoire utilisée pour créer des tampons est la mémoire système.Ainsi, même lorsque le jeu n'a pas le focus, toutes les données stockées dans une mémoire tampon doivent être en sécurité, mais si l'application est fermée ou redémarrée, elle sera perdue. Les pages suivantes expliquent comment les tampons fonctionnent dans le contexte de GameMaker Studio 2 et contiennent quelques exemples de code pour les utilisateurs qui ne savent pas comment les utiliser: Utilisation de tampons IMPORTANT! Lorsque vous créez un tampon, la valeur d'index utilisée pour l'identifier est une valeur entière commençant à 0. Ces indices sont réutilisés par GameMaker, donc une valeur d'index de tampon détruit peut être utilisée par une valeur nouvellement créée par la suite, et nous recommandons que vous définissez toute variable contenant un index de tampon à -1 après avoir détruit le tampon. Vous pouvez utiliser les fonctions suivantes avec des tampons binaires dans vos jeux: buffer_existsbuffer_createbuffer_create_from_vertex_bufferbuffer_create_from_vertex_buffer_extbuffer_deletebuffer_readbuffer_writebuffer_fillbuffer_seekbuffer_tellbuffer_peekbuffer_pokebuffer_savebuffer_save_extbuffer_save_asyncbuffer_loadbuffer_load_extbuffer_load_asyncbuffer_load_partialbuffer_compressbuffer_decompressbuffer_async_group_beginbuffer_async_group_optionbuffer_async_group_endbuffer_copybuffer_copy_from_vertex_bufferbuffer_get_typebuffer_get_alignmentbuffer_get_addressbuffer_get_sizebuffer_get_surfacebuffer_set_surfacebuffer_resizebuffer_sizeofbuffer_md5buffer_sha1buffer_crc32buffer_base64_encodebuffer_base64_decodebuffer_base64_decode_ext Il existe également deux fonctions supplémentaires liées aux tampons qui peuvent être utilisées pour enregistrer et charger les états de jeu (notez qu'elles nécessitent la création préalable d'un tampon):game_load_buffergame_save_buffer Enfin, vous pouvez également utiliser des tampons Vertex spéciaux pour créer vos propres primitives ou modèles personnalisés, etc... Vous pouvez en savoir plus à ce sujet dans la section suivante du manuel: Bâtiment primitif  Retour: Référence GML Suivant: UWP et XBox Live © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

