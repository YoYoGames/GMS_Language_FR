buffer_load_async Avec cette fonction, vous pouvez charger un fichier que vous avez créé précédemment en utilisant le buffer_save() (ou l'une des autres fonctions de sauvegarde des tampons) dans un tampon. Le "décalage" définit la position de départ dans le tampon pour le chargement (en octets), et la "taille" est la taille de la zone de tampon à charger à partir de ce décalage (également en octets). Vous pouvez fournir une valeur de -1 pour l'argument de taille et le tampon entier sera chargé. Notez que la fonction se chargera à partir d'un dossier «par défaut», qui n'a pas besoin d'être inclus dans le chemin du fichier que vous fournissez. Ce dossier sera créé s'il n'existe pas ou lorsque vous enregistrez un fichier à l'aide de buffer_save_async(). La fonction renvoie une valeur d'ID unique qui peut ensuite être utilisée dans l' événement Save / Load Asynchronous pour vérifier le async_load Valeur d'ID, comme indiqué dans l'exemple étendu ci-dessous. Le async_load map dans l'événement aura les deux paires clé / valeur suivantes: "id": l'ID de la fonction asynchrone tel que renvoyé par la fonction de sauvegarde. "status": retournera true si les données ont été enregistrées / chargées correctement, et false autrement. REMARQUE: sur HTML5, c'est la méthode préférée pour charger un fichier si vous chargez à partir d'un serveur et non d'un stockage local, car le chargement synchrone est obsolète sur la plupart des navigateurs et finira par devenir obsolète. Syntaxe:buffer_load_async(buffer, filename, offset, size); Argument Description buffer L'index du tampon à charger. filename Le nom du fichier à charger. offset Décalage dans la mémoire tampon vers lequel charger (en octets). size La taille de la zone tampon à charger (en octets). Retour:Real Exemple étendu: Le buffer_load_async() La fonction peut être appelée à partir de n'importe quel événement, et comme elle est asynchrone, le rappel peut être presque instantané ou prendre plusieurs secondes. L'appel de la fonction est simple et ressemblerait à ceci:loadid = buffer_load_async(buff, "Player_Save.sav", 0, 16384); Le code ci-dessus charge le contenu du fichier " Player_Save.sav " dans le tampon donné, en stockant l'ID de l'appel de fonction dans la variable " loadid ". Lorsque le chargement est terminé, l'événement asynchrone Save / Load sera déclenché et vous pourrez analyser le async_load map pour l'ID correct de la fonction, comme ceci:if ds_map_find_value(async_load, "id") == loadid     {
         if ds_map_find_value(async_load, "status") == false         {
             show_debug_message("Load failed!");         }
         }
   Le code ci-dessus vérifiera d'abord l'ID de la carte DS qui a été créée, puis vérifiera l'état du rappel, en publiant un message de débogage s'il y a eu des problèmes.  Retour: Tampons Suivant:buffer_load_partial © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

