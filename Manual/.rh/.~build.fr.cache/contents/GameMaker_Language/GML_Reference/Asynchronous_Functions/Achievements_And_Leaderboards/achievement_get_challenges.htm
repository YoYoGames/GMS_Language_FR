achievement_get_challenges Cette fonction enverra une requête au serveur pour obtenir des informations sur tous les défis actuels et déclenchera un événement social asynchrone de rappel qui contient le async_load carte remplie avec les paires clé / valeur pertinentes. La clé d' identification de ce DS Map est utilisé pour identifier le rappel correct (il peut y avoir plus d'une fonction de déclenchement pour un événement asynchrone donné), et sera associé à la constante achievement_challenge_list_received ainsi qu'un certain nombre d'autres paires clé / valeur pour chaque défi. Le contenu exact de la carte est indiqué ci-dessous: REMARQUE: cette fonction est pour iOS uniquement. " id " - Pour cette fonction, il devrait être achievement_challenge_list_received " numchallenges " - Le nombre de défis (locaux et distants) actuellement disponibles. " ChallengeNplayerid " - L'identifiant du joueur pour le défi, où "N" est un entier, EG: "Challenge5playerid" est l'identifiant du joueur pour le cinquième défi de la liste. " ChallengeNissuerid " - L'identifiant de la personne qui a lancé le défi, où "N" est un entier, EG: "Challenge2issuerid" est l'identifiant de l'émetteur pour le deuxième défi de la liste. " ChallengeNstate " - L'état du défi "N", qui aura une valeur de 0 à 3 (sous forme de chaîne) pour invalide, en attente, terminé ou refusé. " ChallengeNmessage " - Le message texte pour le défi "N". " ChallengeNissueddate " - La date d'émission du défi "N". " ChallengeNcompleteddate " - La date de fin du défi "N". " ChallengeNtype " - Le type de défi donné. Peut être l'une des deux constantes: Constant Description achievement_filter_friends_only Obtenez uniquement les scores des amis des joueurs. achievement_filter_all_players Obtenez tous les scores de tous les joueurs. " ChallengeNidentifier " - La chaîne d'identification du défi. " ChallengeNscore " - Le score lié au défi. Syntaxe:achievement_get_challenges() Retour:N/A Exemple étendu: Le code suivant sera probablement appelé après que le joueur se soit connecté à son compte de jeu en utilisant achievement_login():achievement_get_challenges(); Cela enverra une demande pour les informations de défi en cours et générera un rappel asynchrone avec le spécial async_load ds_map contenant les données suivantes:var ident = ds_map_find_value(async_load, "id"); if ident == achievement_challenge_list_received    {
        var numentries = ds_map_find_value(async_load,"numchallenges");    for(var i = 0; i < numentries; i++;)       {
           player_id[i] = ds_map_find_value(async_load, "Challenge" + string(i)+"playerid");       issuer_id[i] = ds_map_find_value(async_load, "Challenge" + string(i) +"issuerid");       state[i]
    = ds_map_find_value(async_load, "Challenge" + string(i)+"state");       message[i] = ds_map_find_value(async_load, "Challenge" + string(i)+"message");       date_completed[i] = ds_map_find_value(async_load,
    "Challenge" + string(i)+"completeddate");       date_issued[i] = ds_map_find_value(async_load, "Challenge" + string(i)+"issueddate");       ach_type[i] = ds_map_find_value(async_load, "Challenge"
    + string(i)+"type");       ach_ident[i] = ds_map_find_value(async_load, "Challenge" + string(i)+"identifier");       ach_score[i] = ds_map_find_value(async_load, "Challenge" + string(i)+"score");       }
   Le code ci-dessus vérifie le retour DS Map dans l' événement social asynchrone et si son "id" correspond à la constante en cours de vérification, il parcourt ensuite la carte en stockant toutes les différentes valeurs dans un certain nombre de tableaux. Ces informations peuvent ensuite être utilisées, par exemple, pour créer vos propres pages de défis personnalisées dans le jeu.  Retour: Réalisations et classements Suivant:achievement_get_pic © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

