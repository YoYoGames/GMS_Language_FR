achievement_send_challenge Cette fonction enverra un défi à travers le réseau au joueur choisi. Vous pouvez obtenir le playerid en utilisant le achievement_load_friends() ou la achievement_load_leaderboard() fonctions et vous devez également fournir le challengeid qui est la valeur unique étant donné le défi lorsque vous l'avez créé sur votre tableau de bord iTunes Connect ou Google Play. Vous devez également fournir un score et un court message texte ainsi que définir le type de défi. Cela peut être l'une des constantes suivantes: Constant Description achievement_type_score_challenge Un défi basé sur la valeur du score. achievement_type_achievement_challenge Un défi basé sur une réalisation. Cette fonction déclenchera un événement asynchrone social de rappel pour le joueur qui recevra le défi, et dans ce cas, vous aurez une carte DS référencée dans la variable async_load. La clé d' identification de ce DS Map est utilisé pour identifier le rappel correct (il peut y avoir plus d'une fonction de déclenchement pour un événement asynchrone donné), et sera associé à la constante achievement_challenge_received ainsi qu'un certain nombre d'autres paires clé / valeur pour chaque joueur. Le contenu exact de la carte est indiqué ci-dessous: REMARQUE: que l'utilisateur peut également recevoir des notifications toast pour les défis reçus, mais cela dépendra des valeurs que vous avez choisies à l'aide de la fonction achievement_show_challenge_notifications (). " id " - Pour cette fonction, il devrait être achievement_leaderboard_info " playerid " - L'identifiant du joueur pour le défi. " issuerid " - L'identifiant de l'émetteur pour le défi. " state " - L'état du défi, qui aura une valeur de 0 à 3 (sous forme de chaîne) pour invalide, en attente, terminé ou refusé. " message " - Le message texte pour le défi. " completeddate " - La date de fin du défi. " Publisheddate " - La date d'émission de la contestation. " type " - Le type de défi donné. Peut être l'une des deux constantes répertoriées ci-dessus " identifier " - La chaîne d'identification du défi, telle que définie sur le tableau de bord du fournisseur « score » - Le score lié au défi (le cas échéant). Syntaxe:achievement_send_challenge(playerid, challengeid, score, type, message) Argument Description playerid L'identifiant unique du joueur à contester. challengeid L'ID de défi unique (tel qu'il se trouve sur le tableau de bord du fournisseur). score Le score à battre. type le type de défi à lancer - une des deux constantes ci-dessous. message Le message à attacher au défi. Retour:N/A Exemple étendu: Pour envoyer un défi sur le réseau, vous auriez ce code:achievement_send_challenge(global.playerid[0], global.challengeid[0], score, achievement_type_score_challenge, "Beat that sucker!"); Cette demande déclenchera alors l' événement social dans votre jeu pour le joueur auquel le défi était dirigé, et cela peut être traité de la manière suivante:var ident = ds_map_find_value(async_load, "id"); if ident == achievement_challenge_received     {
         player_id = ds_map_find_value(async_load, "playerid");     issuer_id = ds_map_find_value(async_load, "issuerid");     state = ds_map_find_value(async_load, "state");     message = ds_map_find_value(async_load,
    "message");     date_completed = ds_map_find_value(async_load, "completeddate");     date_issued = ds_map_find_value(async_load, "issueddate");     ach_type = ds_map_find_value(async_load, "type");        ach_ident = ds_map_find_value(async_load, "identifier");     ach_score = ds_map_find_value(async_load, "score");     }
   Le code ci-dessus vérifie le retour DS Map dans l' événement social asynchrone et si son "id" correspond à la constante vérifiée, il extrait ensuite les valeurs pertinentes pour chacune des clés de la carte et les stocke dans des variables pour une utilisation future.  Retour: Réalisations et classements Suivant:achievement_reset © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

