
  
  show_question_async
  Cette fonction ouvre une fenêtre et affiche la question que vous avez définie dans la fonction à l'utilisateur. Il s'agit d'une fonction asynchrone et, à ce titre, GameMaker Studio 2 ne bloque pas le périphérique sur lequel elle est exécutée en attendant une réponse.
    mais continue à exécuter les événements normalement. La fonction possède deux boutons qui affichent "Oui" et "Non", et une fois que l'utilisateur a appuyé sur l'un d'entre eux, un événement Dialog asynchrone est déclenché qui, pendant la durée de cet événement uniquement, va
    aura une carte DS stockée dans la variable async_load.
  Cette carte contiendra les deux clés, "id" et "status". "id"est la valeur renvoyée par la fonction lorsqu'elle est appelée, tandis que "status" sera soit vrai soit faux pour "Oui" et "Non" respectivement . 
  NOTE : Cette fonction est  réservée à un usage de débogage et de testet ne doit pas être utilisée dans les jeux publiés. Dans ce cas, vous devez créer une interface utilisateur personnalisée pour recevoir les entrées des joueurs, de manière à avoir un contrôle total sur l'apparence et le comportement des boîtes de dialogue.
   
  Syntaxe :
  show_question_async(string) ;
  
    
      
        Arguments
        Description
      
      
        Chaîne de caractères
        La question à poser à l'utilisateur.
      
    
  
   
  Les retours :
  Real
   
  Exemple étendu :
  L'événement de pression de la souris gauche (par exemple) de l'objet qui affiche le message aurait le code suivant :
  msg = show_question_async("Voulez-vous acheter une armure pour " + string(armour[0, 5]) + "coins ?") ;
  L'exemple ci-dessus affiche une question avec la chaîne de caractères donnée, en demandant à l'utilisateur d'appuyer sur "oui" ou "non". L'identifiant de la fonction est stocké dans la variable "msg" et sera utilisé dans l'événement Dialogue asynchrone comme indiqué ci-dessous :
  var i_d, stat ; i_d = ds_map_find_value(async_load, "id") ; if i_d == msg {
     if ds_map_find_value(async_load, "status") {
     pièces -= armure[0,5] ; global.protection += armure[0,0] ; }
     }
  
  Le code ci-dessus vérifie la clé "id" de la DS Map retournée par rapport à la valeur stockée dans la variable "msg". S'ils sont identiques, il vérifie alors si l'un des deux boutons a été pressé et s'il retourne vrai, il déduit alors une valeur d'une variable et ajoute une valeur à une variable globale également.
   
   
   
  
    
      
        Retour : Dialogue
        Suivant : shop_leave_rating
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

