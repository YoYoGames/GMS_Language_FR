get_login_async Cette fonction ouvre une fenêtre qui demande à l'utilisateur de saisir un nom d'utilisateur et un mot de passe. Ces arguments peuvent être définis comme une chaîne vide ou vous pouvez stocker les valeurs précédemment entrées à utiliser si vous le souhaitez. Il s'agit d'une fonction asynchrone et, en tant que telle, GameMaker Studio 2 ne bloque pas le périphérique sur lequel il est exécuté en attendant une réponse, mais continue plutôt à exécuter les événements normalement. Une fois que l'utilisateur a saisi les détails et appuyé sur le bouton "OK", un événement d'interaction utilisateur asynchrone est déclenché qui, pour la durée de cet événement uniquement, aura une carte DS stockée dans la variable async_load. Cette carte contiendra les deux clés, " nom d'utilisateur " et " mot de passe ", avec l'entrée utilisateur correspondante stockée dans chacune. Comme il s'agit d'une carte DS qui a été créée, celle-ci peut ensuite être utilisée, par exemple, par le json_encode() fonction prête à être envoyée vers un serveur ou écrite dans un fichier sur l'appareil choisi. Il est à noter que cette fonction renverra un numéro d'index pour la carte DS créée qui peut ensuite être vérifiée dans l'événement correspondant afin que vous puissiez "cibler" une carte DS spécifique si vous vous attendez à ce que plus d'un événement asynchrone soit déclenché ( peut-être d'une autre fonction). Syntaxe:get_login_async(name, password); Argument Description username Le nom d'utilisateur par défaut password Le mot de passe par défaut Retour:Real Exemple étendu: L' événement de création (par exemple) de l'objet qui contrôle la connexion de notre utilisateur aurait le code suivant:ini_open("Profile.ini"); u = ini_read_string("User","0",""); p = ini_read_string("User","1",""); ini_close();
     login = get_login_async(u,p); Le code ci-dessus ouvre un fichier ini (ou en crée un s'il n'existe pas) et obtient le nom et le mot de passe stockés dans ce fichier. S'ils n'existent pas, la valeur par défaut d'une chaîne vide ("") est renvoyée. Ces valeurs sont ensuite utilisées dans get_login_async() pour demander à l'utilisateur son nom d'utilisateur et son mot de passe, l'index de la requête étant stocké dans la variable "login". Notez qu'en attendant que l'utilisateur donne les informations nécessaires, le jeu et ses événements continueront de fonctionner normalement. Maintenant que le code asynchrone a été déclenché, nous devons vérifier la valeur de retour dans l' événement asynchrone pour les dialogues de la manière suivante:if ds_map_find_value(async_load, "id") == login     {
         u = ds_map_find_value(async_load, "username");     p = ds_map_find_value(async_load, "password");     }
   Le code ci-dessus vérifie la clé "id" du async_load Carte DS et si elle contient la même valeur que celle stockée dans la variable "login", les détails de la carte sont alors lus dans les variables correspondantes que vous pouvez ensuite stocker ou utiliser pour vérifier les valeurs de la base de données, etc.  Retour: Dialogue Suivant:get_string_async © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

