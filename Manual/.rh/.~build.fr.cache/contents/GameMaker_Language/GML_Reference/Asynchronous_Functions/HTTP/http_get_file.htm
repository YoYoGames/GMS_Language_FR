http_get_file Avec cette fonction, vous pouvez vous connecter à l'URL spécifiée afin de récupérer des informations sous la forme d'un fichier. Comme il s'agit d'une fonction asynchrone, GameMaker Studio 2 ne se bloquera pas en attendant une réponse, mais continuera à fonctionner à moins qu'il n'obtienne des informations de rappel. Ces informations se présenteront sous la forme d'une chaîne et déclencheront un événement asynchrone dans toute instance dont un est défini dans leurs propriétés d'objet. REMARQUE: vous devez savoir qu'en raison de la protection XSS dans les navigateurs, les demandes et les tentatives de chargement de ressources à partir de plusieurs domaines sont bloquées et peuvent sembler renvoyer des résultats vides. Veuillez consulter la partie sur les problèmes interdomaines pour plus de détails. Cet événement générera un "rappel" qui est capté par tout événement HTTP, auquel cas il générera un DS Map (plus communément appelé «dictionnaire») qui est exclusif à cet événement et est stocké dans la variable spéciale async_load. Cette carte DS contiendra des valeurs différentes selon les données renvoyées, c'est-à-dire: l'événement se déclenchera plusieurs fois au fur et à mesure que chaque paquet de données est reçu afin que vous puissiez afficher une barre de progression, par exemple. La structure générale de la carte DS sera la suivante: id: l'ID renvoyé par la commande. Si vous déclenchez une série de http_ demandes, vous devez savoir à laquelle vous obtenez la réponse, et vous utiliserez donc cette valeur pour la comparer à la valeur que vous avez stockée lorsque vous avez initialement envoyé la demande pour trouver la bonne. status: renvoie une valeur inférieure à 0 pour une erreur, 0 pour complet et 1 pour recevoir des paquets (voir ci-dessous pour plus de détails). résultat: les données reçues (chaîne uniquement). url: l' URL complète que vous avez demandée. http_status: Le code d'état http brut (si disponible). Cela renvoie le code d'état Web standard pour la plupart des navigateurs, par exemple: 304 pour "Non modifié" ou 204 pour "Aucun contenu", etc... S'il y a plusieurs paquets retournés à votre jeu, la touche de rappel "status" renverra 1, auquel cas la carte DS aura les clés supplémentaires suivantes: "contentLength": C'est la taille du fichier que le serveur Web a dit que vous devriez vous attendre à recevoir (peut être -1 si le serveur ne renvoie pas ces données). "sizeDownloaded": la taille des données déjà téléchargées. Syntaxe:http_get_file(url, local_target); Argument Description url L'adresse Web du serveur à partir duquel vous souhaitez obtenir le fichier local_target Le chemin de stockage local dans lequel enregistrer le fichier Retour:Real Exemple étendu: Le http_get_file() La fonction peut être appelée à partir de n'importe quel événement, et comme elle est asynchrone, le rappel peut être presque instantané ou prendre plusieurs secondes. L'appel de la fonction est simple et ressemblerait à ceci:file = http_get_file("http://www.macsweeneygames.com/downloads/upgrade.zip", "\Downloads\Upgrade.zip"); Le code ci-dessus demandera un fichier à partir de l'URL donnée et le définira pour qu'il soit téléchargé dans la zone de stockage locale (comme spécifié dans les options de jeu HTML5), dans un répertoire "Téléchargements" avec le nom de fichier donné (cela ne doit pas nécessairement être identique au nom du fichier source, mais doit utiliser la même extension de fichier). Le async_load L'index de la carte sera stocké dans la variable "fichier" afin que vous puissiez vérifier le rappel correct dans l'événement asynchrone, et si le répertoire de sauvegarde n'existe pas, il sera créé. L'événement asynchrone déclenché serait le sous-événement HTTP, et dans ce cas, vous auriez quelque chose comme ce qui suit:if ds_map_find_value(async_load, "id") == file     {
         var status = ds_map_find_value(async_load, "status");     if status == 0         {
             var path = ds_map_find_value(async_load, "result");         var files = zip_unzip(path, "/NewContent/");         if files > 0             {
                 global.ExtraContent = true;             }
             }
         }
   Le code ci-dessus vérifiera d'abord l '"id" du ds_map qui a été créé, puis vérifiera l'état du rappel. Si la valeur est égale à 0 (signalant la réussite), le résultat du rappel sera alors utilisé avec le zip_unzip() fonction pour décompresser le fichier téléchargé dans le répertoire donné. Si la décompression réussit, une variable globale est définie sur true.  Retour: HTTP Suivant:http_post_string © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

