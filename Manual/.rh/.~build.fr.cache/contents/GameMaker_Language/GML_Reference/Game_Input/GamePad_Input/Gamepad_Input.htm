
  
  GamepadInput
  GameMaker Studio 2 possède un certain nombre de fonctions dédiées qui peuvent être utilisées pour détecter les commandes analogiques et numériques de plusieurs manettes de jeu connectées. Ces fonctions fonctionnent de la même manière que les entrées de périphériques,
    en ce sens que vous pouvez détecter jusqu'à quatre manettes de jeu XInput différentes qui sont connectées (et jusqu'à 8 manettes de jeu DirectInput) et traiter l'entrée de chacune d'elles à l'aide des mêmes fonctions. Notez que lorsqu'un gamepad est branché à votre appareil (ou qu'il est retiré)
    un événement système asynchrone est déclenché et vous pouvez gérer la situation à l'aide des fonctions appropriées.
  Les "emplacements" de la manette de jeu sont indexés à partir de 0. L'emplacement réel attribué à une manette de jeu dépend d'une série de facteurs, dont le système d'exploitation sur lequel tourne le projet n'est pas le moindre. Sur la cible Windows cible, les slots 0 -
    3 inclus sont uniquement pour les gamepads Xinput, c'est-à-dire les manettes Xbox360 et compatibles. Cependant, vous pouvez également vérifier les emplacements 4 à 11 inclus pour les manettes de jeu à entrée directe, ce qui signifie que vous pouvez détecter de nombreux autres modèles de manettes lorsqu'elles sont connectées
    par ces emplacements. Sur d'autres plateformes, les manettes peuvent être détectées sur n'importe quel emplacement que le système d'exploitation leur a attribué, qui peut être l'emplacement 3 ou l'emplacement 20 ou plus. Par exemple, Android les périphériques stockent les manettes de jeu Bluetooth dans un emplacement et réservent ensuite cet emplacement à la manette de jeu en question.
    Par exemple, les appareils stockent les manettes de jeu Bluetooth dans un emplacement et réservent cet emplacement à cette manette à l'avenir, qu'elle soit connectée ou non. Vous ne pouvez donc pas supposer qu'une seule manette de jeu connectée est connectée à l'emplacement 0, car ce ne sera probablement pas le cas.
  Il convient de noter que lorsque vous utilisez des manettes de jeu à entrée directe sous Windows, ou des manettes de jeu génériques sur d'autres plates-formes, les constantes indiquées ci-dessous peuvent ne pas correspondre exactement aux boutons que vous attendez lorsqu'ils sont pressés, en raison de la manière fragmentée et non standardisée dont l'API est implémentée par les fabricants de manettes.
    fragmentée et non standardisée de l'API par les fabricants de contrôleurs. Pour cette raison, il est recommandé d'avoir une sorte d'écran de configuration du gamepad dans vos jeux, où les gens peuvent redéfinir les boutons du gamepad en fonction des entrées de n'importe quel périphérique connecté, afin d'atténuer les problèmes (voir l'article sur la configuration du gamepad).
    (il existe des fonctions de "mappage" de manette de jeu qui peuvent vous aider dans ce domaine sur les cibles Windows Desktop, Ubuntu, macOS et Android , tandis que sur toutes les autres cibles, vous devez le faire vous-même en utilisant du code).
  Constantes d'entrée
  Lorsque vous travaillez avec les fonctions de la manette de jeu, les entrées peuvent provenir d'axes, de boutons ou de chapeaux, que GameMaker Studio 2 attribuera aux constantes intégrées suivantes (notez que les " chapeaux " ne sont généralement détectés que sur les manettes non standard) : 1.
    généralement détectés que sur les manettes non standard) :
  
    
      
        Constant
        Description
      
      
        gp_face1
        Bouton supérieur 1 (correspond au "A" d'une manette Xbox 360 et à la croix d'une manette PS )
      
      
        gp_face2
        Bouton supérieur 2 (correspond au "B" d'une manette Xbox 360 et au cercle d'une manette PS )
      
      
        gp_face3
        Bouton supérieur 3 (correspond au "X" d'une manette Xbox 360 et au carré d'une manette PS )
      
      
        gp_face4
        Bouton supérieur 4 (correspond au "Y" d'une manette Xbox 360 et au triangle d'une manette PS )
      
      
        gp_épaulière
        Bouton d'épaule gauche
      
      
        gp_épaulière
        Gâchette de l'épaule gauche
      
      
        gp_shoulderr
        Bouton d'épaule droit
      
      
        gp_shoulderrb
        Gâchette épaule droite
      
      
        gp_select
        Le bouton de sélection (c'est le bouton PS sur un contrôleur DS4)
      
      
        gp_start
        Le bouton de démarrage (c'est le bouton "options" sur une manette PS4)
      
      
        gp_stickl
        Le stick gauche appuyé (comme un bouton)
      
      
        gp_stickr
        Le stick droit appuyé (comme un bouton)
      
      
        gp_padu
        Pavé numérique vers le haut
      
      
        gp_padd
        Pédale D vers le bas
      
      
        gp_padl
        D-pad gauche
      
      
        gp_padr
        D-pad droit
      
      
        gp_axislh
        Axe horizontal du stick gauche (analogique)
      
      
        gp_axislv
        Axe vertical du manche gauche (analogique)
      
      
        gp_axisrh
        Axe horizontal du manche droit (analogique)
      
      
        gp_axisrv
        Axe vertical du manche droit (analogique)
      
    
  
  Pour mieux comprendre quelle partie du contrôleur chaque constante représente exactement, vous pouvez vous référer à l'image suivante d'une manette de jeu XInput standard :
  
  Les constantes suivantes peuvent être utilisées avec la fonction gamepad_axis_value() lors de l'utilisation du gamepad DualSense sur une PS4 ou PS5 :
  
    
      
        Constant
        Description
      
      
        gp_axe_accélération_x
        L'accélération du gamepad sur l'axe X
      
      
        gp_axe_accélération_y
        L'accélération du gamepad sur l'axe Y
      
      
        gp_axe_accélération_z
        L'accélération du gamepad sur l'axe Z
      
      
        gp_axe_vitesse_angulaire_x
        La vitesse angulaire du gamepad sur l'axe X
      
      
        gp_axe_vitesse_angulaire_y
        La vitesse angulaire du gamepad sur l'axe Y
      
      
        gp_axe_vitesse_angulaire_z
        La vitesse angulaire du gamepad sur l'axe Z
      
      
        gp_axis_orientation_x
        L'orientation X du gamepad
      
      
        gp_axis_orientation_y
        L'orientation Y du gamepad
      
      
        gp_axis_orientation_z
        L'orientation Z du gamepad
      
      
        gp_axis_orientation_w
        L'orientation W du gamepad
      
    
  
  REMARQUE: l'orientation du gamepad est un quaternion , c'est pourquoi il a quatre valeurs (X, Y, Z et W).
  Ces constantes ne sont actuellement prises en charge que sur PS4 et PS5. Lorsqu'elles sont utilisées sur d'autres plateformes, les fonctions d'entrée renvoient 0, même en cas d'utilisation d'un gamepad DualSense.
  Fonctions
  Vous trouverez ci-dessous une liste de toutes les fonctions du gamepad :
  
    gamepad_is_supported
    gamepad_is_connected
    gamepad_get_guid
    gamepad_get_device_count
    gamepad_get_description
    gamepad_get_button_threshold
    gamepad_get_axis_deadzone
    gamepad_get_option
    gamepad_set_button_threshold
    gamepad_set_axis_deadzone
    gamepad_set_vibration
    gamepad_set_colour
    option gamepad_set
    gamepad_axis_count
    gamepad_axis_value
    vérification du bouton du gamepad
    gamepad_button_check_pressed
    gamepad_button_check_released
    nombre de boutons de la manette
    valeur_du_bouton_de_jeu
    gamepad_hat_count
    gamepad_hat_value
  
   
  Les fonctions gamepad suivantes existent également et sont utilisées pour remapper les constantes intégrées aux entrées physiques directes d'un gamepad donné. Ces fonctions ne concernent que les plateformes cibles Windows Desktop, Ubuntu, macOS et Android et, sous Windows
    elles ne seront valables que pour les périphériques à entrée directe. Bien que GameMaker Studio 2 soit fourni avec des mappages pour un certain nombre de manettes de jeu différentes basés sur la SDL Gamepad Controller DB, cependant
    en raison du grand nombre de types et de marques de manettes, il est impossible de mapper les constantes GML aux entrées correctes pour chaque marque et chaque modèle. Ces fonctions vous permettent donc de créer vos propres mappages personnalisés.
   
  
    gamepad_get_mapping
    gamepad_test_mapping
    gamepad_remove_mapping
  
   
  Il convient de noter que les manettes de jeu à entrée directe sont exécutées en mode coopératif, ce qui signifie que votre jeu n'y a accès que lorsqu'il est l'application de premier plan.
    Les contrôleurs à entrée directe seront donc "perdus" si le jeu perd le focus, puis "retrouvés" lorsqu'il revient au focus (ceci peut être détecté dans l'événement système et traité). De même, aucune entrée provenant des manettes de jeu ne sera détectée lorsque le jeu n'est pas au point, et nous vous recommandons de
    d'utiliser la fonction os_is_paused() ou window_has_focus() pour détecter cela et mettre le jeu en pause ou quelque chose de similaire.
    car tout bouton maintenu enfoncé au moment où le jeu perd le focus conservera cet état jusqu'à ce que le jeu retrouve le focus.
   
  Compatibilité
  La liste suivante indique la compatibilité actuelle entre les différentes plates-formes (notez que cela changera avec les futures mises à jour) :
  
    Windows est entièrement pris en charge avec un maximum de 12 périphériques connectés à la fois (numérotés de 0 à 11, 0 à 3 étant des périphériques XInput et 4 à 11 des périphériques DirectInput). Le remappage des constantes du contrôleur est également autorisé.
    macOS est pris en charge avec un maximum de 4 appareils connectés autorisés en même temps, et ces appareils peuvent UNIQUEMENT être du type Playstation3ou Xbox 360. Veuillez noter que l'option "Build for Mac AppStore" dans Mac Game Options
      doit être désactivée pour que la prise en charge des manettes fonctionne. Le remappage des constantes de la manette est également autorisé.
    Ubuntu supporte également l'entrée Gamepad, mais vous devrez peut-être installer des bibliothèques supplémentaires à partir du dépôt Ubuntu. Vous pouvez le faire facilement en ouvrant un terminal de ligne de commande et en tapant ce qui suit (ceci installera le support GUI
      pour le joystick/gamepad ainsi que l'API joystick/gamepad elle-même - le remappage des constantes du contrôleur n' est pas autorisé) :
     sudo apt-get install jstest-gtk sudo apt-get install joystick.

    
    Les jeuxHTML5 utilisant des manettes de jeu sont pris en charge par la plupart des principaux navigateurs, à l'exception de Safari. Le remappage des constantes du contrôleur n' est pas autorisé.
    La prise en charge de la manette de jeu s'étend également à iOS avec le cabinet iCade. L'axe gauche correspond à la manette de jeu (bien que l'entrée soit numérique et non analogique), les quatre boutons "frontaux" correspondent aux boutons avant du boîtier et les quatre boutons d'épaule correspondent à ceux situés à l'arrière du boîtier.
      boutons d'épaule correspondent à ceux de l'arrière du boîtier.
    Android (et Amazon Fire) prennent en charge les contrôleurs NYKO et les contrôleurs Bluetooth génériques, mais uniquement lorsqu'ils sont activés, ce qui signifie que vous devrez cocher l'option iCade/Bluetooth dans la section Général des options de jeu d'Android. Ils requièrent le niveau 12 de l'API pour fonctionner pleinement et il convient de noter que GameMaker Studio 2 enregistrera comme étant connectés tous les périphériques Bluetooth avec lesquels votre appareil est apparié, qu'il soit réellement connecté ou non.
      connecté. Il faut donc en tenir compte lors de l'attribution et du contrôle des "slots". Notez que le remappage des constantes du contrôleur est également autorisé.
    Sur la PS4, si vous souhaitez utiliser le suivi du pavé tactile, vous devez utiliser les device_mouse_* boutons. Le remappage des constantes du contrôleur n' est pas autorisé.
    Sur Windows UWP, XBoxOne et Nintendo Switch les manettes de jeu sont entièrement prises en charge, mais le remappage des constantes de la manette n' est pas autorisé.
  
  Idéalement, sur toutes les plates-formes cibles, vous voulez énumérer une liste de "slots" de manettes de jeu disponibles et ensuite les vérifier pour voir si des périphériques sont détectés, quelque chose comme ceci :
  var _maxpads = gamepad_get_device_count() ;
     for (var i = 0 ; i < _maxpads ; i++) {
     if (gamepad_is_connected(i)) {
     // faire des choses avec le pad "i" }
     }
  
   
   
  
    
      
        Retour : Entrée du jeu
        Suivant : Touches et claviers virtuels
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

