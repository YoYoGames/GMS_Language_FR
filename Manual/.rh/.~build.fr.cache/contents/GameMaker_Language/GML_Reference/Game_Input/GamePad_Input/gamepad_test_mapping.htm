gamepad_test_mapping Cette fonction peut être utilisée pour définir le mappage de la manette de jeu sur les cibles qui le permettent. Vous fournissez l'index «slot» pour la manette de jeu à définir, puis la chaîne de carte, qui aurait dû être créée en utilisant le format SDL avec les champs suivants:<guid>,<description>,platform:<platform-name>,<bindings> Les détails à inclure dans chacun de ces champs sont:guid - une chaîne de chiffres et de lettres qui identifie de manière unique un type d'appareil (cela peut être récupéré à l'aide du gamepad_get_guid() fonction)description - une description Ascii de l'appareil (elle peut être récupérée à l'aide du gamepad_get_description() fonction)platform-name - sera soit "platform: android", "platform: windows", "linux" ou "mac" (notez que cela sera ajouté automatiquement à la chaîne lorsque vous appelez cette fonction, et que vous n'avez donc pas besoin de le fournir lors de la construction de vos propres chaînes de mappage)bindings - un ensemble d'entrées séparées par un ',' pour lier l'entrée réelle à des constantes GML La liste des entrées séparées par des virgules suit un format spécifique pour chaque entrée:<abstract-gp-name>:<value-binding> Ici <value-binding> (c'est-à-dire: l'entrée directe de la manette de jeu) peut être l'un des éléments suivants:a<N> - Ceci représente un axe de la manette de jeu, où le <N> est l'un des axes de 0 à gamepad_axis_count() -1 b<N> - Ceci représente un bouton de la manette de jeu, où le <N> est l'un des boutons de 0 à gamepad_button_count() -1 h<N>.<mask> - Ceci représente un chapeau de la manette de jeu, où le <N> représente un chapeau de 0 à gamepad_hat_count() -1 et le <mask> sera soit 1, 2, 4 ou 8. Chaque valeur d'entrée doit être liée à un nom SDL, exprimé sous la forme <>abstract-gp-name>, qui à son tour est liée à une constante GML Le tableau ci-dessous montre l'équivalence entre le nom SDL et la constante GameMaker Studio 2 Nom SDL Nom GML a gp_face1 b gp_face2 x gp_face3 y gp_face4 leftshoulder gp_shoulderl lefttrigger gp_shoulderlb rightshoulder gp_shoulderr righttrigger gp_shoulderrb guide gp_select start gp_start leftstick gp_stickl rightstick gp_stickr dpup gp_padu dpdown gp_padl dpleft gp_padr dpright gp_padd leftx gp_axislh lefty gp_axislv rightx gp_axisrh righty gp_axisrv Lorsque vous avez construit votre chaîne de mappage, cela devrait ressembler à ceci:"050000005e040000fd020000ffff3f00,Xbox Wireless Controller,a:b0,b:b1,start:b4,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b6,leftshoulder:b9,leftstick:b7,lefttrigger:a4,leftx:a0,lefty:a1,rightshoulder:b10,rightstick:b8,righttrigger:a5,rightx:a2,righty:a3,x:b2,y:b3,platform:android" Syntaxe:gamepad_test_mapping(index, mapping_string); Argument Description index Quel «slot» d'index de manette de jeu définir. colour La chaîne de mappage à utiliser (voir la description pour plus d'informations). Retour:N/A Exemple:var mapping = gamepad_get_guid(global.padIndex) + "," + gamepad_get_description(global.padIndex); var len = array_length(global.PadInstances); for( i = 0; i < len; i += 2)     {
         var left = global.PadInstances[i];     var right = global.PadInstances[i+1];     mapping += "," + left.sdlLabel + ":" + right.binding;     }
     gamepad_test_mapping(global.padIndex, mapping); Le code ci-dessus parcourra un certain nombre d'instances et utilisera les valeurs des différentes variables qu'elles contiennent pour créer une chaîne de mappage, qui est ensuite définie pour être utilisée sur la manette de jeu dans l'index d'emplacement donné.  Retour: Entrée de la manette de jeu Suivant:gamepad_remove_mapping © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

