 La saisie au clavier Lorsque vous manipulez le clavier dans GameMaker Studio 2 vous disposez d'une variété de fonctions qui peuvent être utilisées pour reconnaître différents états du clavier, comme enfoncé ou relâché. Il y en a aussi qui stockent toutes les touches sous forme de chaîne ou qui peuvent vous dire quelle a été la dernière touche enfoncée, ainsi que d'autres qui vous permettent d'effacer complètement l'état du clavier. REMARQUE: ces fonctions sont conçues pour les plates-formes de bureau Windows / Mac / Ubuntu Vous constaterez peut-être que certaines des variables et constantes intégrées ne sont pas valides sur d'autres plates-formes et que de nombreuses fonctions ne fonctionneront pas sur les mobiles. Chaque caractère d'entrée d'une touche (ou de plusieurs touches) est défini par son code UTF8, qui est une valeur numérique. Cette valeur peut être récupérée pour n'importe quel caractère à l'aide de la ord() fonction mais, GameMaker Studio 2 également une série de constants pour les touches spéciales du clavier les plus utilisées et les fonctions spéciales. En règle générale, vous utiliseriez une combinaison de ord() avec le keyboard_check*() fonctions, quelque chose comme ceci:if keyboard_check(ord("A"))     {
         hspeed = -5;     }
   Ainsi, ce qui précède vérifiera la touche "A" et si elle est enfoncée, il définira la vitesse horizontale de l'objet sur -5. Notez que l'utilisation de ord() de cette manière ne fonctionnera correctement que si la chaîne d'entrée n'a qu'un seul caractère et est un nombre de 0 à 9 ou un caractère romain en majuscule de A à Z. La fonction ord() renverra une valeur UTF8 complète, mais le keyboard_check*() les fonctions détecteront uniquement A - Z et 0 - 9. Mais que faire si vous souhaitez utiliser les touches fléchées? Ou si vous souhaitez modifier une action à l'aide de la touche "shift"? Eh bien, pour cela, GameMaker Studio 2 a une série de vk_ constantes (vk_ signifie clé virtuelle ) que vous pouvez utiliser à la place de ord(): Constant Description vk_nokey code clé indiquant qu'aucune touche n'est enfoncée vk_anykey code clé indiquant qu'une touche est enfoncée vk_left code d'accès pour la touche fléchée gauche vk_right code d'accès pour la touche fléchée droite vk_up code d'accès pour la touche fléchée vers le haut vk_down code d'accès pour la touche fléchée vers le bas vk_enter la touche Entrée vk_escape touche d'échappement vk_space touche espace vk_shift l'une des touches majuscules vk_control l'une des touches de contrôle vk_alt touche Alt vk_backspace touche de retour arrière vk_tab La touche TAB vk_home clé de la maison vk_end touche de fin vk_delete supprimer la clé vk_insert insérer la clé vk_pageup touche de mise en page vk_pagedown touche pagedown vk_pause touche pause / pause vk_printscreen imprime la touche écran / sysrq vk_f1 ... vk_f12 code clavier pour les touches de fonction F1 à F12 vk_numpad0 ... vk_numpad9 touches numériques du clavier numérique vk_multiply touche de multiplication sur le pavé numérique vk_divide touche de division sur le pavé numérique vk_add ajouter une touche sur le pavé numérique vk_subtract soustraire la touche du pavé numérique vk_decimal touches à points décimaux sur le pavé numérique Les constantes suivantes ne peuvent être utilisées qu'avec keyboard_check_direct(): Constant Description vk_lshift touche Maj gauche vk_lcontrol touche de commande gauche vk_lalt touche alt gauche vk_rshift touche Maj droite vk_rcontrol touche de commande droite vk_ralt touche alt droite Voici un petit exemple d'utilisation du vk_ constantes:if keyboard_check_pressed(vk_tab)     {
         instance_create_layer(x, y, "Controllers", obj_Menu);     }
   Le code ci-dessus détectera si la touche "Tab" est enfoncée et créera une instance de l'objet "obj_Menu" si c'est le cas. Si vous avez besoin de rechercher un caractère clé qui n'est pas 0 - 9, A - Z ou l'une des constantes VK, alors vous devriez vérifier l'une des keyboard_* variables, comme keyboard_lastchar par exemple:var _key = keyboard_lastchar; if ord(_key) == ord("ç")     {
         show_debug_message("ç key pressed");     }
   Les fonctions suivantes sont disponibles lorsque vous travaillez avec un clavier: REMARQUE: ces fonctions ne fonctionneront pas lors de l'utilisation d'un clavier virtuel à l' écran. io_clearkeyboard_checkkeyboard_check_pressedkeyboard_check_releasedkeyboard_check_directkeyboard_clearkeyboard_set_mapkeyboard_get_mapkeyboard_unset_mapkeyboard_set_numlockkeyboard_get_numlock Certaines fonctions peuvent également être utilisées pour simuler les pressions sur les touches:keyboard_key_presskeyboard_key_release Enfin, les variables suivantes sont intégrées à GameMaker Studio 2 et sont accessibles pour obtenir des informations sur l'état et la saisie du clavier: REMARQUE: lors de l'utilisation du clavier virtuel, seule la variable keyboard_string sera mise à jour avec l'entrée du clavier. keyboard_keykeyboard_lastkeykeyboard_lastcharkeyboard_string Retour: Entrée de jeu Suivant: Entrée souris © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

