
  
  mp_grid_add_cell
  Avec cette fonction, nous pouvons marquer des cellules individuelles dans la grille MP donnée comme étant "interdites", ce qui signifie que les fonctions de recherche de chemin ne les traverseront jamais. Normalement, vous travaillez en coordonnées x/y de la pièce, et non en coordonnées de cellules de la grille MP. Considérons donc l'image suivante qui montre comment les deux peuvent être corrélés :
  Comme vous pouvez le voir, la grille mp_grid est numérotée comme une série de cellules (commençant à 0,0 dans le coin supérieur gauche).
    ), et lorsque vous placez cette grille sur la pièce, il existe une corrélation directe entre les coordonnées de la pièce (qui commencent également à 0,0 en haut à gauche) et les cellules de la grille. Dans l'image, vous pouvez voir qu'une instance à la position 260,130
    se trouve dans la cellule 8,4 de la grille. Vous pouvez facilement calculer mathématiquement la cellule exacte sur laquelle une position se trouve en divisant le nombre par la résolution de la grille et en arrondissant à l'unité inférieure ou, si vous utilisez des résolutions de grille en puissance de 2 (comme 8,
    16, 32 etc...), vous pouvez utiliser les opérateurs bit à bit. Il convient de noter que l'opération par bit est plus rapide et l'exemple ci-dessous montre les deux méthodes.
   
  Syntaxe :
  mp_grid_add_cell(id, h, v) ;
  
    
      
        Arguments
        Description
      
      
        id
        Index de la grille mp_ qui doit être utilisée
      
      
        h
        Position horizontale de la cellule dans la grille
      
      
        v
        Position verticale de la cellule dans la grille
      
    
  
   
  Les retours :
  N/A
   
  Exemple :
  with (obj_Wall) {
     mp_grid_add_cell(grid, floor(x / 32), floor(y / 32)) ; }
     avec (obj_Door) {
     mp_grid_add_cell(grid, x>>5, y>>5) ; }
  
  Le code ci-dessus fera en sorte que tous les "obj_Wall" et tous les obj_Door ajoutent leurs positions de cellules équivalentes dans la mp_grid indexée dans la variable "grid". Dans la première partie de l'exemple, cela est fait en prenant les coordonnées x/y de l'objet
    et en les divisant par la résolution de la grille (en utilisant floor pour garder les valeurs sous forme d'entiers), et dans la seconde partie (puisque la résolution de la grille est une puissance de 2) cela est fait en décalant les coordonnées x,y de 5 places vers la droite.
   
   
   
  
    
      
        Retour : Planification des mouvements
        Suivant : mp_grid_add_instances
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

