
  
  mp_grid_path
  Avec cette fonction, vous pouvez créer un chemin qui naviguera d'un point de départ à un point d'arrivée en utilisant une grille mp_grid que vous avez préalablement définie, en évitant tout obstacle qui a déjà été ajouté dans la grille. Les arguments xstart et ystart
    indiquent le début du chemin en coordonnées de pièce, tandis que les arguments xgoal, ygoal indiquent la destination. Vous pouvez également sélectionner un mouvement horizontal/vertical uniquement, ou autoriser des mouvements diagonaux complets en spécifiant true dans l'argument allowdiag.
    La fonction renvoie soit true (elle a réussi à trouver un chemin), soit false (elle a échoué), et définit le chemin choisi. Dans l'image suivante, vous pouvez voir comment tout cela fonctionne ensemble :
  Comme vous pouvez le voir, les objets "pipe" ont été ajoutés à la grille, ce qui signifie que tout chemin créé doit les contourner.
    chemin créé doit les contourner. Deux chemins ont été créés dans l'image, l'un (vert) a été réalisé avec des diagonales autorisées et l'autre (rouge) sans. La différence entre les deux est assez évidente, le chemin vert paraissant beaucoup plus "élégant" et direct.
    et direct, mais tout dépend de l'utilisation que vous allez en faire et de celle que vous préférez. Notez que le chemin est indépendant de l'instance courante - c'est un chemin à travers la grille, pas un chemin pour une instance spécifique, même si une instance spécifique
    peut avoir la variable qui stocke l'index du chemin. Vous pouvez également avoir besoin de déboguer ces chemins pour voir comment ils sont créés et interagissent dans l'environnement du jeu, auquel cas vous devrez utiliser la fonction draw_path() fonction.
  NOTE: Le chemin doit avoir été créé précédemment (soit en code avec path_add() ou en tant que ressource)
    et sera remplacé par le chemin généré par cette fonction.
   
  Syntaxe :
  mp_grid_path(id, path, xstart, ystart, xgoal, ygoal, allowdiag) ;
  
    
      
        Arguments
        Description
      
      
        id
        Index de la grille mp_ qui doit être utilisée
      
      
        chemin
        indice du chemin qui doit être utilisé par la fonction
      
      
        x départ
        Coordonnée x de départ du nouveau chemin
      
      
        y commencer
        Coordonnée y de départ du nouveau chemin
      
      
        xgoal
        Coordonnée x d'arrivée du nouveau chemin
      
      
        ygoal
        Coordonnée y d'arrivée du nouveau chemin
      
      
        allowdiag
        Indique si les mouvements diagonaux sont autorisés au lieu d'être seulement horizontaux ou verticaux.
      
    
  
   
  Les retours :
  Booléen
   
  Exemple :
  global.grid = mp_grid_create(0, 0, room_width div 32, room_height div 32, 32, 32) ; mp_grid_add_instances(global.grid, obj_wall, false) ; with (obj_Enemy) {
     path = path_add() ; if mp_grid_path(global.grid, path, x, y, obj_Player.x, obj_Player.y, 1) {
     path_start(path, 0, 3, 0) ; }
     }
  
  Le code ci-dessus crée une variable globale "global.grid", puis génère une mp_grid et affecte son index (id) à cette variable pour l'utiliser dans tous les autres appels de fonction mp_grid. Il ajoute ensuite toutes les instances de "obj_Wall" dans la grille avant de
    d'obtenir toutes les instances de "obj_Enemy" pour créer un chemin, puis d'utiliser mp_grid_path pour calculer un itinéraire entre leur position et celle de "obj_Player". Si un chemin existe, l'objet se met en route le long du chemin.
   
   
   
  
    
      
        Retour : Planification des mouvements
        Suivant : mp_grid_add_cell
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

