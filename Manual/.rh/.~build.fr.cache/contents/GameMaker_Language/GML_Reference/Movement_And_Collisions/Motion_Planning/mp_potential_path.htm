mp_potential_path Cette fonction calcule un chemin pour l'instance depuis sa position et son orientation actuelles jusqu'à la position spécifiée par les arguments xgoal, ygoal. Il utilise la taille de pas indiquée tout en essayant d'éviter une collision avec toutes les instances ou uniquement celles marquées comme solides. Comme dans la fonction mp_potential_step() il utilise des étapes de champ potentielles pour accomplir cela et la manière dont il le fait peut être modifiée via la fonction mp_potential_settings(). Le chemin indiqué doit déjà exister et il sera écrasé par le nouveau chemin. La fonction retournera si un chemin a été trouvé (vrai) ou non (faux). Pour éviter que la fonction continue à calculer indéfiniment, vous devez fournir un facteur supérieur à 1 - la fonction s'arrêtera et signalera un échec si elle ne peut pas trouver un chemin plus court que ce facteur multiplié par la distance entre le début et l'objectif. Un facteur de 4 est normalement suffisant, mais si vous prévoyez de longs détours, vous pourriez les allonger. S'il échoue, un chemin est toujours créé qui court dans la direction approximative de l'objectif, mais il ne l'atteindra pas. REMARQUE: cette fonction ne déplace pas l'instance. Il définit un chemin uniquement et vous devez utiliser les fonctions Chemin pour le mouvement. Syntaxe:mp_potential_path(path, xgoal, ygoal, stepsize, factor, checkall) Argument Description path index du chemin à utiliser par la fonction xgoal La position x cible. ygoal La position y cible. stepsize Vitesse de déplacement de l'instance en pixels par étape. factor Ce nombre est utilisé pour empêcher une boucle infinie. Il doit être supérieur à 1. Voir la description de la fonction pour plus d'informations. checkall Indique s'il faut vérifier toutes les instances (true) ou uniquement les solides (false). Retour:Boolean Exemple:path = path_add(); mp_potential_path(path, obj_Player.x, obj_Player.y, 3, 4, 0); path_start(path, 3, 0, 0); Le code ci-dessus crée une nouvelle ressource de chemin et stocke son index dans la variable "chemin". Il génère ensuite un chemin en utilisant mp_potential_path entre l'objet avec ce code et l'objet "obj_Player", recherche de collisions avec toutes les instances de la salle. Enfin, il démarre l'objet le long de ce chemin, même si la fonction n'a pas réussi à renvoyer une route complète vers le "obj_Player".  Retour: Planification de mouvement Suivant:mp_potential_path_object © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

