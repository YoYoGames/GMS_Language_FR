
  
  rectangle_dans_rectangle
  Cette fonction vérifie deux zones rectangulaires que vous définissez pour voir si le rectangle source n'est pas en collision, s'il est complètement dans les limites du rectangle de destination ou s'ils se touchent simplement. S'ils ne se touchent pas du tout, la fonction
    renverra 0, si le rectangle source est complètement dans les limites du rectangle de destination, elle renverra 1, et s'ils se chevauchent simplement, elle renverra 2. L'image ci-dessous illustre cela :
  
  Syntaxe :
  rectangle_dans_rectangle(sx1, sy1, sx2, sy2, dx1, dy1, dx2, dy2) ;
  
    
      
        Arguments
        Description
      
      
        sx1
        La coordonnée x du côté gauche du rectangle source.
      
      
        sy1
        La coordonnée y du côté supérieur du rectangle source.
      
      
        sx2
        La coordonnée x du côté droit du rectangle source.
      
      
        sy2
        La coordonnée y du côté inférieur du rectangle source.
      
      
        dx1
        La coordonnée x du côté gauche du rectangle de destination à vérifier.
      
      
        dy1
        La coordonnée y du côté supérieur du rectangle de destination à vérifier.
      
      
        dx2
        La coordonnée x du côté droit du rectangle de destination à vérifier.
      
      
        dy2
        La coordonnée y du côté inférieur du rectangle de destination à vérifier.
      
    
  
   
  Les retours :
  Real
   
  Exemple :
  switch(rectangle_in_rectangle(x - 50, y - 50, x + 50, y + 50, mouse_x - 50, mouse_y - 50, mouse_x + 50, mouse_y + 50)) {
     case 0 : image_blend = c_yellow ; break ; case 1 : image_blend = c_red ; break ; case 2 : image_blend = c_orange ; break ; }
  
  Le code ci-dessus vérifie la collision entre deux zones rectangulaires, et définit l'instance image_blend en fonction de la valeur de retour.
   
   
   
  
    
      
        Retour : Collisions
        Suivant : rectangle_dans_triangle
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

