
  
  rectangle_en_cercle
  Cette fonction va vérifier une zone rectangulaire que vous définissez pour voir si elle n'est pas en collision, si elle est complètement dans les limites de la destination, ou si elle touche simplement une zone circulaire définie. S'ils ne se touchent pas du tout, la fonction retournera
    0, si la source est complètement à l'intérieur de la destination, elle renvoie 1, et si elles se chevauchent simplement, elle renvoie 2. L'image ci-dessous illustre cela :
  
   
  Syntaxe :
  rectangle_in_circle(sx1, sy1, sx2, sy2, x, y, rad) ;
  
    
      
        Arguments
        Description
      
      
        sx1
        La coordonnée x du côté gauche du rectangle source.
      
      
        sy1
        La coordonnée y du côté supérieur du rectangle source.
      
      
        sx2
        La coordonnée x du côté droit du rectangle source.
      
      
        sy2
        La coordonnée y du côté inférieur du rectangle source.
      
      
        x
        La coordonnée x du centre du cercle
      
      
        y
        La coordonnée y du centre du cercle.
      
      
        rad
        Le rayon autour du point central dans lequel il faut vérifier la présence d'une collision.
      
    
  
   
  Les retours :
  Real
   
  Exemple :
  inst = instance_nearest(x, y, obj_Bullet) ; if instance_exists(inst) {
     if rectangle_in_circle(inst.x - 5, inst.y - 5, inst.x + 5, inst.y + 5, x, y - 25, 20) > 0 {
     hit = true ; }
     }
  
  Le code ci-dessus utilise la fonction rectangle_in_circle pour vérifier la présence d'une collision entre une zone circulaire et le rectangle entourant une instance trouvée. S'il y a une collision (soit un chevauchement des bords, soit un englobement), une variable sera définie comme vraie.
   
   
   
  
    
      
        Retour : Collisions
        Suivant : place_empty
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

