
  
  rectangle de collision
  Collision_rectangle utilise les quatre premiers arguments (x1,y1,x2,y2) pour définir une zone dans la pièce actuelle et vérifie ensuite si un objet défini par l'argument "obj" entre en collision avec cette zone.
    zone. Cette collision peut être vérifiée comme précise ou non, et vous pouvez également choisir de vérifier l'instance qui exécute le code elle-même ou non. Considérez cette image :
  Ici, l'instance au milieu utilise un rectangle de collision pour vérifier
    les objets de type balle. Comme vous pouvez le constater, même si le sprite ne touche pas le rectangle, la collision se produira (même si vous avez défini l'option precise de la fonction sur true).
    car la boîte englobante de ce sprite dépasse le rectangle de collision. D'autre part, les balles vertes ne seront considérées en collision que si le sprite réel dépasse le rectangle. N'oubliez pas que pour que les collisions précises soient prises en compte, le sprite de l'objet et la fonction de collision doivent tous deux avoir la précision activée. Il convient également de noter que la valeur de retour de la fonction peut être l'identifiant de n'importe laquelle des instances considérées comme étant en collision.
  Notez qu'au lieu d'un index d'objet, vous pouvez fournir une instance id pour rechercher une instance spécifique, ou les mots-clés d'instance all, ou other (en fonction de l'événement et de la portée actuelle du code).
   
  Syntaxe :
  collision_rectangle(x1, y1, x2, y2, obj, prec, notme) ;
  
    
      
        Arguments
        Description
      
      
        x1
        La coordonnée x du côté gauche du rectangle à vérifier.
      
      
        y1
        La coordonnée y du côté supérieur du rectangle à vérifier.
      
      
        x2
        La coordonnée x du côté droit du rectangle à vérifier.
      
      
        y2
        La coordonnée y du côté inférieur du rectangle à vérifier.
      
      
        obj.
        L'objet à vérifier pour les collisions d'instance.
      
      
        préc
        Si la vérification est basée sur des collisions précises(vrai, ce qui est plus lent) ou sur sa boîte de délimitation en général(faux, plus rapide).
      
      
        notme
        Si l'instance appelante, si elle est pertinente, doit être exclue(true) ou non(false).
      
    
  
   
  Les retours :
  Identité de l'instance ou personne
   
  Exemple :
  var inst ; inst = collision_rectangle(50, 50, 200, 100, obj_Ball, false, true) ; if inst != noone {
     with (inst) instance_destroy() ; }
  
  Ce code court utilise collision_rectangle pour vérifier une zone dans la pièce de 50x, 50y (en haut à gauche du rectangle) à 200x, 200y (en bas à droite du rectangle) pour une instance d'un objet appelé "obj_ball". Elle stocke la valeur de retour dans une variable temporaire
    temporaire qui est ensuite vérifiée pour voir si cette valeur est un identifiant d'instance, ou le mot-clé noone. Si ce n'est pas noone, elle utilise l'identifiant d'instance stocké pour détruire l'objet.
   
   
   
  
    
      
        Retour : Collisions
        Suivant : collision_rectangle_list
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

