
  
  cercle de collision
  Collision_circle crée une zone circulaire de rayon donné par l'utilisateur autour des points x1,y1 et vérifie ensuite que cette zone n'entre pas en collision avec une instance de l'objet spécifié par l'argument "obj".
    Cette vérification peut être précise ou non, mais pour que les collisions précises soient activées, l'objet ou l'instance que vous vérifiez doit également avoir des collisions précises activées pour son sprite. Sinon, la vérification par défaut est basée sur les boîtes englobantes.
    L'image suivante illustre ce fonctionnement :
  Ici, l'instance du milieu utilise un cercle de collision pour vérifier la présence d'objets de type balle.
    objets. Les objets bleus n'ont pas de boîte de délimitation précise et, comme vous pouvez le voir, même si le sprite ne touche pas réellement le cercle, la collision peut se produire (même si vous avez défini l'option precise de la fonction sur true) car la boîte de délimitation de ce sprite dépasse la zone circulaire définie par collision_circle.
    de ce sprite dépasse la zone circulaire définie par collision_circle. D'un autre côté, les balles vertes ne seront considérées comme des collisions que si le sprite en question dépasse le cercle défini. N'oubliez pas que pour que des collisions précises soient prises en compte
    le sprite de l'objet et la fonction de collision doivent tous deux avoir la précision activée. Il convient également de noter que la valeur de retour de la fonction peut être l'identifiant de n'importe laquelle des instances considérées comme étant en collision.
  Notez qu'au lieu d'un index d'objet, vous pouvez fournir une instance id pour rechercher une instance spécifique, ou les mots-clés d'instance all, ou other (selon l'événement et l'étendue du code actuel).
   
  Syntaxe :
  collision_circle(x1, y1, rad, obj, prec, notme) ;
   
  
    
      
        Arguments
        Description
      
      
        x1
        La coordonnée x du centre du cercle à vérifier.
      
      
        y1
        La coordonnée y du centre du cercle à vérifier.
      
      
        rad
        Le rayon (distance en pixels de son centre à son bord).
      
      
        obj.
        L'objet à vérifier pour les collisions d'instance.
      
      
        préc
        Si le contrôle est basé sur des collisions parfaites au niveau du pixel (true = slow) ou sur sa boîte de délimitation en général (false = fast).
      
      
        notme
        Si l'instance appelante, si elle est pertinente, doit être exclue(true) ou non(false).
      
    
  
   
  Les retours :
  Identité de l'instance ou personne
   
  Exemple :
  if collision_circle(x, y, 20, obj_Cursor, false, true) {
     image_index = 1 ; }
     else image_index = 0 ;
  Le code ci-dessus vérifiera une zone circulaire avec un rayon de 20 pixels pour une collision avec "obj_Cursor" et s'il y en a une, il mettra l'image_index de l'objet qui exécute le code à 1, mais s'il n'y en a pas, il mettra l'image_index de l'objet à 0.
    à 0.
   
   
   
  
    
      
        Retour : Collisions
        Suivant : collision_circle_list
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

