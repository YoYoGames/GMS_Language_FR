
  
  liste de lignes de collision
  Cette fonction est identique à la fonction collision_line() mais au lieu de détecter une seule instance de collision à la fois, elle en détectera plusieurs. Vous fournissez les positions x/y du début et de la fin de la ligne à contrôler, ainsi que l'objet à contrôler.
    de la ligne à vérifier ainsi que l'objet à vérifier, et vous pouvez définir que la vérification doit être précise (dans ce cas, toutes les instances vérifiées devront avoir des masques de collision précis ) et si la vérification doit inclure l'instance appelante
    ou non.
  Vous fournissez également une liste de DS, de sorte que les id valeurs de toutes les instances qui entrent en collision avec l'instance appelante seront
    seront ajoutées à la fin de la liste donnée. Vous pouvez effacer la liste avant d'appeler cette fonction afin qu'elle ne contienne que les résultats de cet appel de fonction. Vous avez également la possibilité d'ordonner les
    instances en fonction de leur distance entre le centre de la ligne et leur origine. La fonction renvoie le nombre d'instances trouvées, ou 0 si aucune n'est trouvée.
  Notez qu'au lieu d'un index d'objet, vous pouvez fournir le mot-clé d'instance all, pour vérifier toutes les instances de la salle actuelle, qui peut inclure l'instance qui exécute le code (selon l'argument
    le code (en fonction de l'argument notme ).
   
  Syntaxe :
  collision_line_list(x1, y1, x2, y2, obj, prec, notme, list, ordered) ;
  
    
      
        Arguments
        Description
      
      
        x1
        La coordonnée x du début de la ligne.
      
      
        y1
        La coordonnée y du début de la ligne.
      
      
        x2
        La coordonnée x de la fin de la ligne.
      
      
        y2
        La coordonnée y de la fin de la ligne.
      
      
        obj.
        L'objet à vérifier pour les collisions d'instance.
      
      
        préc
        Si la vérification est basée sur des collisions précises(vrai, ce qui est plus lent) ou sur sa boîte de délimitation en général(faux, plus rapide).
      
      
        notme
        Si l'instance appelante, si elle est pertinente, doit être exclue(true) ou non(false).
      
      
        liste
        La liste DS à utiliser pour stocker les ID des instances en collision.
      
      
        commandé
        Si la liste doit être ordonnée par distance(true) ou non(false).
      
    
  
   
  Les retours :
  Integer (Le nombre d'instances trouvées en collision)
   
  Exemple :
  var _list = ds_list_create() ; var _num = collision_line_list(x - 100, y, x + 100, y, obj_Enemy, false, true, _list, false) ; if _num > 0 {
     for (var i = 0 ; i < _num ; ++i ;) {
     instance_destroy(_list[| i]) ; }
     }
     ds_list_destroy(_list) ;
  
  Le code ci-dessus vérifie une ligne de 100 pixels de part et d'autre de la position de l'instance appelante pour détecter les collisions avec des instances de "obj_Enemy". S'il y a des collisions, la liste pré-créée est parcourue en boucle et chaque instance qui était dans la collision est détruite.
    collision est détruite.
   
   
   
  
    
      
        Retour : Collisions
        Suivant : collision_point
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

