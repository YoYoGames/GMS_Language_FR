
  
  liste de collision_ellipse
  Cette fonction est identique à la fonction collision_ellipse() mais au lieu de détecter une seule instance en collision à la fois, elle en détectera plusieurs. Vous fournissez les positions x/y de la partie supérieure
    Vous fournissez les positions x/y du haut, de la gauche et du bas, de la droite de la zone elliptique à vérifier, ainsi que l'objet à vérifier, et vous pouvez définir que la vérification doit être précise (dans ce cas, toutes les instances vérifiées devront avoir des masques de collision précis ) et si la vérification doit inclure l'instance appelante ou non.
    inclure l'instance appelante ou non.
  Vous fournissez également une liste de DS, de sorte que les id valeurs de toutes les instances qui entrent en collision avec l'instance appelante seront
    seront ajoutées à la fin de la liste donnée. Vous pouvez effacer la liste avant d'appeler cette fonction afin qu'elle ne contienne que les résultats de cet appel de fonction. Vous avez également la possibilité d'ordonner les
    instances en fonction de leurs distances entre l'origine de la zone elliptique et leurs origines. La fonction renvoie le nombre d'instances trouvées, ou 0 si aucune n'est trouvée.
  Notez qu'au lieu d'un index d'objet, vous pouvez fournir le mot-clé d'instance all, pour vérifier toutes les instances de la salle actuelle, qui peut inclure l'instance qui exécute le code (selon l'argument
    le code (en fonction de l'argument notme ).
   
  Syntaxe :
  collision_ellipse_list(x1, y1, x2, y2, obj, prec, notme, list, ordered) ;
  
    
      
        Arguments
        Description
      
      
        x1
        La coordonnée x du côté gauche de l'ellipse à vérifier.
      
      
        y1
        La coordonnée y du côté supérieur de l'ellipse à vérifier.
      
      
        x2
        La coordonnée x du côté droit de l'ellipse à vérifier.
      
      
        y2
        La coordonnée y du côté inférieur de l'ellipse à vérifier.
      
      
        obj.
        L'objet à vérifier pour les collisions d'instance.
      
      
        préc
        Si la vérification est basée sur des collisions précises(vrai, ce qui est plus lent) ou sur sa boîte de délimitation en général(faux, plus rapide).
      
      
        notme
        Si l'instance appelante, si elle est pertinente, doit être exclue(true) ou non(false).
      
      
        liste
        La liste DS à utiliser pour stocker les ID des instances en collision.
      
      
        commandé
        Si la liste doit être ordonnée par distance(true) ou non(false).
      
    
  
   
  Les retours :
  Int (Le nombre d'instances trouvées en collision)
   
  Exemple :
  var _list = ds_list_create() ; var _num = collision_ellipse_list(x - 100, y - 100, x + 100, y + 100, obj_Enemy, false, true, _list, false) ; if _num > 0 {
     for (var i = 0 ; i < _num ; ++i ;) {
     instance_destroy(_list[| i]) ; }
     }
     ds_list_destroy(_list) ;
  
  Le code ci-dessus vérifie une zone elliptique de 100 pixels autour de la position de l'instance appelante pour détecter les collisions avec les instances de "obj_Enemy". S'il y a des collisions, alors la liste pré-créée est parcourue en boucle et chaque instance qui a été
    dans la collision est détruite.
   
   
   
  
    
      
        Retour : Collisions
        Suivant : collision_line
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

