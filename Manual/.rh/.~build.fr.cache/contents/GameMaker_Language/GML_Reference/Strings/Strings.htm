 Cordes À un moment donné, lors de la création de votre jeu, vous devrez utiliser du texte. Le texte dans les jeux est traité en utilisant les fonctions de chaîne (une chaîne est juste une autre façon de dire une ligne de texte) et GameMaker Studio 2 dispose d'un ensemble complet de fonctions qui vous permettent de manipuler les chaînes de plusieurs manières, y compris l'insertion d'une string dans un autre, la copie de chaînes et la possibilité d'analyser les chaînes pour les chiffres ou les lettres qu'elles contiennent. En général, une chaîne ne peut être créée qu'en ajoutant du texte entre guillemets doubles "" et les chaînes de guillemets simples ne sont pas acceptées. Vous ne pouvez pas non plus diviser la chaîne sur plusieurs lignes et vous attendre à GameMaker Studio 2 rende comme si les sauts de ligne étaient des retours à la ligne (sauf si une chaîne littérale @ identifiant est utilisé, comme expliqué ci-dessous). Il est à noter qu'il existe certaines conventions que vous pouvez utiliser lors de la création de chaînes, principalement liées à l'utilisation de caractères d'échappement. Ce sont des caractères précédés d'un "\ ". Ainsi, par exemple, si vous vouliez mettre des guillemets dans une chaîne, vous auriez quelque chose comme ceci:str = "Hello\"World\""; GameMaker Studio 2 également en charge les caractères Unicode de quatre octets, vous permettant de décoder et d'encoder des caractères Unicode dans les limites supérieures de la norme (y compris - mais sans s'y limiter - les emoji). Pour gérer les caractères Unicode, vous pouvez utiliser le "\ "pour précéder tout littéral Unicode - les chiffres hexadécimaux précédaient un"u ", par exemple "\u00e2 "pour" á "- où les chiffres sont le numéro du caractère Unicode. Lorsque vous travaillez avec Unicode de cette manière, vous devez être conscient du fait que GameMaker Studio 2 interprétera tous les chiffres après le"u ", donc si vous vouliez écrire" áa "par exemple, vous devriez utiliser:"\u00e2\a" ou"\u00e2\u61" ou"\u00e2" + "a" comme simplement en utilisant "\u00e2a "entraînerait en fait le caractère Unicode "ส "(devenant essentiellement "\ue2a "). GameMaker Studio 2 peut également gérer n'importe quel littéral hexadécimal - normalement écrit sous forme de chiffres hexadécimaux suivant "0x ", par exemple "0xff ", où les chiffres correspondent au numéro du caractère à utiliser. Dans GameMaker Studio 2 ils sont écrits en utilisant "\x ", puis la valeur hexadécimale. Ces caractères d'échappement prédéfinis et d'autres sont répertoriés dans le tableau ci-dessous: Constant Description \n Nouvelle ligne \r Retour chariot \b Retour arrière (0x08) \f Form Feed (0x0c) \t Onglet horizontal (0x09) \v Onglet vertical (0x0b) \\ Antislash lui-même (0x5c) \a Alerte (0x07) \u[Hex Digits] Insérer un caractère Unicode \x[Hex Digits] Insérer un caractère littéral hexadécimal \[Octal Digits] Insérer un caractère Unicode octal REMARQUE: les chaînes prennent en charge le saut de page, les tabulations verticales, etc., mais cela ne signifie pas que le rendu le fait, et lorsque vous dessinez des chaînes, ces caractères peuvent être ignorés. Vous pouvez également créer des littéraux de chaîne textuels en précédant la chaîne entière avec le @ personnage:var test = @" Line breaks over multiple lines
     ";
   Le code ci-dessus rendra la chaîne sur plusieurs lignes comme s'il y avait un caractère d'échappement de saut de ligne inclus. Un littéral de chaîne textuelle est similaire aux GameMaker mais ils utilisent également des guillemets doubles ou simples et doivent être précédés d'un @ symbole, ils peuvent être coupés sur plusieurs lignes dans le fichier de code et ils NE prennent PAS en charge les caractères échappés, c'est-à-dire @"Hello\World" n'essaiera pas d'échapper au W sur World et sera stocké textuellement. Notez cependant que lorsque vous utilisez des littéraux de chaîne comme celui-ci, vous devrez casser la chaîne si vous souhaitez inclure des guillemets dans la chaîne, c'est-à-dire:var test = @"Hello " + "\"" + @"World" + "\"" Une autre chose à noter est que le caractère Unicode 9647 (▯) est utilisé pour remplacer les glyphes manquants que vous pourriez avoir dans votre police désignée lors du rendu dans l'événement draw. Donc, si votre police n'a pas, par exemple, le symbole °, alors écrire à 90 ° produira en fait 90 °. La liste de fonctions suivante est destinée à traiter les chaînes: ansi_charchrordrealstringstring_byte_atstring_byte_lengthstring_set_byte_atstring_char_atstring_ord_atstring_copystring_countstring_deletestring_digitsstring_formatstring_insertstring_lengthstring_lettersstring_lettersdigitsstring_lowerstring_posstring_pos_extstring_last_posstring_last_pos_extstring_repeatstring_replacestring_replace_allstring_upperstring_heightstring_height_extstring_widthstring_width_extstring_hash_to_newlineis_string Outre les fonctions qui concernent spécifiquement les chaînes, la Windows vous permet également d'accéder au presse-papiers pour obtenir et définir des informations textuelles: clipboard_has_textclipboard_get_textclipboard_set_text Retour: Référence GML Suivant: Maths et nombres © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

