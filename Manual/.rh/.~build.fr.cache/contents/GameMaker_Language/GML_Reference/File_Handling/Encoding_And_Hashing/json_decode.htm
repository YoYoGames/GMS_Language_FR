
  
  json_decode
  IMPORTANT ! Cette fonction - bien qu'elle soit toujours valide - a été remplacée par la fonction json_parse(), et nous vous recommandons de n'utiliser cette fonction que pour le support historique.
  JSON (JavaScript Object Notation) est un format d'échange de données léger, facile à lire et à écrire, tant pour les personnes que pour les machines. Il repose sur deux structures de base :
  
    Une collection de paires nom/valeur, appelée " carte " dans GameMaker Studio 2. Carte DS dans GameMaker Studio 2 mais également appelée "dictionnaire" ou "objet".
    Une liste ordonnée de valeurs, appelée Liste DS dans GameMaker Studio 2, mais elle peut également être appelée "tableau" ou "séquence".
  
  Avec cette fonction, vous pouvez décoder un morceau de JSON et le convertir en une carte DS, prête à être utilisée dans GameMaker Studio 2. Si le JSON à décoder nécessite une hiérarchie de listes et de cartes au sein de la carte DS centrale, celles-ci sont également décodées et créées pour vous, selon les règles suivantes (notez que ces règles s'appliquent à la structure de premier niveau).
    créées pour vous, en utilisant les règles suivantes (notez que ces règles s'appliquent uniquement à la structure de haut niveau) :
  
    JSON est une valeur unique - renvoie une carte DS avec une seule entrée "default" qui est la valeur.
    JSON est un tableau d'objets ou de valeurs - renvoie une carte DS avec une seule entrée "default" qui est une liste DS des objets ou des valeurs.
    JSON est un objet - renvoie une carte DS contenant les entrées de l'objet.
  
  NOTE: Lors du décodage des tableaux JSON, il existe une map avec la clé "default" UNIQUEMENT lorsqu'un tableau est la structure de premier niveau, et UNIQUEMENT pour ce tableau de premier niveau. Les listes internes sont décodées directement dans la carte DS sans être incluses dans une carte DS.
  REMARQUE: si vous avez écrit des tableaux GameMaker dans le niveau supérieur, ou comme contenu d'une carte DS ou d'une liste DS, ceux-ci seront décodés comme des listes DS, et non des tableaux.
  Normalement, vous devriez savoir à quelles clés le JSON est décodé, mais si ce n'est pas le cas, vous pouvez utiliser l'attribut ds_map_size(), ds_map_find_first()    et ds_map_find_next() pour analyser la carte et obtenir les informations nécessaires.
  REMARQUE: GameMaker Studio 2 crée les cartes et les listes DS nécessaires à partir du JSON. Pour faire le ménage, il vous suffit de supprimer la carte ou la liste de niveau supérieur et GameMaker Studio 2 effacera automatiquement de sa mémoire toutes les cartes et listes situées en dessous.
  IMPORTANT: Vous ne pouvez pas avoir de chiffres 64 bits dans votre JSON, car ils ne fonctionneront pas correctement car ils ne sont pas gérés par le format JSON.
   
  Syntaxe :
  json_decode(string)
  
    
      
        Arguments
        Description
      
      
        chaîne de caractères
        La chaîne de format JSON que vous transmettez à la fonction pour le décodage.
      
    
  
   
  Les retours :
  ID de la carte DS ou -1 si elle échoue
   
  Exemple :
  var resultMap = json_decode(requestResult) ; var list = ds_map_find_value(resultMap, "default") ; var size = ds_list_size(list) ; for (var n = 0 ; n < ds_list_size(list) ; n++ ;)  {
     var map = ds_list_find_value(list, n) ; var curr = ds_map_find_first(map) ; while (is_string(curr)) {
     global.Name[n] = ds_map_find_value(map, "name") ; curr = ds_map_find_next(map, curr) ; }
     }
     ds_map_destroy(resultMap) ;
  
  Le code ci-dessus décode une chaîne JSON et l'analyse pour générer un tableau global.
   
   
   
  
    
      
        Retour : Codage des fichiers
        Suivant : json_stringify
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

