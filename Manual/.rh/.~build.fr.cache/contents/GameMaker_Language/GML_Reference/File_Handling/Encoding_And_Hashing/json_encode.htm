
  
  json_encode
  IMPORTANT ! Cette fonction - bien qu'elle soit toujours valide - a été remplacée par la fonction json_stringify(), et nous vous recommandons de n'utiliser cette fonction que pour le support historique.
  JSON (JavaScript Object Notation) est un format d'échange de données léger, facile à lire et à écrire, tant pour les personnes que pour les machines. Il repose sur deux structures de base :
  
    Une collection de paires nom/valeur, appelée un Carte DS dans GameMaker Studio 2 mais également appelée "dictionnaire" ou "objet" dans d'autres langages de programmation.
    Une liste ordonnée de valeurs, appelée DS Liste dans GameMaker Studio 2, mais elle peut également être appelée "tableau" ou "séquence" dans d'autres langages de programmation.
  
  json_encode() prend une carte ou un tableau DS que vous avez précédemment créé et l'encode sous forme de chaîne JSON que vous pouvez ensuite utiliser (par exemple) dans le cadre d'un appel http_post_string()    ou - pour qu'elle puisse être stockée en externe - elle peut être écrite dans un fichier. Si vous utilisez un tableau comme structure de niveau supérieur, le tableau ne peut contenir que des valeurs valides ou d'autres tableaux, et non des structures de données. Pour cela, vous devez utiliser les fonctions
    DS appropriées.
  IMPORTANT ! JSON est agnostique en ce qui concerne les nombres. Dans tout langage de programmation, il peut y avoir une variété de types de nombres de différentes capacités et compléments, fixes ou flottants, binaires ou décimaux. Cela peut rendre difficile l'échange entre différents
    langages de programmation. Au lieu de cela, JSON offre uniquement la représentation des nombres que les humains utilisent : une séquence de chiffres. Tous les langages de programmation savent comment donner un sens aux séquences de chiffres, même s'ils ne sont pas d'accord sur les représentations internes. Pour
    plus d'informations, consultez la norme ECMA JSON.
  Notez que des précautions doivent être prises lors de l'écriture de JSON dans un fichier ini, car les spécifications ini peuvent causer des problèmes lors de l'utilisation de guillemets et de caractères d'échappement. Voir la fonction ini_write_string() pour plus
    informations. Notez également que si vous encodez un int64 en JSON, il l'écrira comme un int s'il est dans la plage valide pour un int32, comme un double s'il peut le faire sans perdre de précision ou (si aucun de ces cas n'est applicable) comme une chaîne avec un identifiant " @i64@" avant et " $i64$ " après. Lorsque vous décodez à nouveau le JSON en carte, GameMaker Studio 2 récupère ces identifiants et reconvertit la valeur en int64. Cela signifie
    que si le JSON est destiné à un serveur ou à une autre cible non GameMaker, ces valeurs ne seront pas appropriées et doivent donc être évitées.
  REMARQUE: La fonctionnalité hiérarchique de JSON est disponible par l'intermédiaire de fonctions spéciales DS map et DS list (par exemple ds_map_add_list() ou
    ds_list_mark_as_map() ), ce qui vous permet d'encoder des sous-listes et des cartes.
   
  Syntaxe :
  json_encode(map)
  
    
      
        Arguments
        Description
      
      
        carte
        une carte DS avec les informations à encoder (ou un tableau)
      
    
  
   
  Les retours :
  chaîne de caractères
   
  Exemple :
  var hiscore_map, i, str ; hiscore_map = ds_map_create() ; for (i = 0 ; i < 10 ; i ++ ;) {
     ds_map_add(hiscore_map, name[i], score[i]) ; }
     str = json_encode(hiscore_map) ; get[0] = http_post_string("http://www.angusgames.com/game?game_id=" + string(global.game_id), str) ds_map_destroy(hiscore_map) ;
  
  Le code ci-dessus crée une carte DS et boucle ensuite sur les tableaux de noms et de scores, en ajoutant chaque paire clé/valeur à la nouvelle carte. Ensuite, cette carte est codée à l'aide de json_encode() et stockée sous forme de chaîne dans la variable "str". Cette chaîne est
    Cette chaîne est ensuite envoyée à un serveur Web à l'aide de http_post_string() et la carte DS est détruite pour éviter une fuite de mémoire, car elle n'est plus nécessaire.
   
   
   
  
    
      
        Retour : Codage des fichiers
        Suivant : json_decode
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

