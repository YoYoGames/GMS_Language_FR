
  
  ds_map_destroy
  Les cartes DS occupent de l'espace en mémoire, qui leur est alloué lors de leur création. Cela signifie que vous devez également libérer cette mémoire lorsque la carte DS n'est pas nécessaire afin d'éviter les erreurs, les fuites de mémoire et la perte de performance lors de l'exécution de votre jeu. Cette fonction
    fait exactement cela. Notez que la destruction d'une carte déréférencera toutes les structures de données stockées dans la carte, ce qui entraînera une fuite de mémoire. Vous devrez donc parcourir la carte et détruire manuellement tous les éléments de structure de données avant de la détruire pour éviter cela. Le site
    seule fois où cela n'est pas nécessaire est lorsque vous avez marqué des éléments dans la carte comme une liste DS ou comme une autre carte DS, dans ce cas, ces éléments seront détruits et leur mémoire nettoyée
    automatiquement aussi.
  IMPORTANT ! Lorsque vous créez une structure de données, la valeur d'index pour l'identifier est une valeur entière commençant à 0. Cela signifie que des structures de données de différents types peuvent avoir la même valeur d'index, donc en cas de doute, vous devriez utiliser l'option
    ds_exists() avant d'y accéder. Notez également que les indices sont réutilisés, donc une valeur d'indice de structure de données détruite peut être utilisée par une structure nouvellement créée par la suite ; nous recommandons donc de
      de toujours mettre la variable qui contenait l'indice DS à -1 après la destruction.
   
  Syntaxe :
  ds_map_destroy(id) ;
  
    
      
        Arguments
        Description
      
      
        id
        L'identifiant de la carte à détruire.
      
    
  
   
  Les retours :
  N/A
   
  Exemple :
  ds_map_destroy(inventaire) ; inventaire = -1 ;
  Le code ci-dessus va détruire la carte DS avec l'id indexé dans la variable "inventory".
   
   
   
  
    
      
        Retour : Cartes DS
        Suivant : ds_map_secure_save
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

