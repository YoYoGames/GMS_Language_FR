
  
  steam_ugc_send_query
  Cette fonction peut être utilisée pour envoyer une requête. Vous définissez d'abord la requête en utilisant les fonctions appropriées steam_ugc_create_query_* () qui retourneront un "query Handle". Cet identifiant est ensuite utilisé pour définir des filtres etc.... avant d'être
    avant d'être utilisé dans cette fonction pour envoyer la demande de requête. La fonction renvoie une valeur d'identification asynchrone unique qui peut être utilisée pour vérifier les détails correctement dans l'événementSteam Async.
    Cet événement aura la async_load DS map qui sera remplie avec les paires clé/valeur suivantes :
  
    "id" - L'ID asynchrone renvoyé par la fonction qui a déclenché l'événement.
    "resultat" - Le résultat de l'opération (une valeur réelle). Ce sera soit la constante GML ugc_result_success ou un autre nombre réel. Vous devez donc vérifier cette constante pour vous assurer que l'appel a réussi, et si
      sinon, quelque chose n'a pas fonctionné correctement. Le reste des valeurs possibles retournées sont affichées comme le résultat de la valeur "EResult" de Steam et vous devriez voir steamclientpublic .h dans les en-têtes du SDK pour les 89 valeurs possibles.
    "event_type" - La chaîne "ugc_query".
    "num_results" - Le nombre de résultats retournés (max 50 )
    "total_matching" - Le nombre total de résultats correspondants.
    "cached_data" - Indique si ces données ont été extraites du cache local sur le disque ou non (vrai ou faux ).
    "results_list" - Un index de liste DS, où chaque entrée de la liste est un index DS Map contenant les détails de l'élément particulier.
  
  Lorsque vous obtenez l'événement asynchrone de type "ugc_query", vous pouvez alors analyser la liste des résultats et extraire les informations suivantes de chacune des cartes DS (une carte par élément de la liste) :
  
    "published_file_id" " -Détient l'identifiant unique du fichier publié pour l'élément.
    " file_type" - Le type de fichier utilisé
    "creator_app_id" - L'identifiant Steam du créateur de l'objet.
    "consumer_app_id" - L'identifiant Steam du consommateur de l'article.
    "title" - Le titre de l'élément
    "description" - La description de l'élément
    "steam_id_owner" - L'identifiant Steam du propriétaire de l'objet.
    "time_created" - L'heure à laquelle l'élément a été créé pour la première fois.
    "time_updated" - La dernière fois que l'élément a été mis à jour.
    " time_added_to_user_list" - L'heure à laquelle l'élément a été inscrit sur la liste des utilisateurs.
    "visibility" - La visibilité de l'élément (voir steam_ugc_set_item_visibility() pour les constantes retournées)
    "banned " - Indique si l'élément a été interdit (true) ounon (false).
    "accepted_for_use" - Indique si l'élément a été accepté pour utilisation (true) ounon (false).
    " tags_truncated" - Version abrégée des balises sous forme de tableau
    "tags"- Une chaîne contenant les tags de l'élément, chacun séparé par une virgule.
    "handle_file" - L'identifiant unique de l'élément.
    "handle_preview_file" - Le handle unique pour l'image de prévisualisation de l'élément (peut être utilisé comme argument avec steam_ugc_download() pour télécharger une image de prévisualisation)
    "Nom de fichier"- Le nom du fichier de l'élément.
    "file_size" - La taille du fichier de l'élément.
    "preview_file_size " - La taille de l'image de prévisualisation
    "url"- L'URL complète de l'élément.
    "votes_up" - Le nombre de votes positifs reçus.
    "votes_down" - Le nombre de votes négatifs reçus.
    "score" - Le score global de l'élément.
    "account_id_owner" - L'ID du compte du propriétaire de l'ID Steam (ceci peut être utilisé dans la fonction steam_ugc_create_query_user_ex())
  
   
  Syntaxe :
  steam_ugc_send_query(ugc_query_handle) ;
  
    
      
        Arguments
        Description
      
      
        ugc_query_handle
        L'identifiant de la requête à envoyer.
      
    
  
   
  Les retours :
  Booléen
   
  Exemple :
  var query_handle = steam_ugc_create_query_all(ugc_query_RankedByTrend, ugc_match_Items, 1) ; steam_ugc_query_add_required_tag(query_handle, "RPG") ; steam_ugc_query_set_return_long_description(query_handle, true) ; steam_ugc_query_set_allow_cached_response(query_handle,
    true) ; query_ID = steam_ugc_send_query(query_handle) ;
  Le code ci-dessus crée une demande de requête et stocke son identifiant dans une variable locale pour une utilisation future dans le reste des fonctions qui définissent plus précisément la demande de requête avant d'envoyer la requête.
   
   
   
  
    
      
        Retour : UGC
        Suivant : steam_ugc_download
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

