 steam _ugc_request_item_details Cette fonction peut être utilisée pour récupérer des informations sur un ID de fichier donné. Vous donnez l'ID de fichier et indiquez un âge maximum pour la vérification (voir la Steam pour plus d'informations), puis la fonction renvoie une valeur d'ID async unique qui peut être utilisée pour vérifier correctement les détails dans l' événement Steam Async. Cet événement aura le async_load Carte DS qui sera remplie avec les paires clé / valeur suivantes: " id " - L'ID asynchrone renvoyé par la fonction qui a déclenché l'événement " result " - Le résultat de l'opération (une valeur réelle). Ce sera soit la constante GML ugc_result_success ou un autre nombre réel. Vous devez donc vérifier cette constante pour vous assurer que l'appel a réussi et, dans le cas contraire, quelque chose n'a pas fonctionné correctement. Le reste des valeurs possibles renvoyées est affiché comme le résultat de la valeur Steam "EResult" et vous devriez voir steamclientpublic.h dans les en-têtes du SDK pour les 89 valeurs possibles. " event_type " - La chaîne " ugc_item_details " " cached_data " - Sera true si les détails renvoyés proviennent du cache local ou false s'ils proviennent du serveur " published_file_id" "- Contient l'identifiant unique du fichier publié pour l'élément " file_type " - Le type de fichier utilisé " creator_app_id " - L' Steam du créateur de l'objet " consumer_app_id " - L' Steam du consommateur d'article " title " - Le titre de l'élément " description " - La description de l'article " steam _id_owner " - L' Steam du propriétaire de l'objet " time_created " - L'heure à laquelle l'élément a été créé pour la première fois " time_updated " - La dernière fois que l'élément a été mis à jour " time_added_to_user_list " - L'heure à laquelle l'élément a été abonné " visibilité " - La visibilité de l'élément (voir steam_ugc_set_item_visibility() pour les constantes renvoyées) " banni " - Indique si l'élément a été banni (true ) ou non (false ) " Accepted_for_use " - Indique si l'élément a été accepté pour utilisation (true ) ou non (false ) " tags_truncated " - Version courte des balises sous forme de tableau " tags " - Un tableau des tags de l'élément " handle_file" - Le descripteur de fichier unique pour l'élément " handle_preview_file " - Le handle unique de l'aperçu de l'image pour l'élément (peut être utilisé comme argument avec steam_ugc_download() pour télécharger une image d'aperçu) " filename " - Le nom du fichier élément " file_size " - La taille du fichier élément " preview_file_size " - La taille de l'image d'aperçu " url " - L'URL complète de l'élément " votes_up " - Le nombre de votes positifs reçus " votes_down " - Le nombre de votes négatifs reçus " score " - Le score global de l'élément " account_id_owner " - L'ID de compte du Steam ID (cela peut être utilisé dans la fonction steam_ugc_create_query_user_ex() ) Syntaxe:steam_ugc_request_item_details(published_file_id, max_age_seconds); Argument Description published_file_id ID de fichier unique pour l'UGC à vérifier. max_age_seconds L '«âge» des données à vérifier (recommandé entre 30 et 60 secondes). Retour:Async ID Exemple étendu: Dans cet exemple, nous envoyons une demande de détails pour un élément, puis analysons le résultat async_load Carte DS pour définir certaines variables. Nous envoyons d'abord la demande:steam_details = steam_ugc_request_item_details(global.fileID, 60); Le code ci-dessus demandera des détails sur l'élément avec l'ID de fichier stocké dans la variable globale et déclenchera un Steam Async avec les informations renvoyées. Dans ce cas, nous pouvons ensuite analyser la carte et stocker certaines des valeurs dans des variables qui peuvent ensuite être utilisées pour afficher les informations à l'utilisateur: var map_id = async_load[? "id"]; var result = async_load[? "result"]; if (map_id == steam_details) && (result == ugc_result_success)     {
         mTitle = async_load[? "title"];     mDesc = async_load[? "description"];     mTags = async_load[? "tags"];     m_hPreviewFile = async_load[? "handle_preview_file"];     m_hOwnerSteamId
    = async_load[? "steam_id_owner"];     mOwnerAccountId = async_load[? "account_id_owner"];     mPubFileId = async_load[? "published_file_id"];     mScore = async_load[? "score"];     }
   Retour: UGC Suivant: steam _ugc_create_query_user © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

