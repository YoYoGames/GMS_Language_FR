
  
  steam_ugc_request_item_details
  Cette fonction peut être utilisée pour récupérer des informations sur un ID de fichier donné. Vous donnez l'ID du fichier et fournissez un âge maximum pour la vérification (voir la documentation Steam pour plus d'informations), puis la fonction renvoie une valeur d'ID asynchrone unique qui peut être utilisée pour vérifier correctement les détails dans l'événement Steam Async.
    les détails correctement dans l'événement asynchroneSteam. Cet événement aura la async_load    DS map qui sera remplie avec les paires clé/valeur suivantes :
  
    "id" - L'ID asynchrone renvoyé par la fonction qui a déclenché l'événement.
    "resultat" - Le résultat de l'opération (une valeur réelle). Ce sera soit la constante GML ugc_result_success ou un autre nombre réel. Vous devez donc vérifier cette constante pour vous assurer que l'appel a réussi, et si
      sinon, quelque chose n'a pas fonctionné correctement. Le reste des valeurs possibles retournées sont affichées comme le résultat de la valeur "EResult" de Steam et vous devriez voir steamclientpublic .h dans les en-têtes du SDK pour les 89 valeurs possibles.
    "event_type" - La chaîne "ugc_item_details".
    "cached_data" - Vrai si les détails retournés proviennent du cache local ou faux s'ils proviennent du serveur.
    "published_file_id" " -Détient l'identifiant unique du fichier publié pour l'élément.
    " file_type" - Le type de fichier utilisé
    "creator_app_id" - L'identifiant Steam du créateur de l'objet.
    "consumer_app_id" - L'identifiant Steam du consommateur de l'article.
    "title" - Le titre de l'élément
    "description" - La description de l'élément
    "steam_id_owner" - L'identifiant Steam du propriétaire de l'objet.
    "time_created" - L'heure à laquelle l'élément a été créé pour la première fois.
    "time_updated" - La dernière fois que l'élément a été mis à jour.
    " time_added_to_user_list" - L'heure à laquelle l'élément a été inscrit sur la liste des utilisateurs.
    "visibility" - La visibilité de l'élément (voir steam_ugc_set_item_visibility() pour les constantes retournées)
    "banned " - Indique si l'élément a été interdit (true) ounon (false).
    "accepted_for_use" - Indique si l'élément a été accepté pour utilisation (true) ounon (false).
    " tags_truncated" - Version abrégée des balises sous forme de tableau
    "tags"- Un tableau des tags de l'élément.
    "handle_file" - L'identifiant unique de l'élément.
    "handle_preview_file" - Le handle unique de l'image de prévisualisation pour l'élément (peut être utilisé comme argument avec steam_ugc_download() pour télécharger une image de prévisualisation)
    "Nom de fichier"- Le nom du fichier de l'élément.
    "file_size" - La taille du fichier de l'élément.
    "preview_file_size " - La taille de l'image de prévisualisation
    "url"- L'URL complète de l'élément.
    "votes_up" - Le nombre de votes positifs reçus.
    "votes_down" - Le nombre de votes négatifs reçus.
    "score" - Le score global de l'élément.
    "account_id_owner" - L'identifiant du compte du propriétaire de l'identifiant Steam (il peut être utilisé dans la fonction steam_ugc_create_query_user_ex())
  
   
  Syntaxe :
  steam_ugc_request_item_details(published_file_id, max_age_seconds) ;
  
    
      
        Arguments
        Description
      
      
        fichier_publié_id
        L'ID de fichier unique pour l'UGC à vérifier.
      
      
        max_age_secondes
        L'"âge" des données à vérifier (recommandé 30 - 60 secondes).
      
    
  
   
  Les retours :
  ID asynchrone
   
  Exemple étendu :
  Dans cet exemple, nous envoyons une demande de détails pour un article, puis nous analysons la carte async_load DS qui en résulte pour définir certaines variables. Tout d'abord, nous envoyons la demande :
  steam_details= steam_ugc_request_item_details(global.fileID, 60) ;
  Le code ci-dessus demandera des détails sur l'élément avec l'ID du fichier stocké dans la variable globale et déclenchera un événement Steam Async avec les informations retournées. Dans cet événement, nous pouvons alors analyser la carte et stocker certaines des valeurs dans des variables qui peuvent ensuite être utilisées pour afficher les informations à l'utilisateur.
    peuvent ensuite être utilisées pour afficher les informations à l'utilisateur :
  var map_id = async_load[ ? "id"] ; var result = async_load[ ? "result"] ; if (map_id == steam_details) && ( result== ugc_result_success) {
     mTitle = async_load[ ? "title"] ; mDesc = async_load[ ? "description"] ; mTags = async_load[ ? "tags"] ; m_hPreviewFile = async_load[ ? "handle_preview_file"] ; m_hOwnerSteamId
    = async_load[ ? "steam_id_owner"] ; mOwnerAccountId = async_load[ ? "account_id_owner"] ; mPubFileId = async_load[ ? "published_file_id"] ; mScore = async_load[ ? "score"] ; }
  
   
   
   
  
    
      
        Retour : UGC
        Suivant : steam_ugc_create_query_user
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

