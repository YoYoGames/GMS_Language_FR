
  
  steam_upload_score_buffer
  Cette fonction enverra un score au leaderboard donné avec un paquet de données créé à partir d'un tampon. La taille du tampon ne doit pas dépasser 256 octets - tout ce qui dépasse sera coupé - et peut contenir toutes les données que vous souhaitez. Le score
    à télécharger doit être un nombre réel, et le nom du leaderboard est une chaîne définie lors de la création du leaderboard à l'aide de la fonction steam_create_leaderboard().
  Si la fonction échoue, elle renvoie la valeur -1, tandis qu'un message réussi renvoie un ID unique pour le téléchargement et déclenche un événementSteam asynchrone. Cet événement
    créera une carte DS dans la variable intégrée async_load avec les paires clé/valeur suivantes :
  
    "event_type" - Cette clé aura la valeur "leaderboard_upload" lorsqu'elle sera déclenchée par cette fonction.
    "lb_name" - Cette clé contient le nom du classement qui a été posté sur le site.
    "success" - sera 1 si le message a réussi, 0 s'il a échoué.
    "updated" - Vaut 1 si le score du classement a été mis à jour (c'est-à-dire si le nouveau score est meilleur) ou 0 sinon. Notez que si le score est mis à jour, les données du tampon téléchargé ne seront pas ajoutées non plus.
    "post_id" - Cette clé doit correspondre à la valeur d'identification renvoyée par l'appel au téléchargement.
    "Score" - Cette clé contient le score qui a été affiché.
  
  Notez que lors du téléchargement du leaderboard, la clé "entries" de la carte async_load carte aura désormais une clé "data" afin que vous puissiez récupérer le tampon de données téléchargé (voir l'exemple de code étendu Steam Event).
    tampon de données téléchargé (voir l'exemple de code étendu Steam Event pour plus de détails). Ce tampon de données sera codé en base 64 et vous devrez donc utiliser la fonction suivante
    la fonction tampon_base64_decode() sur les données avant de les lire dans le tampon.
   
  Syntaxe :
  steam_upload_score_buffer(lb_name, score, buffer) ;
  
    
      
        Arguments
        Description
      
      
        lb_name
        Le nom du classement vers lequel vous téléchargez les scores (une chaîne).
      
      
        score
        Le score à télécharger (un nombre réel).
      
      
        tampon
        L'ID du tampon à attacher.
      
    
  
   
  Les retours :
  Real
   
  Exemple étendu :
  Dans cet exemple, nous commençons par télécharger un score, puis nous analysons la carte async_load renvoyée en cas de succès. Le code ci-dessous montre un exemple typique de téléchargement, avec un tampon créé pour contenir une chaîne de caractères nous indiquant à quel niveau le score a été téléchargé.
    à partir de :
  if (hp <= 0) {
     var buff = buffer_create(256, buffer_fixed, 1 ) ; buffer_write(buff, buffer_string, "Uploaded on level " + string(global.Level)) ; upload_ID = steam_upload_score("Game Scores", score, buff) ; if
    (!upload_ID) {
     alarme[0] = room_speed ; }
     buffer_delete(buff) ;
     }
  
  Notez que nous avons défini une alarme si l'appel échoue. Vous pouvez y ajouter du code supplémentaire pour réessayer le téléchargement ou pour enregistrer le score dans un fichier texte si l'échec persiste, etc... Notez également que nous
    supprimons immédiatement le tampon, puisqu'il n'est plus nécessaire à la fonction. Nous ajoutons maintenant ce qui suit dans l'événement asynchroneSteam pour l'instance contrôlant les scores :
  var type = ds_map_find_value(async_load, "event_type") ; if (type == "leaderboard_upload") {
     var lb_ID = ds_map_find_value(async_load, "post_id") ; if lb_ID == upload_ID {
     var lb_name = ds_map_find_value(async_load, "lb_name") ; var lb_done = ds_map_find_value(async_load, "success") ; var lb_score = ds_map_find_value(async_load, "score") ; var
    lb_updated = ds_map_find_value(async_load, "updated") ; show_debug_message("leaderboard post id :" + string(lb_ID) + " to lb :" + string(lb_name) + " with score :" + string(lb_score) + " updated="
    + string(lb_updated)) ; if (lb_done) {
     show_debug_message("- Succeeded") ; }
     else
     {
     show_debug_message("- Failed") ; }
     }
     }
  
  Dans l'exemple, nous nous contentons d'afficher les valeurs de retour dans la fenêtre du compilateur en tant que messages de débogage, mais vous pouvez utiliser cet événement pour traiter les informations de la manière que vous souhaitez.
   
   
   
  
    
      
        Retour : Tableaux de classement
        Suivant : steam_download_scores
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

