 steam _upload_score Cette fonction enverra un score au classement donné. Le score à télécharger est un nombre réel et le nom du classement est une chaîne qui a été définie lorsque vous avez créé le classement à l'aide de la fonction steam_create_leaderboard(). Si la fonction échoue, elle renverra une valeur de -1, tandis qu'une publication réussie renverra un identifiant unique pour le téléchargement et déclenchera un événement Steam asynchrone. Cet événement créera un DS Map dans la variable intégrée async_load avec les paires clé / valeur suivantes: " event_type " - Cette clé contiendra la valeur " leaderboard_upload " lorsqu'elle sera déclenchée par cette fonction " lb_name " - Cette clé contient le nom du classement qui a été publié sur " succès " - Sera 1 si le message a réussi, 0 échoué " mis à jour " - Sera 1 si le score du classement a effectivement été mis à jour (c'est-à-dire: le nouveau score était meilleur) ou 0 sinon " post_id " - Cette clé doit correspondre à la valeur d'ID renvoyée par l'appel d'importation " score " - Cette clé contient le score qui a été publié Syntaxe:steam_upload_score(lb_name, score); Argument Description lb_name Le nom du classement dans lequel vous téléchargez les scores (une chaîne). score Le score à télécharger (un nombre réel). Retour:Real Exemple étendu: Dans cet exemple, nous téléchargeons d'abord un score, puis analysons le async_load la carte est retournée en cas de succès. Le code ci-dessous montre un exemple typique de téléchargement:if (hp <= 0)     {
         upload_ID = steam_upload_score("Game Scores", score);     if (!upload_ID)         {
             alarm[0] = room_speed;         }
         }
   Notez que nous avons défini une alarme en cas d'échec de l'appel. Cela serait utilisé pour réessayer le téléchargement ultérieurement et vous pouvez y ajouter du code supplémentaire pour réessayer le téléchargement ou pour enregistrer le score dans un fichier texte s'il continue à échouer, etc... Nous ajoutons maintenant ce qui suit dans le Événement asynchrone Steam pour l'instance contrôlant les scores:var type = ds_map_find_value(async_load, "event_type"); if (type == "leaderboard_upload")     {
         var lb_ID = ds_map_find_value(async_load, "post_id");     if lb_ID == upload_ID         {
             var lb_name = ds_map_find_value(async_load, "lb_name");         var lb_done = ds_map_find_value(async_load, "success");         var lb_score = ds_map_find_value(async_load, "score");         var
    lb_updated = ds_map_find_value(async_load, "updated");         show_debug_message("leaderboard post id:" + string(lb_ID) + " to lb:" + string(lb_name) + " with score:" + string(lb_score) + " updated="
    + string(lb_updated));         if (lb_done)             {
                 show_debug_message("- Succeeded");             }
             else
                 {
                 show_debug_message("- Failed");             }
             }
         }
   dans l'exemple, nous sortons simplement les valeurs de retour dans la fenêtre du compilateur sous forme de messages de débogage, mais vous pouvez utiliser cet événement pour traiter les informations de la manière que vous choisissez.  Retour: Classements Suivant: steam _upload_score_buffer © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

