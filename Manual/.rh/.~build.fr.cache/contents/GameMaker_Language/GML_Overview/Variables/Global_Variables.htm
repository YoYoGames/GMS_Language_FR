
  
  Variables globales
  Une description de base d'une variable globale est une variable qui, une fois déclarée, n'appartient à aucune instance en particulier et qui est pourtant accessible à toutes. Tout comme les variables locales, les variables globales doivent être déclarées à l'aide d'un identificateur.
    à l'aide d'un identificateur, mais contrairement à une variable locale, une variable globale reste en mémoire jusqu'à la fin du jeu. Ainsi, vous pouvez créer une variable globale pour garder la trace (par exemple) du nombre de balles dont dispose le joueur, puis mettre à jour cette variable à différents moments du jeu.
    cette variable à différents moments du jeu, à partir de n'importe quelle instance ou fonction et à tout moment. Essentiellement, une variable globale n'appartient à aucune instance spécifique et peut être accédée, modifiée et utilisée par toutes les instances.
    sont "globales", en ce sens que toutes les instances utilisant la variable seront affectées par la modification. Prenons un exemple :
  global.food = 5 ;
  Nous déclarons la variable "food" en écrivant d'abord "global" puis un "." pour indiquer à GameMaker Studio 2 que cette variable a désormais une portée globale.
    Nous devrons utiliser ce formulaire à partir de maintenant chaque fois que nous devrons accéder à cette variable ou la modifier de quelque manière que ce soit. Nous avons donc créé une nouvelle variable appelée "food" et nous l'avons déclarée comme globale. Maintenant, n'importe quelle
    instance ou fonction peut utiliser et modifier cette variable de quelque manière que ce soit et toutes les autres instances le "verront". Par exemple, nous pourrions avoir un objet alimentaire différent avec lequel le joueur entre en collision et dans l'événement de collision nous aurions :
  global.food +=1 ;
  Nous avons également un autre objet qui dessine cette valeur comme ceci :
  draw_text(32, 32, "nourriture = " + string(global.food)) ;
  Avec les variables globales, nous pouvons changer les valeurs et voir ces changements reflétés dans toutes les instances des objets qui font référence à cette variable. Comme pour les variables locales, vous devez faire attention à ne pas nommer vos variables globales de la même manière que les variables d'instance.
    car cela pourrait vous poser des problèmes et faire apparaître des bogues dans vos jeux en raison du chevauchement des variables, ce qui peut parfois s'avérer difficile à déboguer. En général, vous devriez avoir un seul objet qui déclare toutes vos variables globales au tout début du jeu (par exemple, un objet d'instance).
    au tout début du jeu (par exemple, dans l'événement Room Start de la première instance d'objet placée dans la première pièce du jeu) ou une fonction de script unique qui les déclare toutes ensemble, car cela vous donne un endroit pratique pour revenir en arrière et tout référencer en une seule fois si vous avez besoin de vérifier un nom de variable ou de modifier une valeur.
  GameMaker Studio 2 dispose également d'une collection de variables globales "intégrées". Vous devez donc les connaître car vous pouvez donner le même nom à l'une de vos variables d'instance ou souhaiter avoir votre propre variable globale avec le même nom et vous demander pourquoi vous obtenez des erreurs.
    vous obtenez des erreurs ! Elles sont cependant faciles à repérer, car elles sont affichées dans une couleur différente dans l'éditeur de code et apparaissent également dans la barre d'autocomplétion en bas de la page. La majorité des variables globales intégrées sont très spécifiques et ne seront utilisées qu'en de rares occasions.
    La majorité des variables globales intégrées sont très spécifiques et ne seront utilisées qu'en de rares occasions - et sont listées dans les sections appropriées du manuel - mais il y en a une importante qui est utilisée fréquemment et qui n'est pas listée ailleurs :
  
    async_load
  
  Il existe également trois variables globales construites dépréciées dont vous devez être conscient (ces variables sont uniquement conçues pour prendre en charge les projets hérités des versions précédentes de GameMaker et doivent être remplacées par les variables suivantes ne pas être utilisées dans les nouveaux projets) :
  
    score
    santé
    vies
  
  Enfin, il existe deux variables qui peuvent être utilisées pour les fonctions et les méthodes de script :
  
    argument
    nombre d'arguments
  
  Le formulaire suivant peut également être utilisé pour déclarer des variables globales, mais il est inclus uniquement pour la rétrocompatibilitéet il n'est pas recommandé d'utiliser ce formulaire pour les nouveaux projets, car les futures versions de GameMaker pourraient ne pas le prendre en charge.
  La deuxième façon de créer des variables globales consiste à les déclarer en tant que telles à l'aide de la déclaration globalvar, tout comme vous le feriez pour une variable locale à l'aide de la déclaration var.
  IMPORTANT ! La déclaration globalvar est obsolète et n'est prise en charge qu'à des fins patrimoniales. Vous devez toujours utiliser l'identifiant global. pour marquer les variables globales.
  Cette déclaration (dépréciée) serait utilisée comme suit :
  globalvar food ; food = 5 ;
  Une fois déclarée de cette manière, la variable "food" est maintenant considérée comme globale et ne nécessite pas de préfixe global. ce qui signifie également qu'il est beaucoup plus difficile d'identifier les variables globales dans votre code et qu'il est aussi beaucoup plus facile d'obtenir un chevauchement de variables lorsque vous utilisez le même nom de variable dans différents objets ou dans des extensions installées.
    car vous utilisez le même nom de variable dans différents objets ou dans des extensions que vous avez installées. Une fois déclarée de cette manière, la variable globale est accessible comme suit :
  nourriture += 2 ;
  ou :
  draw_text(32, 32, "nourriture = " + string(food)) ;
  Comme vous pouvez le voir, sans rien pour montrer que la variable est globale, vous vous exposez potentiellement à de nombreux problèmes subtils dans votre jeu, c'est pourquoi cette déclaration doit être évitée.
  Il existe quelques fonctions conçues pour vous aider à traiter les variables globales, que vous trouverez à la page suivante :
  
    Fonctions variables
  
   
   
   
  
    
      
        Retour : Variables et champ d'application des variables
        Suivant : Constantes
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

