 Variables globales Une description de base d'une variable globale est celle qui, une fois déclarée, n'appartient à aucune instance en particulier et qui est pourtant accessible à tous. Tout comme les variables locales, les variables globales doivent être déclarées à l'aide d'un identifiant, mais contrairement à une variable locale, une variable globale reste en mémoire jusqu'à la fin de la partie. Ainsi, vous pouvez créer une variable globale pour suivre (par exemple) le nombre de balles que possède le joueur, puis simplement mettre à jour cette variable à différents moments du jeu, former n'importe quelle instance ou fonction et à tout moment. Essentiellement, une variable globale n'appartient à aucune instance spécifique et peut être accédée, modifiée et utilisée par toutes les instances, et toutes les modifications apportées à la variable sont «globales», en ce sens que toutes les instances utilisant la variable seront affectées par la modification. Jetons un œil à un exemple:global.food = 5; Nous déclarons le "food "variable lors de la première écriture"global "et puis un". "pour indiquer à GameMaker Studio 2 que cette variable a désormais une portée globale. Nous devrons désormais utiliser ce formulaire à chaque fois que nous serons amenés à accéder ou à modifier cette variable de quelque manière que ce soit. Nous avons donc créé une nouvelle variable appelée"food "et nous l'avons déclaré global. Désormais, toute instance ou fonction peut utiliser et modifier cette variable de quelque manière que ce soit et toutes les autres instances le" verront ". Par exemple, nous pourrions avoir un objet alimentaire différent avec lequel le joueur entre en collision et dans l'événement de collision que nous avons:global.food +=1; Nous avons également un autre objet qui dessine cette valeur comme ceci:draw_text(32, 32, "food = " + string(global.food)); Avec les variables globales, nous pouvons changer les valeurs et voir ces changements reflétés dans toutes les instances des objets qui référencent cette variable. Comme pour les variables locales, vous devez faire attention à ne pas nommer vos variables globales de la même manière que les variables d'instance car cela peut vous causer des problèmes et faire apparaître des bogues dans vos jeux en raison du chevauchement des variables, ce qui peut parfois être un problème difficile à déboguer. En général, vous devriez avoir un seul objet qui déclare toutes vos variables globales au tout début du jeu (par exemple, dans l' événement de début de salle de la première instance d'objet placée dans la première salle du jeu) ou une fonction de script unique qui les déclare tous ensemble, car cela vous donne un endroit pratique pour revenir en arrière et tout référencer à la fois si vous avez besoin de vérifier un nom de variable ou de modifier une valeur. GameMaker Studio 2 possède également une collection de variables globales "intégrées", vous devez donc en être conscient car vous pouvez nommer l'une de vos variables d'instance de la même manière ou souhaiter avoir votre propre variable globale avec le même nom et vous demander pourquoi vous êtes obtenir des erreurs! Ils sont cependant faciles à repérer, car ils sont affichés dans une couleur différente dans l'éditeur de code et apparaissent également dans la barre de saisie semi-automatique en bas. La majorité des variables globales intégrées sont très spécifiques et ne seront utilisées qu'en de rares occasions - et sont répertoriées dans les sections appropriées du manuel - mais il y en a une importante qui est fréquemment utilisée et qui n'est pas répertoriée ailleurs:async_load Il existe également trois variables globales intégrées obsolètes dont vous devez être conscient (ces variables sont uniquement conçues pour prendre en charge les projets hérités des versions précédentes de GameMaker et ne doivent pas être utilisées dans de nouveaux projets ):score health lives Enfin, deux variables peuvent être utilisées pour les fonctions et méthodes de script:argumentargument_count Le formulaire suivant peut également être utilisé pour déclarer des variables globales, mais il n'est inclus que pour la compatibilité ascendante, et il n'est pas recommandé d'utiliser ce formulaire pour les nouveaux projets car les futures versions de GameMaker pourraient ne pas le prendre en charge. La deuxième forme de création de variables globales consiste à les déclarer comme telles à l'aide du globalvar déclaration, tout comme vous le feriez pour une variable locale en utilisant le var déclaration. IMPORTANT! Le globalvar La déclaration est obsolète et n'est prise en charge qu'à des fins héritées. Vous devez toujours utiliser le global. identifiant pour marquer les variables globales. Cette déclaration (obsolète) serait utilisée comme suit:globalvar food; food = 5; Une fois déclarée de cette manière, la variable «nourriture» est désormais considérée comme globale et ne nécessite aucune global. préfixe - ce qui signifie également qu'il est beaucoup plus difficile d'identifier les variables globales dans votre code et qu'il est également beaucoup plus facile d'obtenir un chevauchement de variables lorsque vous utilisez le même nom de variable dans différents objets ou à partir d'extensions que vous avez installées. Une fois déclarée de cette manière, la variable globale est accessible comme suit:food += 2; ou:draw_text(32, 32, "food = " + string(food)); Comme vous pouvez le voir, rien ne montrant que la variable a une portée globale, vous vous préparez potentiellement à de nombreux problèmes subtils dans votre jeu, c'est pourquoi cette déclaration doit être évitée. Il existe quelques fonctions conçues pour vous aider à gérer les variables globales, que vous pouvez trouver sur la page suivante: Fonctions variables  Retour: Portée des variables et des variables Suivant: Constantes © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

