 Variables d'instance Une variable d'instance est créée dans une instance d'un objet et est considérée comme unique à cette instance - c'est-à-dire: de nombreuses instances du même objet peuvent avoir la même variable, mais chaque variable peut contenir une valeur différente car elles sont uniques à chaque instance. Mais comment une variable d'instance est-elle créée? Eh bien, vous créez de nouvelles variables en leur affectant simplement une valeur comme indiqué dans ce petit exemple (cela s'appelle déclarer la variable):potions = 12; life = 100; name = "Jock MacSweeney"; strength = 5.5; armour = -2; Comme vous pouvez le voir, il vous suffit de donner le nom, puis une valeur (la valeur peut être n'importe quel type de données ) pour définir cette variable et la préparer à être utilisée dans une instance de l'objet pour lequel vous codez (notez que la valeur peut proviennent de la valeur de retour d'une fonction ou du résultat d'une opération entre d'autres variables, etc...). Ces variables peuvent ensuite être utilisées et modifiées de différentes manières à partir de l’instance, par exemple ce code pourrait être dans un événement de collision et utilisé pour retirer un montant de la variable "life ":life -= 5 + armour; Si "life "est à 100, il aura maintenant une valeur de 97 (100 - (5 + -2) = 97). Maintenant, c'est un exemple simple, et vous pouvez remplacer"armour "pour la valeur réelle de -2, mais que se passe-t-il si cette valeur est codée en dur à plusieurs endroits et que vous décidez de la modifier? Vous devrez parcourir TOUT votre code et changer tous les -2 en quelle que soit la nouvelle valeur, ce qui prend du temps et est très sujet aux erreurs! Mais si vous utilisez une variable, tout ce que vous avez à faire est de lui réaffecter une nouvelle valeur et le code utilisera automatiquement cette nouvelle valeur à partir de là, ce qui rend les choses beaucoup plus flexibles et beaucoup plus faciles à utiliser. correction en cas de problème. Il convient également de noter que même si une valeur ne change pas, il est beaucoup plus facile de se souvenir de ce qu’une variable appelle "life "signifie plutôt que de simplement regarder un nombre. GameMaker Studio 2 possède également une collection de variables d'instance "intégrées", vous devez donc en être conscient car vous pouvez nommer l'une de vos propres variables d'instance de la même manière ou souhaiter avoir votre propre variable globale avec le même nom et vous demander pourquoi vous obtiennent des erreurs. Ils sont cependant faciles à repérer, car ils sont affichés dans une couleur différente dans l'éditeur de code et apparaissent également en saisie semi-automatique et sont affichés dans la barre en bas de l' éditeur de code. Il existe de nombreuses fonctions d' runtime conçues pour vous aider à gérer les variables d'instance, qui sont toutes répertoriées dans la section suivante: Fonctions variables  Retour: Portée des variables et des variables Suivant: Variables globales © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

