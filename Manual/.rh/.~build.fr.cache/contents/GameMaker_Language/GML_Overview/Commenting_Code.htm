 Code de commentaire Lorsque vous travaillez en collaboration avec d'autres personnes, lorsque vous traitez avec un grand projet, ou même simplement pour votre propre référence et débogage, il est très important de laisser des commentaires dans votre code d'événement et vos scripts. Dans GameMaker Studio 2 vous disposez de divers mécanismes pour vous aider à laisser des notes et des commentaires sur des sections de code et même des blocs entiers de code qui peuvent être vus dans la liste d'événements de l'objet que vous éditez actuellement. De cette façon, vous pouvez laisser des notes à vous-même et à vos collègues, ou pour expliquer un morceau de code particulièrement délicat, ou même simplement laisser un rappel sur ce que fait quelque chose ou ce que vous voulez que quelque chose fasse à l'avenir. Pour laisser un simple commentaire d'une ligne, la première chose que vous pouvez faire est d'utiliser // avant le texte. Par exemple://initialize variables sr = 10; hp = 100; Vous pouvez également laisser des commentaires sur plusieurs lignes, pour donner du crédit, pour omettre une section complète de code pour le débogage, ou même pour laisser des notes sur la façon dont vous souhaitez modifier le code à l'avenir. Pour cela, vous pouvez utiliser /* ... */ comme ça:/* Setup GIF Variables to initial values (these can be edited so you don't need to use the setter functions all the time if you are always using the same values)
     IMPORTANT! Please see the individual "set" scripts for more extensive information about each of the different variables. */
    
     frame_num = 30; frame_steps = 5; frame_width = 256; frame_height = 256; frame_quality = gifcam_quality_high; Outre les commentaires, vous pouvez également utiliser des #region balises pour marquer une section de code pour le pliage de code, et chaque région peut contenir un commentaire. Comment cela fonctionne, c'est que vous ajoutez un #region balise - avec tout texte de commentaire - en haut d'une section de code, puis ajoutez un #endregion balise en bas de la section et ensuite vous pouvez "plier" le code, c'est-à-dire: le cacher pour pouvoir réduire le nombre de lignes de code visibles dans l'éditeur à tout moment: Le code réel ressemble à ceci:#region This is an example region
     width = sprite_get_width(sprite); height = sprite_get_height(sprite); xoff = sprite_get_xoffset(sprite); yoff = sprite_get_yoffset(sprite);
     #endregion Further comment here if required Enfin, il convient de mentionner que lorsque vous travaillez avec des événements dans l' éditeur d'objets, vous pouvez utiliser un "description "commente au début de l'événement pour dire quel est le contenu général de l'événement, et cela s'affichera dans la fenêtre des événements de l'éditeur d'objets. Cela devrait aller sur la toute première ligne de l'éditeur de code et est formaté comme suit:/// @description <This Is An Event Description> Cela sera maintenant affiché dans la fenêtre d'événement, par exemple: Notez que vous pouvez définir un commentaire par défaut à créer pour tous les événements à partir des préférences de l'éditeur d'objets. Enfin, si vous écrivez des fonctions de script et que vous voulez avoir un certain contrôle sur la façon dont elles sont traitées par l'EDI (c'est-à-dire: avoir l'auto-complétion ou afficher les paramètres du script), alors vous devriez écrire vos commentaires en utilisant la notation JSDoc comme expliqué ici.  Retour: Présentation de GML Suivant: Variables et portée variable © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

