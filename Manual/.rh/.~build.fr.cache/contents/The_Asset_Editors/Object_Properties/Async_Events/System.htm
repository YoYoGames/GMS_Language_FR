
  
  Système
  Cet événement ne peut être déclenché que par un rappel d' un événement de niveau système (tel que la détection d'une manette de jeu ou la connexion automatique à XBox Live).
    d'une manette de jeu ou la connexion automatique à XBox Live) et il renvoie une carte DS Map stockée dans la variable async_load,
    contenant différentes paires clé/valeur en fonction de l'événement de niveau système qui a déclenché le rappel. Ces événements sont :
   
  Tapis de jeu
  Lorsque cet événement est déclenché pour la connexion ou la déconnexion d'un gamepad, il renvoie l'une des paires clé/valeur suivantes dans la carte async_load:
  
    "event_type" - le type d'événement système reçu, qui sera l'une des chaînes suivantes :
      
        "gamepad discovered" - se produit lorsque le système signale qu'une nouvelle manette de jeu a été connectée.
        
        "gamepad lost" - se produit lorsque le système a perdu la connexion à une manette de jeu.
        
      
    
    "pad_index- l'indice du tampon qui a été ajouté ou supprimé.
  
  Cet événement vous permet désormais de déplacer toute votre logique de contrôle du gamepad de l'événement Step ou d'un événement d'alarme vers l'événement System et de ne l'exécuter que lorsqu'elle est réellement nécessaire.
  IMPORTANT ! Cet événement ne sera PAS déclenché à moins que vous ayez au moins une gamepad_* fonction ou actionDnD™ dans votre code de jeu. Le runner n'initialisera le sous-système gamepad que lorsque les fonctions sont utilisées dans le projet, donc si elles ne sont pas présentes, l'ajout/le retrait de gamepads ne déclenchera pas l'événement système.
   
  Claviers virtuels
  Lorsque cet événement est déclenché pour l'ouverture ou la fermeture d'un clavier virtuel, il renvoie les paires clé/valeur suivantes dans la carte async_load:
  
    "event_type" - le type d'événement système reçu, qui sera "virtual keyboard status" pour les claviers virtuels.
    "screen_height" - la hauteur du clavier virtuel (en pixels). Elle sera de 0 si le clavier est invisible.
    "keyboard_status" - l'état actuel du clavier, renvoyé comme l'une des chaînes suivantes :
      
        "hiding" (caché)
        "caché"
        "visible"
        "visible"
      
    
  
  Voir ici pour plus d'informations sur le clavier virtuel.
   
  XBox Live
  L'événement système asynchrone peut être déclenché en ciblant la XBox One à l'aide de l'exportation UWP et en cochant l'option Enable XBox Live dans les options de jeu UWP. Lorsque vous démarrez un projet GameMaker Studio
    2 UWP dont l'option Xbox Live est activée, le projet tente automatiquement de se connecter en silence à Xbox Live. Les résultats de cette tentative de connexion seront renvoyés sous la forme de l'une des paires clé/valeur suivantes dans la carte async_load:
  
    "event_type" - le type d'événement système reçu, qui sera l'une des chaînes suivantes :
    "user signed in- l'identification de l'utilisateur silencieux a été effectuée avec succès.
    "user sign in failed" - la connexion silencieuse de l'utilisateur a échoué (lorsque cela se produit, vous pouvez utiliser la fonction xboxlive_show_account_picker() pour
      demander à l'utilisateur de choisir un compte avec lequel se connecter)
    "user signed out- l'utilisateur s'est déconnecté.
  
  D'autres fonctions pour XBox Live peuvent également déclencher cet événement, mais les différents rappels pour ces fonctions sont détaillés dans les pages des fonctions concernées. Pour plus d'informations sur les fonctions spécifiques disponibles pour XBox Live, veuillez consulter ici.
   
  État du système audio
  Ce type d'événement est spécifiquement destiné à être utilisé lorsque vous travaillez avec la cible HTML5, car il sera déclenché chaque fois que l'état du contexte Web Audio change. Cela signifie que si vous avez, par exemple, un morceau de musique de fond en boucle, vous pouvez le mettre en pause ou l'arrêter et le redémarrer en fonction du déclenchement de cet événement.
    ou l'arrêter et le redémarrer, en fonction du déclenchement de cet événement. Vous pouvez le vérifier en recherchant la paire clé/valeur suivante dans la carte async_load:
  
    "event_type" - le type d'événement système reçu, qui sera la chaîne "audio_system_status" si le système audio a été initialisé ou si le contexte a changé.
  
  Si ce type d'événement est déclenché, il y aura une clé supplémentaire dans la carte async_load:
  
    "status" - L'état du système audio, qui sera l'une des deux chaînes suivantes
    "available- Le système audio est initialisé et disponible pour la lecture de sons.
    "unavailable" - Le système audio n'est pas initialisé, ou le contexte n'est pas en cours d'exécution, et ne peut donc pas jouer de sons (toutes les fonctions de lecture de sons renverront -1).
  
  Pour plus d'informations sur les fonctions spécifiques disponibles pour l'audio, veuillez cliquer ici.
  REMARQUE: bien que cet événement soit conçu pour être utilisé avec la cible HTML5, il sera également déclenché sur toutes les autres plates-formes, mais sur toutes les plates-formes (sauf HTML5), il ne sera déclenché qu'une seule fois au début du jeu, lorsque le moteur audio sera initialisé pour la première fois.
   
   
   
  
    
      
        Retour : Événements asynchrones
        Suivant : Lecture audio
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

