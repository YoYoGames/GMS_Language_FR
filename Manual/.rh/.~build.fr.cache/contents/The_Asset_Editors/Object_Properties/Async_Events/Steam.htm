
  
  Vapeur
  Cet événement ne peut être déclenché que par des callbacksprovenant de certaines
    fonctions de l'APISteam et renverra une carte DS stockée dans la variable async_load,
    contenant différentes paires clé/valeur en fonction du call-back de la fonction qui a déclenché l'événement. La carte contiendra toujours la clé "event_type", qui peut être analysée pour trouver le type de fonction qui a déclenché l'événement et modifier le code de la fonction.
    qui a déclenché l'événement et modifier le code requis en conséquence.
  Lorsque vous appelez une fonction qui déclenche cet événement, elle génère une valeur d'identification asynchrone unique qui doit être stockée dans une variable et vérifiée, car la carte async_load contient toujours une clé d'identification que vous pouvez ensuite analyser pour vous assurer que vous répondez au bon événement.
    à l'événement correct. En fait, la carte contiendra toujours les clés suivantes, quelle que soit la fonction Steam utilisée pour générer la réponse asynchrone :
  
    "id- L'identifiant asynchrone renvoyé par la fonction qui a déclenché l'événement.
    "result" - Le résultat de l'opération (une valeur réelle). Il s'agira soit de la constante GML ugc_result_success, soit d'un autre nombre réel. Vous devez vérifier cette constante pour vous assurer
      que l'appel a réussi, et si une autre valeur est retournée, quelque chose n'a pas fonctionné correctement. Les autres valeurs possibles renvoyées sont indiquées comme le résultat de la valeur de Steam "EResult" et vous devriez
      voir steamclientpublic.h dans les en-têtes du SDK pour toutes les valeurs possibles.
    "event_type- Une chaîne de caractères indiquant le type d'événement (voir ci-dessous pour les détails).
  
   
  Téléchargement des données
  Lorsque vous utilisez les fonctions Steam pour télécharger un classement (soit steam_upload_score() ou steam_upload_score_buffer())
    la carte DS retournée contiendra les paires clé/valeur suivantes :
  
    "event_type" - Cette clé contient la valeur "leaderboard_upload".
    "post_id- Cette clé doit correspondre à la valeur d'identification renvoyée par la fonction d'appel du téléchargement.
    "lb_name" - Cette clé contient le nom du classement qui a été publié sur le site Web de l'UE.
    "success- La valeur sera de 1 si le message a réussi et de 0 s'il a échoué.
    "updated" - La valeur sera de 1 si le score du classement a été mis à jour (c'est-à-dire si le nouveau score est meilleur) ou de 0 sinon.
    "score" - Cette touche contient le score qui a été affiché.
  
  Vous pouvez en voir des exemples sur les pages des fonctions de téléchargement des partitions.
   
  Téléchargement des classements
  Lorsque vous utilisez les fonctions Steam pour télécharger un classement (steam_download_scores(), steam_download_scores_around_user() ou 
    steam _download_friends_scores()), la carte DS retournée contiendra les paires clé/valeur suivantes :
  
    "event_type" - Cette clé contient la valeur "leaderboard_download".
    "id" - Cette clé doit correspondre à la valeur d'identification renvoyée par la fonction d'appel du téléchargement.
    "status" - L'état du rappel, où -1 équivaut à un échec ou au fait qu'aucun résultat n'a été renvoyé, et 0 équivaut à un succès.
    "lb_name" - Cette clé contient le nom du classement qui a été publié sur le site Web de l'UE.
    "numEntries- Le nombre de "rangées" de données de classement qui sont retournées.
    "entries" - Chaîne d'objets JSON contenant une autre carte DS, qui contient soit la clé "default" (signifiant qu'elle ne contient aucun résultat), soit la clé "
      entries ", dont vous pouvez alors obtenir la valeur. La valeur retournée pour "entries" sera une liste de DS contenant chacun des rangs du classement, où chaque entrée de la liste fera elle-même référence à une autre carte de DS qui contiendra les clés "name", "score" et "
      rank ", et elle peut également contenir une clé "data" en fonction de la fonction utilisée pour le téléchargement.
  
  Nous allons montrer un exemple du fonctionnement du téléchargement des données de score en demandant le classement des dix premiers pour le classement donné et en analysant ses résultats dans l'événement asynchrone Steam (pour les exemples de téléchargement, veuillez consulter les pages des fonctions appropriées). Pour commencer
    nous devons demander les scores avec le code suivant :
  score_get = steam_download_scores("Game Scores", 1, 10) ;
  Cela enverra une requête au serveur Steam pour les scores du classement "Game Scores", en stockant l'ID asynchrone de la requête dans la variable "score_get". Cette requête sera ensuite traitée dans l'événement asynchroneSteam de la manière suivante :
  var async_id = ds_map_find_value(async_load, "id") ; if async_id == score_get { var entries = ds_map_find_value(async_load, "entries") ;  var map = json_decode(entries) ; if ds_map_exists(map, "default") { ds_map_destroy(map) ; exit ; }  else { var list = ds_map_find_value(map, "entries") ; var len = ds_list_size(list) ; var entry ; for(var i =
    0 ; i < len ; i++ ;)  { entry = ds_list_find_value(list, i ) ; steam_name[i] = ds_map_find_value(entry, "name") ; steam_score [i]= ds_map_find_value(entry, "score") ; steam_rank[i]
    = ds_map_find_value(entry, "rank") ; if (ds_map_exists(entry, "data")) { var data = ds_map_find_value(entry, "data") ; var buffId = buffer_base64_decode(data) ; var message = buffer_read(buffId, buffer_string) ; show_debug_message( " -- attached message : " + string(message)) ; buffer_delete(buffId) ; }  ds_map_destroy(entry) ; }  ds_list_destroy(list) }  ds_map_destroy(map) }
  Ce que nous faisons ici est d'abord de vérifier la clé "id" de la carte spéciale async_load. Si cette valeur est la même que la valeur de la fonction de rappel originale (stockée dans la variable "score_get"), nous continuons à traiter les données.
    ), nous continuons à traiter les données. La première chose que nous faisons est d'analyser la carte async_load DS Map à la recherche de la clé "entries" qui contiendra un objet JSON contenant les données du leaderboard
    du classement. Cet objet JSON est ensuite décodé (voir json_decode()) comme une autre DS Map, et ce nouvel ID de carte est stocké dans la variable
    variable "map".
  Cette carte est vérifiée pour la clé "default" et si elle est trouvée, la carte est détruite et l'événement est quitté. Si aucune clé "default" n'est trouvée, le code va alors analyser la carte pour extraire les informations nécessaires sur le classement.
    pour extraire les informations nécessaires sur le leaderboard, en extrayant d'abord une DS List de la clé "entries" de la DS Map, puis en bouclant sur chaque entrée de la liste pour obtenir une autre DS Map avec les clés
    name , score et rank de chaque entrée. Ces valeurs sont ensuite stockées dans des tableaux, puis nous vérifions s'il existe une clé "data" supplémentaire.
    supplémentaire. Si c'est le cas (c'est-à-dire si le score a été téléchargé avec un paquet de données supplémentaire), nous l'analysons également et l'envoyons à la console du compilateur pour le débogage, avant de détruire le tampon et de continuer à détruire la carte. Notez que si la clé "
    data " est incluse, elle doit être décodée à l'aide de la fonction buffer_base64_decode() avant qu'elle
    puisse être lue correctement.
  Une fois la boucle terminée, la liste des entrées est détruite ainsi que la carte dont elle provient. Il n'est pas nécessaire de détruire la carte async_load DS car GameMaker Studio 2 s'en charge pour vous.
   
  Téléchargement de contenu généré par l'utilisateur (UGC)
  Lorsque vous utilisez les fonctions Steam pour télécharger du contenu généré par l'utilisateur (CGU), un certain nombre d'entre elles déclencheront cet événement. Cependant, chaque fonction génère une
    async_load DS Map avec des paires clé/valeur différentes (bien qu'elles contiennent toujours les clés générales "id", "result" et "event_type").
      ). Veuillez donc consulter la page spécifique à la fonction utilisée pour obtenir des détails et des exemples.
   
  Événements UGC uniques
  L'événement asynchrone Steam peut également être déclenché lorsqu'un utilisateur s'abonne à un élément en dehors du jeu - par exemple, il se déconnecte dans un navigateur et s'abonne à un nouvel élément, puis se reconnecte au jeu. Dans ce cas, la carte async_load ne contiendra que les détails suivants (et aucune des valeurs par défaut énumérées en haut de cette page) :
  
    "event_type" - Cette touche maintiendra la constante ugc_item_installed.
    "published_file_id" - l'ID de l'élément UGC nouvellement installé (vous pouvez utiliser la fonction steam_ugc_get_item_install_info() pour obtenir le chemin d'accès à l'élément installé).
      obtenir le chemin d'accès à l'élément installé)
  
  L'événement Steam Async peut également être déclenché lorsqu'un élément d'atelier est souscrit - soit à partir de l'application, soit à partir d'un navigateur d'atelier - et dans ces cas, la carte async_load contiendra les paires clé/valeur suivantes
    suivantes :
  
    "event_type" - Cette touche maintiendra la constante ugc_item_subscribed.
    "published_file_id" : Cette clé contient l'ID du fichier publié de l'élément nouvellement souscrit.
  
  L'événement sera déclenché si un élément est désabonné, la carte DS contenant les éléments suivants :
  
    "event_type" - Cette touche maintiendra la constante ugc_item_unsubscribed.
    "published_file_id: Cette clé contient l'ID du fichier publié de l'élément non abonné.
  
   
   
   
  
    
      
        Retour : Événements asynchrones
        Suivant : Système
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

