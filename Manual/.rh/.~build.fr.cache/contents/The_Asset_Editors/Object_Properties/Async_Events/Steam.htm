 Steam Cet événement ne peut être déclenchée par le rappel s de certains des Steam API fonctions et retourne une DS carte stockée dans la variable async_load, contenant différentes paires clé / valeur en fonction du rappel de la fonction qui a déclenché l'événement. La carte contiendra toujours la clé "event_type "qui peut ensuite être analysé pour trouver le type de fonction qui a déclenché l'événement et modifier le code requis en conséquence. Lorsque vous appelez une fonction qui déclenche cet événement, elle générera une valeur d'ID asynchrone unique qui devrait être stockée dans une variable et vérifiée, car la mappe async_load contiendra toujours une clé d'ID que vous pouvez ensuite analyser et vous assurer que vous répondez au événement correct. En fait, la carte contiendra toujours les touches suivantes, quelle que soit la Steam utilisée pour générer la réponse asynchrone: "id "- L'ID asynchrone renvoyé par la fonction qui a déclenché l'événement "result "- Le résultat de l'opération (une valeur réelle). Ce sera soit la constante GML ugc_result_success ou un autre nombre réel. Vous devez vérifier cette constante pour vous assurer que l'appel a réussi et si une autre valeur est renvoyée, quelque chose n'a pas fonctionné correctement. Le reste des valeurs possibles renvoyées est affiché comme le résultat du Steam "EResult "valeur et vous devriez voir steam clientpublic.h dans les en-têtes du SDK pour toutes les valeurs possibles. "event_type "- Une chaîne indiquant le type d'événement (voir ci-dessous pour les détails) Téléchargement de données Lorsque vous utilisez les Steam pour télécharger un classement (soitsteam_upload_score () ou steam_upload_score_buffer () ) la carte DS renvoyée aura les paires clé / valeur suivantes: "event_type "- Cette clé contiendra la valeur"leaderboard_upload " "post_id "- Cette clé doit correspondre à la valeur d'ID renvoyée par la fonction d'appel de téléchargement "lb_name "- Cette clé contient le nom du classement qui a été publié sur "success "- Sera 1 si le message a réussi, 0 a échoué "updated "- Sera 1 si le score du classement a effectivement été mis à jour (c'est-à-dire: le nouveau score était meilleur) ou 0 sinon "score "- Cette clé contient le score qui a été affiché Vous pouvez en voir des exemples sur les pages des fonctions de téléchargement de partition. Téléchargement des classements Lors de l'utilisation des Steam pour télécharger un classement ( steam_download_scores (), steam_download_scores_around_user () ou steam_download_friends_scores () ) la carte DS renvoyée aura les paires clé / valeur suivantes: "event_type "- Cette clé contiendra la valeur"leaderboard_download " "id "- Cette clé doit correspondre à la valeur d'ID renvoyée par la fonction d'appel de téléchargement "status "- L'état du rappel, où -1 équivaut à un échec ou qu'aucun résultat n'a été renvoyé, et 0 équivaut à un succès. "lb_name "- Cette clé contient le nom du classement qui a été publié sur "numEntries "- Le nombre de" lignes "de données de classement renvoyées. "entries "- Une chaîne d'objet JSON contenant une autre carte DS, qui contiendra soit la clé"default "(signifiant qu'aucun résultat n'est contenu dans) ou la clé" entries ", dont vous pouvez ensuite obtenir la valeur. Cette valeur renvoyée pour"entries "sera une liste DS contenant chacun des rangs du classement, où chaque entrée de la liste référencera elle-même une autre carte DS qui contiendra les clés"name ","score "et" rank ", et il peut également contenir un"data "en fonction de la fonction utilisée pour le téléchargement. Nous montrerons un exemple du fonctionnement du téléchargement des données de score en demandant le classement des dix premiers pour le classement donné et en analysant ses résultats dans l' Steam Async (pour télécharger des exemples, veuillez consulter les pages de fonctions appropriées). Pour commencer, nous devons demander les scores avec le code suivant:score_get = steam_download_scores("Game Scores", 1, 10); Cela enverra une demande au Steam pour les scores du classement "Game Scores", en stockant l'ID asynchrone de la demande dans la variable "score_get ". Cela sera ensuite géré dans l' événement Steam Async de la manière suivante:var async_id = ds_map_find_value(async_load, "id"); if async_id == score_get    {    var entries = ds_map_find_value(async_load, "entries");    var map = json_decode(entries);    if ds_map_exists(map, "default")        {       ds_map_destroy(map);       exit;       }    else       {       var list = ds_map_find_value(map, "entries");       var len = ds_list_size(list);       var entry;       for(var i =
    0; i < len; i++;)          {          entry = ds_list_find_value(list, i );          steam_name[i] = ds_map_find_value(entry, "name");          steam_score[i] = ds_map_find_value(entry, "score");    steam_rank[i]
    = ds_map_find_value(entry, "rank");          if (ds_map_exists(entry, "data"))             {             var data = ds_map_find_value(entry, "data");             var buffId = buffer_base64_decode(data);              var message = buffer_read(buffId, buffer_string);             show_debug_message( " -- attached message: " + string(message));             buffer_delete(buffId);             }          ds_map_destroy(entry);           }       ds_list_destroy(list)       }    ds_map_destroy(map)    } Ce que nous faisons ici, c’est d’abord vérifier le "id "clé de la carte spéciale async_load. Si cette valeur est la même que la valeur de la fonction de rappel d'origine (stockée dans le"score_get "variable), nous continuons ensuite à traiter les données. La première chose que nous faisons est d'analyser le async_load DS Map pour la clé "entries "qui contiendra un objet JSON contenant les données du classement. Cet objet JSON est ensuite décodé (voir json_decode() ) comme une autre carte DS, et ce nouvel ID de carte est stocké dans la variable "map ". Cette carte est vérifiée pour la clé "default "et si cela est trouvé, la carte est détruite et l'événement est quitté. Si non"default "clé est trouvée, le code analysera ensuite la carte pour extraire les informations nécessaires sur le classement, en extrayant d'abord une liste DS à partir du"entries "de la carte DS, puis en parcourant chaque entrée de la liste pour obtenir une autre carte DS avec le name, score et rank de chaque entrée. Ces valeurs sont ensuite stockées dans des tableaux, puis nous vérifions s'il y a un "data "clé. S'il y en a (c'est-à-dire: le score a été téléchargé avec un paquet de données supplémentaire), nous l'analysons également et l'envoyons à la console du compilateur pour le débogage, avant de détruire le tampon et de continuer à détruire la carte. Notez que si le " data "clé est incluse, elle doit être décodée à l'aide de la buffer_base64_decode() avant de pouvoir être lu correctement. Une fois la boucle terminée, la liste des entrées est détruite ainsi que la carte dont elle a été extraite. Il n'est pas nécessaire de détruire le async_load DS Map car cela est géré pour vous par GameMaker Studio 2. Téléchargement de UGC (contenu généré par l'utilisateur) Lors de l'utilisation des Steam pour télécharger du contenu généré par l'utilisateur (UGC), un certain nombre d'entre elles déclencheront cet événement. Cependant, chaque fonction générera une carte DS async_load avec des paires clé / valeur différentes (même si elles contiendront toujours le général "id ","result " et "event_type "touches), veuillez donc consulter la page spécifique à la fonction utilisée pour des détails et des exemples. Événements UGC uniques L' Steam Async peut également être déclenché lorsqu'un utilisateur s'abonne à un élément en dehors du jeu - par exemple, il s'éloigne d'un navigateur et s'abonne à un nouvel élément, puis revient au jeu. Dans ces cas, le async_load map ne contiendra que les détails suivants (et aucune des valeurs par défaut répertoriées en haut de cette page): "event_type "- Cette clé contiendra la constante ugc_item_installed. "published_file_id "- l'ID de l'élément UGC nouvellement installé (vous pouvez utiliser la fonction steam_ugc_get_item_install_info () pour obtenir le chemin d'accès à l'élément installé) L' Steam Async peut également être déclenché lorsqu'un élément d'atelier est abonné - soit à partir de l'application, soit en externe à partir d'un navigateur d'atelier - et dans ces cas, le async_load map contiendra les paires clé / valeur suivantes: "event_type "- Cette clé contiendra la constante ugc_item_subscribed. "published_file_id ": Cette clé a l'ID de fichier publié de l'élément nouvellement abonné L'événement sera déclenché si un élément est également désabonné, la carte DS contenant les éléments suivants: "event_type "- Cette clé contiendra la constante ugc_item_unsubscribed. "published_file_id ": Cette clé a l'ID de fichier publié de l'élément non abonné  Retour: Événements asynchrones Suivant: Système © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

