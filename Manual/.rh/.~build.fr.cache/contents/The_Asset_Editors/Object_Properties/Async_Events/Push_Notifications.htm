 Notifications push L'événement de notification push est celui qui est déclenché par le rappel des notifications push sur le système d'exploitation de l'appareil, soit à partir d'une source locale à l'aide de la fonction push_local_notification(), ou depuis une source distante (ex: votre serveur). Il génère une carte DS qui est exclusive à cet événement et est stockée dans la variable spéciale  async_load (veuillez consulter les fonctions individuelles qui déclenchent des événements asynchrones pour des exemples de code qui expliquent l'utilisation de cet événement plus en détail). Cette carte DS a les clés suivantes: "type ": La valeur peut être" local "pour une notification locale de périphérique," remote "pour une notification à distance ou" register "pour un enregistrement de notification à distance. "status ": La valeur sera" 1 "en cas de succès ou" 0 "en cas d'erreur. Il peut y avoir des entrées de clé supplémentaires basées sur le «type» renvoyé et la valeur «statut». Pour "status", si une erreur a été renvoyée ("0"), alors vous aurez également la clé suivante: "error ": Contient les détails de l'erreur reçue. Si la valeur "status" est 1 (c'est-à-dire: aucune erreur), la carte DS contiendra les valeurs supplémentaires suivantes, en fonction de la valeur de la clé "type": "reg_id ": Si le" type "reçu était" enregistrer ", cette clé contiendra l'ID d'enregistrement de l'appareil pour les notifications à distance. "data ": Si le" type "reçu était" local "ou" distant ", cette touche contiendra la charge utile de chaîne que vous avez définie lorsque vous avez appelé la fonction de notification. Pour mieux comprendre cela, nous avons créé un petit exemple d'extrait ci-dessous que vous pourrez consulter. Dans cet exemple, nous enverrons une notification push locale en utilisant le code suivant:var fireTime = date_inc_day(date_current_datetime(), 1); var data = "daily_reward"; push_local_notification(fireTime, "Ahoy!", "Catch The Haggis Has A Present", data); Cela définira une minuterie pour "pousser" une notification à l'appareil lorsqu'un jour s'est écoulé. À la fin de la journée, si votre jeu est en arrière-plan ou n'est pas en cours d'exécution, une notification sera affichée à l'utilisateur avec le titre et le message donnés (sur iOS, le nom du jeu est affiché et le titre est ignoré), puis un événement de notification push asynchrone sera appelé. Notez que si le jeu est au premier plan au moment de la notification, il ne sera pas affiché, mais l'événement asynchrone se déclenchera toujours. Dans le cas lui-même, vous géreriez le rappel quelque chose comme ceci: var type = ds_map_find_value(async_load, "type"); var status = ds_map_find_value(async_load, "status"); if status == 0    {    //error of some kind    var error = ds_map_find_value(async_load, "error");     show_debug_message("error=" + string(error));    } else
        {    if type == "register"       {       global.reg_id = ds_map_find_value(async_load, "reg_id");       }    else     {       var data = ds_map_find_value(async_load, "data");             if data == "daily_reward"          {          global.Gold += 1000;          }       }    } Retour: Événements asynchrones Suivant: Enregistrer / charger © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

