 L'éditeur de sprite L' éditeur de sprites est l'endroit où vous définissez les propriétés générales des sprites que vous créez. Vous pouvez ouvrir cette fenêtre en créant un nouveau sprite (clic droit dans le navigateur de ressources et sélectionnez "Créer un sprite"), en double-cliquant sur un sprite existant ou en cliquant avec le bouton droit de la souris un sprite existant et en sélectionnant " Propriétés ". Les parties qui composent l'éditeur de sprites sont les suivantes: Nom du sprite Ici, vous pouvez nommer le sprite. Le nom du sprite est ce qui sera utilisé tout au long de votre projet de jeu pour identifier le sprite en tant que ressource et ne peut être que alphanumérique et ne peut utiliser que le symbole de la barre inférieure "_". Bien que vous puissiez utiliser des nombres dans le nom des sprites, le nom ne peut pas commencer par un nombre car cela en ferait un nom de ressource non valide lors de l'utilisation de GML ou DnD™. Propriétés de l'image Dans cette section, vous pouvez définir la taille de l'image en cliquant sur le bouton Taille du sprite. Cela ouvrira la fenêtre suivante: Ici, vous pouvez voir un aperçu du sprite avant et après l'application des transformations choisies, et la section ci-dessous est consacrée à la définition des nouvelles propriétés du sprite et est divisée en deux parties: Mettre l'image à l'échelle: Avec cette option, vous pouvez redimensionner le canevas de dessin du sprite et toutes les images contenues sur le sprite seront étirées et mises à l'échelle pour s'adapter à la nouvelle taille. Vous pouvez choisir de mettre à l'échelle et de conserver le rapport hauteur / largeur de l'image de base, et vous pouvez également choisir de mettre à l'échelle en pixels ou en pourcentage. En fonction du type d'image avec lequel vous travaillez, vous pouvez également activer l'interpolation linéaire ou non (en général, l'interpolation linéaire "lisser" les pixels sur une zone, il est donc préférable de ne pas le faire pour le pixel art). Redimensionner le canevas: cette option redimensionnera le canevas de dessin à la nouvelle taille sans mettre à l'échelle le contenu. Vous pouvez définir le point "d'ancrage" pour le redimensionnement à l'aide des flèches directionnelles, puis définir la valeur de la taille. Il existe une option pour conserver les proportions lors du redimensionnement du canevas et en bas, vous pouvez choisir de définir les valeurs de redimensionnement en pixels ou en pourcentage. Lorsque vous êtes satisfait de la nouvelle taille, vous pouvez cliquer sur Appliquer pour appliquer les modifications et fermer la fenêtre des propriétés de redimensionnement. Notez que lorsque vous appliquez un changement d'échelle ou de taille à une image-objet, vous pouvez choisir d'appliquer la modification à l'origine de l'image-objet également, en cochant la case Appliquer à l'origine à côté du bouton Appliquer. Lorsqu'elle est cochée - si l'origine n'est pas l'un des paramètres par défaut et n'est pas verrouillée dans l'image-objet - alors sa position sera mise à l'échelle pour correspondre à la modification de la taille de l'image-objet. Lorsqu'elle n'est pas cochée, aucune mise à l'échelle ne sera appliquée à l'origine. Si l'origine n'est pas une valeur personnalisée ou est verrouillée, elle sera grisée et indisponible. Vous pouvez définir cette option pour tous les sprites à partir des préférences de l'éditeur de sprites. REMARQUE: cette option n'est disponible que pour les sprites bitmap et sera grisée pour les sprites d'animation SWF ou squelette. Dans cette section, vous pouvez également soit ouvrir l' éditeur d'images pour dessiner votre sprite, soit cliquer sur le bouton "Importer " pour importer un sprite précédemment créé. Les sprites peuvent être importés à partir des formats bitmap les plus courants ( PNG, JPG, GIF, etc...) mais GameMaker Studio 2 prend également en charge les sprites vectoriels (SWF ) et les sprites d'animation squelettiques ( Spine ). Pour plus d'informations sur ces formats, veuillez consulter la section sur les sprites non bitmap. Notez que lors de l'importation de sprites bitmap, vous pouvez sélectionner plusieurs fichiers image dans l'explorateur de fichiers et chacun sera ajouté au même sprite en tant que sous-images (cadres) séparées. Paramètres de texture Cette section des propriétés de sprite offres de fenêtre avec la façon dont GameMaker Studio 2 stocke les images qui composent l' image - objet sur la page de texture s pour une utilisation avec des appareils et navigateurs. Pour les plates-formes de bureau, cela n'est peut-être pas trop important, mais lorsque vous commencez à développer pour mobile ou Web, la bonne gestion de vos ressources d'image (textures) devient très importante car des textures mal gérées peuvent avoir un effet néfaste sur votre jeu, entraînant des problèmes de performances. Les cases à cocher Mosaïque horizontale et Mosaïque verticale ne sont normalement pas cochées par défaut, car la plupart du temps, vous ne souhaitez pas mettre en mosaïque les sprites. Cependant, dans certaines circonstances, vous souhaiterez peut-être les mosaïquer, ce qui signifie que vous devez cocher ces options, surtout si vous comptez mettre à l'échelle la vue ou la pièce, car la mise à l'échelle peut introduire des artefacts dans les graphiques d'un jeu si la page de texture n'est pas générée. correctement. Si votre sprite doit être utilisé comme carte de texture dans un jeu 3D, vous devez cocher la case Page de texture séparée et le sprite recevra une page de texture qui lui est propre (notez que chaque sous-image aura également son votre propre page de texture, donc si votre sprite a 10 images, vous générerez 10 pages de texture). Cela augmentera les besoins en mémoire de texture de votre jeu et il faut donc faire très attention lors de l'utilisation de cette option. Notez également qu'en général si votre sprite utilise cette option pour la 3D, alors les textures doivent être une puissance de 2 (ie: 128x128, 256x256, 512x512 etc...). L'option suivante consiste à activer l' alpha pré-multiplié pour les images de sprite. Lorsqu'il est activé, cela pré-multipliera l'alpha de toutes les sous-images du sprite. Ceci n'est normalement nécessaire que pour dessiner des sprites sur des surfaces ou pour certains effets spéciaux spécifiques. Pour une utilisation normale de sprite, vous ne devriez voir aucune différence notable entre le sprite normal et le sprite pré-multiplié. Nous avons également une option de filtrage des bords. Cette option est spécifiquement pour lorsque vous avez activé l'interpolation linéaire pour votre jeu et que vous voyez des «halos» de couleur autour de vos sprites. Ceci est causé par le matériel interpoler à partir de sources multiples texel s sur la page de texture à la fois, et peut être particulièrement évident lorsque vous redimensionnez les jeux dans la résolution. L'activation de cette option filtrera les pixels de bord pour prendre la couleur du pixel de sprite alpha complet le plus proche et ainsi fusionner les pixels interpolés sans le halo qui était présent précédemment. Enfin, vous pouvez choisir le groupe de textures auquel vous souhaitez que la ressource de sprite appartienne. Fondamentalement, un groupe de textures (précédemment défini dans le Gestionnaire de groupe de textures ) est quelque chose que vous pouvez configurer afin que toutes les ressources d'image dont vous avez besoin pour des pièces ou des niveaux spécifiques de votre jeu puissent être stockées ensemble. Ainsi, par exemple, vous pouvez avoir toutes vos images de niveau 1 dans un groupe de texture, toutes vos images de niveau 2 dans un autre etc... et GameMaker Studio 2 essaiera de placer toutes ces ressources groupées sur la même page de texture pour réduire la page de texture. échange pendant que votre jeu s'exécute sur la plate-forme cible choisie. REMARQUE: Cela peut ne pas toujours être nécessaire et l'augmentation des performances de cette méthode dépendra du fait que le périphérique cible est lié au processeur ou au processeur graphique. Vous pouvez en savoir plus sur les pages de textures ici. Les groupes de textures ne concernent que les images bitmap, et les sprites non bitmap ne seront pas affectés aux groupes de textures et certaines des options ci-dessus ne seront pas disponibles pour eux. Certains sprites non bitmap auront déjà leur propre page de texture unique (sprites d'animation squelette) tandis que d' autres ont tout simplement pas besoin de textures car ils sont composés de vecteur (les sprites SWF) de. Pour plus d'informations, veuillez consulter la section suivante: Sprites non bitmap Masque de collision Tous les sprites ont un masque de collision qui correspond à la zone du sprite qui sera utilisée pour détecter les collisions lorsque le sprite est assigné à une instance. Vous pouvez d'abord définir le mode du masque de collision, qui peut être l'un des suivants: Automatique: GameMaker Studio 2 calculera automatiquement le masque de collision en fonction des valeurs alpha du sprite (cela dépendra du paramètre de tolérance expliqué ci-dessous). Image complète: Le masque sera calculé avec ses limites identiques aux limites gauche, droite, supérieure et inférieure du sprite. Manuel: cette sélection signifie que vous souhaitez définir les limites du masque de collision en utilisant les valeurs d'entrée pour la gauche, la droite, le haut et le bas. Outre le mode masque de collision, il existe également différents types de masque de collision que vous pouvez choisir dans le menu déroulant: Rectangle: masque de collision rectangulaire simple. C'est le plus rapide à résoudre lorsqu'il est utilisé dans votre projet. Rectangle pivoté: Il s'agit d'un simple masque de collision rectangulaire qui tournera avec le image_angle valeur de l'instance avec le sprite affecté. Ceci est plus lent à résoudre que le masque de collision rectangulaire normal, mais plus rapide qu'un masque de collision précis. Ellipse: crée un masque de collision elliptique. Ceci est plus lent à résoudre que le masque rectangulaire. Diamant: crée un masque de collision "diamant". Ceci est plus lent à résoudre et génère plus de surcharge du processeur que les masques rectangulaires et ellipitiques. Précis: Cela crée un masque de collision précis basé sur le contour de l'image-objet. Si le sprite a plusieurs sous-images, alors ce sera un composite des bords de toutes les sous-images placées les unes sur les autres. Notez que le masque précis sera découpé dans la zone de délimitation si le Mode est défini sur Manuel et que vous modifiez les valeurs par défaut. Ceci est très lent et génère beaucoup de surcharge du processeur. Précis (par image): Cela crée un masque de collision précis sur une base par image (c'est-à-dire: le masque changera pour se conformer au contour de chaque image différente). Notez que le masque précis sera découpé dans la zone de délimitation si le Mode est défini sur Manuel et que vous modifiez les valeurs par défaut. C'est de loin le type de masque de collision le plus lent à résoudre et doit être évité sauf dans des cas très, très spécifiques et peu fréquents. L'image suivante illustre les différentes options de masque: Les options de vérification des collisions sont très importantes pour votre jeu, car elles influenceront directement la façon dont vos objets interagissent et le fonctionnement de votre jeu, les mauvais paramètres ayant même un impact négatif sur les performances globales. Pourquoi donc? Eh bien, chaque fois que deux instances se rencontrent et que les deux instances ont un masque valide, un événement de collision est généré en vérifiant le chevauchement de la boîte englobante et du masque, qui peut être précis ou non, et adapté à l'index de l'image ou non. Voici une image pour illustrer ceci: Sous le paramètre de masque de collision, vous avez le curseur de tolérance alpha, qui indique la tolérance de création du masque par rapport à la transparence des pixels des sprites - avec une tolérance plus élevée, les pixels partiellement transparents sont laissés à l'extérieur du masque, tandis qu'avec un plus faible tolérance le masque prendra en compte ces pixels. Cela influence à la fois le cadre de sélection (lorsqu'il n'est pas défini sur manuel) et le masque pour une vérification précise des collisions. Enfin, vous pouvez définir les limites de la boîte englobante pour le masque. La zone de délimitation est le nom donné à la zone rectangulaire dans laquelle s'inscrit le masque de sprite. Seuls les pixels à l'intérieur de cette zone de délimitation sont utilisés pour le masque et seront impliqués dans la vérification des collisions, et par défaut, celle-ci est automatiquement calculée, en prenant la tolérance alpha dans Compte. Si vous avez coché "précis (par image)", cela sera également séparé pour chaque sous-image. Lorsque vous le définissez vous-même, vous pouvez saisir les valeurs dans les cases à gauche, à droite en haut et en bas, ou vous pouvez cliquer sur dans la fenêtre d'aperçu du sprite et faites-le glisser pour le "dessiner" sur le sprite. Notez que lorsque vous "dessinez" la zone de délimitation, le masque est automatiquement généré pour s'adapter aux valeurs finales, et la zone de délimitation peut "découper" le masque. Il est à noter que si vous allez dans la fenêtre de prévisualisation, vous pouvez ajuster le masque de collision en utilisant les «poignées» situées dans chaque coin. En cliquant dessus et en les faisant glisser, vous ajusterez le masque de collision de la même manière que la saisie de valeurs pour la zone de délimitation. Neuf tranches Nine Slicing (également connu sous le nom de 9-slicing) est une technique utilisée pour mettre à l'échelle des images rectangulaires afin de préserver les détails, en leur faisant conserver leur forme d'origine après la mise à l'échelle. Voir la page sur Nine Slice pour plus d'informations. La section Nine Slice de l'éditeur de sprites vous permet d'activer Nine Slice sur un sprite et de le prévisualiser en action dans la fenêtre de prévisualisation des neuf tranches sur la droite. La fenêtre d'aperçu de neuf tranches vous permet de redimensionner l'image et montre à quoi ressemblera l'image finale, après avoir été mise à l'échelle à l'aide de la technique des neuf tranches. Ce sprite d'aperçu peut également être tourné. La section Nine Slice propose les options suivantes: Activer neuf tranches: cette option contrôle si la mise à l'échelle des neuf tranches est utilisée lorsque l'image-objet est mise à l'échelle. Lorsqu'elle est activée, la mise à l'échelle de neuf tranches sera utilisée pour le sprite (et toutes les instances d'objet utilisant ce sprite) placé dans une séquence ou un calque de pièce, et les sprites mis à l'échelle dessinés à l'aide de draw_sprite_ext () et d'autres fonctions similaires. REMARQUE: Nine Slicing ne fonctionnera pas avec les fonctions qui ne dessinent qu'une partie du sprite ou la déforment, comme draw_sprite_part () et draw_sprite_pos () Guides: cette section affiche le décalage de chaque guide sur son axe et peut être utilisée pour modifier ces décalages. Ces guides peuvent également être déplacés à l'intérieur de la fenêtre d'aperçu du sprite en les faisant simplement glisser avec la souris. REMARQUE: les guides sur le même axe ne peuvent pas se croiser et le fait de les faire glisser l'un sur l'autre entraînera le déplacement du deuxième guide. Le décalage de chaque guide est relatif à son bord correspondant. Par exemple, le repère gauche est décalé par rapport au bord gauche, le bord droit est décalé par rapport au bord droit, etc. La couleur et l'alpha de chaque guide peuvent être modifiés en cliquant sur le bouton coloré à côté de la position du guide. Surbrillance: cette option affecte la façon dont une tranche sélectionnée apparaît dans la fenêtre d'aperçu du sprite. "Inverted" met en évidence le sprite avec une superposition à l'exception de la tranche sélectionnée, et "Overlay" met en surbrillance uniquement la tranche sélectionnée avec une superposition. La couleur et l'alpha de la superposition peuvent être modifiés en cliquant sur le bouton coloré à côté du menu déroulant. Tranche sélectionnée: Cette option peut être utilisée pour sélectionner une tranche, en choisissant l'une des tranches de bord (gauche, haut, droite, bas) et celle du centre. Une tranche peut également être sélectionnée par un clic gauche dessus dans la fenêtre d'aperçu du Sprite, et un nouveau clic le désélectionnera. Mode mosaïque: cette option est utilisée en conjonction avec l' option Tranche sélectionnée, pour contrôler la façon dont la tranche apparaît lorsque l'image-objet est mise à l'échelle. Vous pouvez appliquer l'un des modes de vignette suivants à chaque tranche: Étirer : la tranche sera étirée pour combler l'espace entre ses coins connectés. Répéter : la tranche sera répétée ou en mosaïque pour préserver les détails. Miroir : la tranche sera répétée par mise en miroir. Répétition vierge : la tranche n'apparaîtra qu'une seule fois, ce qui entraînera une zone vide après elle. Masquer : la tranche n'apparaîtra pas du tout. Diffuser des messages Ce bouton ajoutera un message de diffusion à la chronologie du sprite, ouvrant une boîte de dialogue dans laquelle vous pourrez ajouter le message à diffuser. Le message sera ajouté partout où la tête de lecture se trouve dans la vue image et se compose d'une simple chaîne qui peut être captée dans l' événement de message de diffusion lorsqu'il est déclenché puis mis en action. Une fois ajouté, le message sera affiché dans la vue Frame, et vous pouvez cliquer sur le bouton droit de la souris dessus pour ouvrir un menu dans lequel vous pouvez supprimer le message ou le modifier. Pour plus d'informations sur les messages de diffusion, cliquez ici. Vitesse de trame Dans cette section, vous pouvez définir la vitesse à laquelle les images d'animation doivent être lues à partir de la zone de saisie sur la gauche. Le paramètre de vitesse d'image peut être basé sur " Images par seconde " ou " Images par image de jeu ", où un paramètre de 30 "Images par seconde" affichera 30 images de l'animation en une seconde, tandis qu'un paramètre de 30 " Images par image de jeu "essaiera d'afficher les 30 images en une seule étape de jeu, donc les valeurs de" Images par image de jeu "sont généralement définies sur 1 ou moins (par exemple: une vitesse d'images par image de jeu de 0,5 affichera une nouvelle image tous les deux étapes de jeu). Il est important de noter que les paramètres de vitesse d'image n'affecteront pas seulement la lecture de l'animation dans la fenêtre d'aperçu, mais régiront également la façon dont le sprite est animé dans vos jeux. La vitesse que vous définissez ici affichera l'aperçu du sprite tel qu'il s'exécutera dans le jeu avec un multiplicateur de vitesse d'image de 1, mais cela peut être défini dans le code en utilisant le image_speed variable signifiant que le sprite peut fonctionner plus vite ou plus lentement selon ce qui est programmé. Ainsi, par exemple, si vous définissez le sprite pour utiliser 10 "images par seconde", puis définissez le paramètre image_speed à 0,5, le jeu dessinera le sprite à mi-vitesse - 5 images par seconde. Inversement, si nous définissons le image_speed pour le même sprite à 2, dans le jeu, il sera dessiné animé deux fois plus vite - 20 images par seconde. Notez que la vitesse d'image peut également être définie dans l' éditeur d'images. Origine du sprite La barre supérieure de l'éditeur de sprite contient les propriétés d' origine du sprite. C'est le point sur le sprite qui correspond à sa position dans la pièce, c'est-à-dire: lorsque vous créez une instance à une position x / y particulière, l'origine du sprite y est placée. Par défaut, l'origine est le coin supérieur gauche du sprite, mais il est souvent plus pratique d'utiliser le centre du milieu ou vous voudrez peut-être utiliser une autre position (comme pour un personnage de jeu de plate-forme, vous voudrez peut-être en bas au centre ), donc vous pouvez Cliquez sur dans le menu déroulant d'origine et sélectionnez l'une des valeurs par défaut. Vous pouvez également définir l'origine manuellement en cliquant sur dans l'image d'aperçu du sprite qui déplacera la croix du marqueur d'origine vers le point sur lequel vous avez cliqué, ou en saisissant des valeurs différentes pour x et y dans les cases correspondantes. Notez que vous pouvez même définir une origine en dehors de la zone du sprite en utilisant des nombres négatifs (pour la gauche et le haut) ou des nombres positifs plus grands que la largeur et la hauteur du sprite (pour la droite et le bas), ce qui peut être très utile lorsque vous traitez avec des objets qui besoin de dessiner des sprites composites. Commandes de zoom En haut à droite de la fenêtre d'aperçu, vous avez les commandes de zoom. Ces boutons contrôlent le niveau de zoom actuel du sprite d'aperçu. Vous pouvez effectuer un zoom avant ou arrière et en cliquant sur le Le bouton réinitialisera l'aperçu à 1: 1 avec le sprite en cours d'édition. Vous pouvez également cliquer sur le bouton Ajuster la fenêtre pour que l'aperçu du sprite entier rentre dans la fenêtre actuelle de l'éditeur (cela effectuera un zoom avant / arrière selon le cas pour l'adapter). Notez que vous pouvez effectuer un zoom avant et arrière à l'aide de / et la molette de la souris, et en appuyant sur / + définira l'aperçu à 1: 1 avec la taille de sprite actua. Aperçu La fenêtre d'aperçu du sprite montre le sprite tel qu'il apparaîtra dans le jeu et peut être zoomé ou dézoomé à l'aide de la molette de la souris, et parcouru en utilisant le bouton central de la souris et en faisant glisser, ou utilisez la combinaison + et en faisant glisser. Vous pouvez également utiliser les commandes Frame (expliquées ci-dessous) pour modifier la façon dont l'image d'aperçu est affichée. Cette fenêtre affichera également une «croix» qui marque l' origine du sprite (voir la section Origine du sprite ci-dessus pour plus de détails), et elle peut également afficher le masque de collision si cette option est en cours de modification (voir la section Masque de collision, ci-dessus ). Commandes de lecture Les commandes de lecture permettent de lire dans la fenêtre d'aperçu l'animation des images, avec le bouton de lecture démarrer / arrêter l'animation et le bouton Boucle utilisé pour définir si le sprite boucle (retourne à l'image 1 lorsque la dernière image est atteinte) ou ping-pongs (recule dans les images lorsque la dernière image est atteinte). Notez que l'option loop / ping-pong n'affectera pas la façon dont le sprite est affiché dans le jeu, donc définir ces options dans le sprite ne changera pas la façon dont il est affiché lorsque le jeu est compilé et exécuté. Ceci est également vrai pour les points de boucle qui peuvent être définis dans la vue Frame (voir ci-dessous pour plus d'informations) - ils sont purement visibles dans l'éditeur de sprite et conçus pour vous aider à tester vos animations, mais n'auront aucun effet sur la façon dont le l'animation de sprite est affichée dans vos jeux. Une partie supplémentaire des contrôles de cadre est l' affichage de l'image actuelle et l'entrée un peu plus loin sur la gauche. La boîte montre le nombre total d'images de l'animation de sprite ainsi que l'image actuelle affichée. Vous pouvez modifier l'image actuelle à tout moment en cliquant sur la zone de saisie et en saisissant le numéro de l'image que vous souhaitez afficher. IMPORTANT! Les cadres sont numérotés de 1 au numéro maxframe, cependant dans votre code de jeu, les cadres seront numérotés de 0 au numéro maxframe - 1. CadresCette partie de l'éditeur de sprite montre chacune des différentes images qui composent un seul sprite défini le long d'une chronologie de séquence. Vous pouvez cliquer sur n'importe quelle image et faites-la glisser vers la gauche ou la droite pour modifier l'ordre dans lequel elles seront animées, et vous pouvez également double-cliquer sur n'importe quel cadre pour lancer l' éditeur d'images et les modifier. Vous pouvez couper, copier et coller des cadres à l'aide des raccourcis clavier standard ou en utilisant le bouton droit de la souris options de menu, et vous pouvez également sélectionner plusieurs cadres à utiliser / +. Le menu du bouton droit de la souris propose les options suivantes: Ajouter une image - Ajoutez une nouvelle image à l'animation à la fin. Insérer une image - Insère une nouvelle image dans l'animation après l'image actuellement sélectionnée. Couper / Copier / Coller - Coupez, copiez et collez une ou plusieurs images. Supprimer les cadres sélectionnés - Supprime le ou les cadres actuellement sélectionnés. Outre l'option donnée ci-dessus pour étirer un cadre, vous pouvez également positionner la souris sur le bord d'un cadre puis lorsque le curseur se transforme en double flèche, cliquez simplement et faites glisser pour redimensionner le cadre afin que cela prenne plus de temps: Un cadre étiré prendra plus de temps à s'afficher, comme si vous aviez dupliqué le même cadre plusieurs fois. Enfin, vous pouvez également zoomer sur la chronologie de l'image en utilisant les "poignées" de chaque côté de la vue de l'image comme indiqué dans l'image ci-dessous:  Retour: Les éditeurs d'actifs Suivant: Ensembles de carreaux © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

