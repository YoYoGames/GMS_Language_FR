
  
  L'éditeur de sprites
  L'éditeur de sprites vous permet de définir les propriétés générales des sprites que vous créez.
    que vous créez. Vous pouvez ouvrir cette fenêtre en créant un nouveau sprite (cliquez avec le bouton droit de la souris sur  dans le navigateur d'actifs et sélectionnez "Create
    Sprite"), en double-cliquant sur  sur un sprite existant ou en cliquant avec le bouton droit de la souris sur  un sprite existant et en sélectionnant "Propriétés".
  Les parties qui composent l'éditeur de sprites sont les suivantes :
   
  Nom du sprite
  
    Ici, vous pouvez nommer le sprite. Le nom du sprite est celui qui sera utilisé dans votre projet de jeu pour identifier le sprite en tant que ressource. Il ne peut être qu'alphanumérique et ne peut utiliser que le symbole "_" sous la barre. Bien que vous puissiez utiliser des chiffres dans le nom du sprite
      sprites, le nom ne peut pas commencer par un chiffre car cela en ferait un nom de ressource invalide lors de l'utilisation de GML ou de DnD™.
     
  
  Propriétés de l'image
  
    Dans cette section, vous pouvez définir la taille de l'image en cliquant sur le bouton Sprite Size . La fenêtre suivante s'ouvre alors :
    Ici vous pouvez voir un aperçu du sprite avant et après l'application des transformations choisies, et la section ci-dessous est
      pour définir les nouvelles propriétés du sprite et est divisée en deux parties :
    
      Échelle de l'image: Avec cette option, vous pouvez redimensionner le canevas de dessin du sprite et toutes les images contenues dans le sprite seront étirées et mises à l'échelle pour s'adapter à la nouvelle taille. Vous pouvez choisir de mettre à l'échelle et de conserver le rapport d'aspect de l'image de base,
        et vous pouvez également choisir une mise à l'échelle en pixels ou en pourcentage. Selon le type d'image avec lequel vous travaillez, vous pouvez également activer ou non l'interpolation linéaire (en général, l'interpolation linéaire "lisse" les pixels sur une zone et il est donc préférable de ne pas la désactiver).
        une zone et il est donc préférable de ne pas l'activer pour le pixel art).
      Redimensionner le canevas: Cette option permet de redimensionner le canevas de dessin à la nouvelle taille sans mettre à l'échelle le contenu. Vous pouvez définir le point d'ancrage pour le redimensionnement à l'aide des flèches directionnelles, puis définir la valeur de la taille. Il existe une option
        pour maintenir le rapport d'aspect lors du redimensionnement du canevas et, en bas, vous pouvez choisir de définir les valeurs de redimensionnement en pixels ou en pourcentage.
    
    Lorsque vous êtes satisfait de la nouvelle taille, vous pouvez cliquer sur Appliquer pour appliquer les modifications et fermer la fenêtre Redimensionner les propriétés. Notez que lorsque vous appliquez une modification d'échelle ou de taille à un sprite, vous pouvez choisir d'appliquer également la modification à l'origine du sprite en cochant la case Appliquer à l'origine située à côté du bouton Appliquer.
      du sprite, en cochant la case Appliquer à l'origine située à côté du bouton Appliquer . Lorsque cette case est cochée, si l'origine ne fait pas partie des paramètres par défaut et n'est pas verrouillée dans le sprite, sa position sera mise à l'échelle pour correspondre à la modification de la taille du sprite.
      pour correspondre à la modification de la taille du sprite. Si cette case n'est pas cochée, aucune mise à l'échelle ne sera appliquée à l'origine. Si l'origine n'est pas une valeur personnalisée ou est verrouillée, elle sera grisée et indisponible. Vous pouvez définir cette option pour tous les sprites dans les
     Préférences de l'éditeur de sprites.
    REMARQUE : Cette option n'est disponible que pour les sprites bitmap et sera grisée pour les sprites SWF ou d'animation squelette.
    Dans cette section, vous pouvez également ouvrir l'éditeur d'images pour dessiner votre sprite, ou vous pouvez cliquer sur le bouton "Importer" pour importer un sprite précédemment créé. Les sprites peuvent être importés à partir de la plupart des
      formats bitmap les plus courants ( PNG, JPG, GIF, etc...) mais GameMaker Studio 2 prend également en charge les sprites vectoriels (SWF) et les sprites d'animation squelettique (
      Spine ). Pour plus d'informations sur ces formats, veuillez consulter la section sur les sprites non bitmap. Notez que lorsque vous importez des sprites bitmap, vous pouvez sélectionner
      plusieurs fichiers image dans l'explorateur de fichiers et chacun d'entre eux sera ajouté au même sprite sous forme de sous-images (cadres) distinctes.
     
  
  Paramètres des textures
  
    Cette section de la fenêtre des propriétés du sprite traite de la manière dont GameMaker Studio 2 stocke les images qui composent votre sprite sur despages de texturedestinées à être utilisées avec les appareils
      appareils et navigateurs. Pour les plates-formes de bureau, cela n'est peut-être pas très important, mais lorsque vous commencez à développer pour les mobiles ou le Web, la bonne gestion de vos images (textures) devient très importante.
      en effet, des textures mal gérées peuvent avoir un effet néfaste sur votre jeu et entraîner des problèmes de performance.
    Les cases à cocher Tile Horizontally (tuiles horizontales ) et Tile Vertically (tuiles verticales) ne sont normalement pas cochées par défaut, car la plupart du temps, vous ne voulez pas tuiler les sprites. Cependant, dans certaines circonstances, vous pouvez souhaiter qu'ils soient tuilés.
      vous devriez cocher ces options, surtout si vous allez mettre à l'échelle la vue ou la pièce, car la mise à l'échelle peut introduire des artefacts dans les graphiques d'un jeu si la page de texture n'est pas générée correctement.
    Si votre sprite doit être utilisé comme une carte de texture dans un jeu 3D, vous devez cocher la case Separate Texture Page et le sprite recevra une page de texture qui lui est propre (notez que chaque sous-image recevra également sa propre page de texture.
      donc si votre sprite comporte 10 images, vous générerez 10 pages de texture). Cela augmentera les besoins en mémoire de texture de votre jeu et il faut donc faire très attention en utilisant cette option. Notez également qu'en général, si votre sprite utilise cette option
      pour la 3D, les textures doivent être une puissance de 2 (c'est-à-dire 128x128, 256x256, 512x512 etc...).
    L'option suivante consiste à activer l'alpha pré-multiplié pour les images du sprite. Lorsque cette option est activée, l'alpha de toutes les sous-images du sprite sera pré-multiplié. Ceci n'est normalement nécessaire que pour dessiner des sprites sur des surfaces, ou pour certains effets spéciaux spécifiques.
      effets spéciaux. Pour une utilisation normale du sprite, vous ne devriez pas voir de différence notable entre le sprite normal et le sprite pré-multiplié.
    Nous avons également une option de filtrage des bords. Cette option est spécialement conçue pour les cas où l'interpolation linéaire est activée dans votre jeu et où vous voyez des "halos" de couleur autour de vos sprites.
      de couleur autour de vos sprites. Cela est dû au fait que le matériel interpole à partir de plusieurs texelssources sur la page de texture en même temps.
      particulièrement évident lorsque vous augmentez la résolution des jeux. L'activation de cette option filtrera les pixels de bord pour qu'ils prennent la couleur du pixel de sprite full alpha le plus proche et ainsi mélanger les pixels interpolés sans le halo qui était présent auparavant.
    Enfin, vous pouvez choisir le groupe de texture auquel vous souhaitez que la ressource sprite appartienne. Fondamentalement, un groupe de textures (préalablement défini dans le gestionnaire de groupes de textures) est quelque chose que vous
      pouvez configurer pour que toutes les ressources d'images dont vous avez besoin pour des pièces ou des niveaux spécifiques de votre jeu puissent être stockées ensemble. Ainsi, par exemple, vous pouvez avoir toutes vos images de niveau 1 dans un groupe de textures, toutes vos images de niveau 2 dans un autre etc... et
     GameMaker Studio 2 essaiera de placer toutes ces ressources groupées sur la même page de texture afin de réduire le changement de page de texture lorsque votre jeu s'exécute sur la plate-forme cible choisie.
    REMARQUE: cela n'est pas toujours nécessaire et l'augmentation des performances obtenue par cette méthode dépendra du fait que le périphérique cible soit lié au CPU ou au GPU.
    Vous pouvez en savoir plus sur les pages de texture ici.
    Les groupes de texture ne concernent que les images bitmap, et les sprites non bitmap ne seront pas assignés aux groupes de texture et certaines des options ci-dessus ne seront pas disponibles pour eux.
      pour eux. Certains sprites non bitmap auront déjà leur propre page de texture unique (sprites d'animation de squelette) tandis que d'autres n'ont pas besoin de textures car ils sont composés de vecteurs (sprites SWF ). Pour plus d'informations, veuillez consulter la section suivante :
    
      Sprites non bitmap
    
     
  
  Masque de collision
  
    Tous les sprites ont un masque de collision qui correspond à la zone du sprite qui sera utilisée pour détecter les collisions lorsque le sprite sera assigné à une instance. Vous pouvez d'abord définir le Mode pour le masque de collision, qui
      qui peut être l'un des suivants :
    
      Automatique: GameMaker Studio 2 calculera le masque de collision automatiquement en fonction des valeurs alpha du sprite (cela dépendra du paramètre Tolérance expliqué ci-dessous).
      Image complète: Le masque sera calculé de manière à ce que ses limites soient les mêmes que les limites gauche, droite, supérieure et inférieure du sprite.
      Manuel: Si vous sélectionnez cette option, vous souhaitez définir les limites du masque de collision à l'aide des valeurs saisies pour la gauche, la droite, le haut et le bas.
    
    Outre le mode de masque de collision, il existe également différents types de masque de collision que vous pouvez choisir dans le menu déroulant :
    
      Rectangle: Un simple masque de collision rectangulaire. C'est le plus rapide à résoudre lorsqu'il est utilisé dans votre projet.
      Rectangle rotatif: Il s'agit d'un simple masque de collision rectangulaire qui tournera en fonction de la valeur image_angle de l'instance à laquelle le sprite est assigné. Il est plus lent à résoudre que le masque de collision rectangulaire ordinaire, mais plus rapide qu'un masque de collision précis.
        mais plus rapide qu'un masque de collision précis.
      Ellipse: Crée un masque de collision elliptique. Il est plus lent à résoudre que le masque rectangulaire.
      Diamant: Crée un masque de collision en forme de "diamant". Ce masque est plus lent à résoudre et génère plus de surcharge CPU que les masques rectangulaires et elliptiques.
      Précis: Cette option crée un masque de collision précis basé sur le contour du sprite. Si le sprite possède plusieurs sous-images, il s'agira d'un composite des bords de toutes les sous-images placées les unes sur les autres.
        Notez que le masque précis sera coupé à la boîte englobante si le mode est défini sur Manuel et que vous modifiez les valeurs par défaut. Cette opération est très lente et génère une surcharge importante du processeur.
      Précis (par image): Cette option crée un masque de collision précis pour chaque image (c'est-à-dire que le masque sera modifié pour se conformer au contour de chaque image). Notez que le masque précis sera coupé à la boîte englobante si le mode est défini sur Manuel et que vous modifiez les valeurs par défaut. Ce type de masque de collision est de loin le plus lent à résoudre et doit être évité, sauf dans des cas très, très spécifiques et peu fréquents.
        rares.
      
    
    L'image suivante illustre les différentes options de masque :
    Les options de vérification des collisions sont très importantes pour votre jeu, car elles influencent directement la façon dont vos objets interagissent et la façon dont votre jeu fonctionne.
      Les mauvais réglages peuvent même avoir un impact négatif sur les performances globales. Pourquoi ? Eh bien, lorsque deux instances se rencontrent, et que les deux instances ont un masque valide, un événement de collision est généré en vérifiant le chevauchement de la boîte englobante et du masque.
      qui peut être précis ou non, et adapté à l'index de l'image ou non. Voici une image pour illustrer ceci :
    
    Sous le paramètre de masque de collision, vous avez le curseur de tolérance alpha , qui indique la tolérance pour la création du masque par rapport à la transparence des pixels des sprites - avec une tolérance plus élevée, les pixels qui sont partiellement transparents sont laissés en dehors du masque, tandis qu'avec une tolérance plus faible, le masque prendra en compte ces pixels.
      transparents sont laissés en dehors du masque, tandis qu'avec une tolérance plus faible, le masque prendra en compte ces pixels. Cela influe à la fois sur la boîte englobante (lorsqu'elle n'est pas définie comme manuelle) et sur le masque pour une vérification précise des collisions.
    Enfin, vous pouvez définir les limites de la boîte englobante pour le masque. La boîte englobante est le nom donné à la zone rectangulaire dans laquelle s'inscrit le masque du sprite. Seuls les pixels situés à l'intérieur de cette boîte sont utilisés pour le masque et seront impliqués dans la vérification des collisions.
      Par défaut, cette zone est automatiquement calculée, en tenant compte de la tolérance alpha. Si vous avez coché "précis (par image)", le calcul sera également séparé pour chaque sous-image. Lorsque vous le définissez vous-même, vous pouvez
      saisir les valeurs dans les cases pour la gauche, la droite, le haut et le bas, ou vous pouvez cliquer sur  dans la fenêtre de prévisualisation du sprite et le faire glisser pour le "dessiner" sur le sprite.
      le sprite. Notez que lorsque vous "dessinez" la boîte de délimitation, le masque est automatiquement généré pour s'adapter aux valeurs finales, et la boîte de délimitation peut "couper" le masque.
    Il est intéressant de noter que si vous allez dans la fenêtre d'aperçu, vous pouvez ajuster le masque de collision à l'aide des "poignées" situées dans chaque coin. En cliquant sur ces poignées et en les faisant glisser, vous ajustez le masque de collision de la même manière qu'en saisissant des valeurs pour la boîte de délimitation.
      de la boîte englobante.
     
  
  Neuf tranches
  
    Découpage en neuf (également appelé 9-slicing) est une technique utilisée pour mettre à l'échelle des images rectangulaires afin de préserver les détails, ce qui leur permet de conserver leur forme originale après la mise à l'échelle. Voir la page sur le découpage en neuf pour plus d'informations.
    La section Nine Slice de l'éditeur de sprites vous permet d'activer le découpage en neuf tranches sur un sprite, et de le prévisualiser en action dans la fenêtre d'aperçu de droite.
      en action dans la fenêtre d'aperçu des neuf tranches, à droite.
    La fenêtre de prévisualisation Nine Slice vous permet de redimensionner l'image et montre à quoi ressemblera l'image finale, après sa mise à l'échelle à l'aide de la technique Nine Slice. Ce sprite de prévisualisation peut également être pivoté.
    La section Nine Slice offre les options suivantes :
    
      Activer Nine Slice : Cette option détermine si la mise à l'échelle de Nine Slice est utilisée lorsque le sprite est mis à l'échelle. Lorsqu'elle est activée, la mise à l'échelle Nine Slice sera utilisée pour le sprite (et toute instance d'objet utilisant ce sprite) placé dans une Séquence
        ou un calque de pièce, et les sprites mis à l'échelle en utilisant draw_sprite_ext() et d'autres fonctions similaires.
        
        REMARQUE: Nine Slicing ne fonctionnera pas avec les fonctions qui ne dessinent qu'une partie du sprite ou le déforment, telles que draw_sprite_part() et draw_sprite_pos().
      
      Guides : Cette section affiche le décalage de chaque guide sur son axe, et peut être utilisée pour modifier ces décalages. Ces guides peuvent également être déplacés dans la fenêtre Sprite Preview en les faisant simplement glisser avec la souris.
        
       REMARQUE :Les guides situés sur le même axe ne peuvent pas se croiser, et si vous en faites glisser un sur l'autre, le deuxième guide sera poussé.
        
         Le décalage de chaque guide est relatif à son bord correspondant. Par exemple, le guide gauche est décalé par rapport au bord gauche, le bord droit est décalé par rapport au bord droit, et le guide droit est décalé par rapport au bord droit.
        Le décalage de chaque guide est relatif au bord correspondant. Par exemple, le guide gauche est décalé par rapport au bord gauche, le bord droit est décalé par rapport au bord droit, et ainsi de suite.
         La couleur et l'alpha de chaque guide peuvent être modifiés en cliquant sur le bouton de couleur situé à côté de la position du guide.
        
      Mise en évidence: Cette option affecte la façon dont une tranche sélectionnée apparaît dans la fenêtre d'aperçu du sprite. "Inversé" met en évidence le sprite avec une superposition sauf pour la tranche sélectionnée, et "Superposition"  met en évidence uniquement la tranche sélectionnée avec une superposition.
         La couleur et l'alpha de la superposition peuvent être modifiés en cliquant sur le bouton coloré à côté du menu déroulant.
      Tranche sélectionnée : Cette option peut être utilisée pour sélectionner une tranche, en choisissant une parmi les tranches de bord (gauche, haut, droite, bas) et celle du centre. Une tranche peut également être sélectionnée par  en faisant un clic gauche sur celle-ci dans la fenêtre Sprite Preview, et en cliquant à nouveau dessus, vous la désélectionnez.
      Mode tuile : Cette option est utilisée conjointement avec l'option Selected Slice, pour contrôler la façon dont la tranche apparaît lorsque le sprite est mis à l'échelle. Vous pouvez appliquer l'un des modes de tuiles suivants à chaque tranche :
        
        
          Étirer: La tranche sera étirée pour remplir l'espace entre ses coins connectés.
          Répéter: La tranche sera répétée ou mise en mosaïque pour préserver les détails.
          Miroir: La tranche sera répétée par effet miroir.
          Répéter en blanc: la tranche n'apparaîtra qu'une seule fois, ce qui laissera une zone vide après elle.
          Cacher: La tranche n'apparaîtra pas du tout.
        
      
    
  
  Messages de diffusion
  
    Ce bouton ajoutera un message de diffusion à la timeline du sprite, ouvrant une boîte de dialogue où vous pouvez ajouter le message à diffuser. Le message sera ajouté à l'endroit où se trouve la tête de lecture dans la vue de l'image et consiste en une simple chaîne de caractères qui peut être récupérée dans l'événement de message de diffusion lorsqu'il est déclenché, puis utilisée.
    Une fois ajouté, le message s'affiche dans la vue cadre et vous pouvez cliquer sur le bouton droit de la souris  pour ouvrir un menu dans lequel vous pouvez supprimer le message ou le modifier. Pour plus d'informations sur les messages de diffusion, voir ici.
     
  
  Vitesse du cadre
  
    Dans cette section, vous pouvez définir la vitesse à laquelle les images de l'animation doivent être lues à partir du champ de saisie situé à gauche. Le réglage de la vitesse des images peut être basé sur "Imagespar seconde" ou"Images parimage de jeu",
      où un réglage de 30 "Images par seconde" affichera 30 images de l'animation en une seconde, tandis qu'un réglage de 30 "Images par image de jeu" essaiera d'afficher les 30 images en un seul pas de jeu.
      sont généralement fixées à 1 ou moins (par exemple, une vitesse de 0,5 pour "Frames per game frame" affichera une nouvelle image tous les deux pas de jeu).
    Il est important de noter que les paramètres de vitesse d'image n'affecteront pas seulement la lecture de l'animation dans la fenêtre d'aperçu, mais régiront également la façon dont le sprite est animé dans vos jeux. La vitesse que vous définissez ici affichera l'aperçu du sprite
      tel qu'il sera exécuté dans le jeu avec un multiplicateur de vitesse d'image de 1, mais cela peut être défini dans le code à l'aide de la variable image_speed variable
      ce qui signifie que le sprite peut fonctionner plus ou moins vite en fonction de ce qui est programmé. Ainsi, par exemple, si vous configurez le sprite pour qu'il utilise 10 "images par seconde" et que vous définissez le paramètre image_speed à 0,5, le jeu dessinera le sprite
      à la moitié de sa vitesse - 5 images par seconde. À l'inverse, si nous définissons le paramètre image_speed pour le même sprite à 2, dans le jeu, il sera dessiné animé deux fois plus vite - 20 images par seconde. Notez que la vitesse de l'image peut également être définie
      dans l'éditeur d'images.
     
  
  Origine du sprite
  
    La barre supérieure de l'éditeur de sprites contient les propriétés d'origine du sprite. Il s'agit du point du sprite qui correspond à sa position dans la room, c'est-à-dire que lorsque vous créez une instance à une position x/y particulière, l'origine du sprite est placée à cet endroit.
      l'origine du sprite est placée à cet endroit.
    Par défaut, l'origine est le coin supérieur gauche du sprite, mais il est souvent plus pratique d'utiliser le centre du sprite ou vous pouvez souhaiter qu'une autre position soit utilisée (comme pour un personnage de jeu de plateforme, vous pourriez vouloir le centre inférieur),
      Vous pouvez donc cliquer sur  sur le menu déroulant de l'origine et sélectionner l'une des valeurs par défaut. Vous pouvez également définir l'origine manuellement en cliquant sur  dans l'image de prévisualisation du sprite, ce qui déplacera la croix du marqueur d'origine vers le point sur lequel vous avez cliqué, ou en saisissant différentes valeurs pour x et y dans les cases correspondantes. Notez que vous pouvez même définir une origine en dehors de la zone du sprite en utilisant des nombres négatifs (pour la gauche et le haut) ou en entrant des valeurs différentes pour x et y dans les champs correspondants.
      (pour la gauche et le haut) ou des nombres positifs plus grands que la largeur et la hauteur du sprite (pour la droite et le bas), ce qui peut être très utile lorsque vous traitez des objets qui doivent dessiner des sprites composites.
     
  
  Contrôles du zoom
  
    En haut à droite de la fenêtre de prévisualisation, vous avez les contrôles de zoom. Ces boutons contrôlent le niveau de zoom actuel du sprite de l'aperçu. Vous pouvez effectuer un zoom avant ou arrière et cliquer sur le bouton  pour réinitialiser l'aperçu à 1:1 avec le sprite en cours d'édition. Vous pouvez également cliquer sur le bouton Window Fit  pour que l'aperçu complet du sprite s'adapte à la fenêtre actuelle de l'éditeur (ce qui entraînera un zoom sur le sprite).
      fenêtre actuelle de l'éditeur (le zoom avant/arrière sera effectué en fonction de la taille de la fenêtre). Notez que vous pouvez effectuer un zoom avant et arrière à l'aide des boutons  /  et de la molette de la souris , et que si vous appuyez sur  /  + , l'aperçu sera réglé sur 1:1 avec l'acte.
      l'aperçu à 1:1 avec la taille actuelle du sprite.
     
  
  Prévisualisation
  
    La fenêtre de prévisualisation du sprite montre le sprite tel qu'il apparaîtra dans le jeu, et peut être agrandie ou réduite en utilisant la molette de la souris , et faire un panoramique en utilisant le bouton central de la souris et en faisant glisser la souris.
      bouton central de la souris  et en faisant glisser la souris, ou encore en utilisant la combinaison  +  et en faisant glisser la souris. Vous pouvez utiliser les commandes de cadre (expliquées ci-dessous) pour modifier l'affichage de l'image d'aperçu.
    Cette fenêtre affichera également une "croix" qui marque l'origine du sprite (voir la section Origine du Sprite ci-dessus pour plus de détails), et elle peut également afficher le masque de collision si cette option est en cours d'édition (voir la section Masque de collision, ci-dessus).
      la section Masque de collision, ci-dessus).
     
  
  Commandes de lecture
  
    Les commandes de lecture permettent de lire dans la fenêtre de prévisualisation l'animation des images, le bouton play  démarrant/arrêtant l'animation.
      et le bouton Loop  est utilisé pour définir si le sprite tourne en boucle  (revient à l'image 1 lorsque la dernière image est atteinte) ou en ping-pong  (revient en arrière dans les images lorsque la dernière image est atteinte).
    Notez que l'option loop/ping-pong n'affectera pas la façon dont le sprite est affiché dans le jeu, donc la définition de ces options dans le sprite ne changera pas la façon dont il sera affiché lorsque le jeu sera compilé et exécuté. Ceci est également vrai pour les points de boucle
      qui peuvent être définis dans le Frame View (voir ci-dessous pour plus d'informations) - ils sont uniquement visibles dans l'éditeur de sprite et conçus pour vous aider à tester vos animations, mais n'auront aucun effet sur la façon dont l'animation du sprite est affichée dans vos jeux.
      dans vos jeux.
    Une partie supplémentaire des contrôles de l'image est l'affichage de l'image actuelle et l'entrée un peu plus loin sur la gauche. La case indique le nombre total d'images de l'animation du sprite ainsi que l'image actuelle affichée. Vous pouvez changer
      Vous pouvez changer l'image actuelle à tout moment en cliquant sur la zone de saisie et en tapant le numéro de l'image que vous souhaitez afficher.
    IMPORTANT ! Les images sont numérotées de 1 à l'image maximale, mais dans votre code de jeu, les images seront numérotées de 0 à l'image maximale - 1.
  
  Cadres
  
    Cette partie de l'éditeur de sprites montre chacune des différentes images qui composent un sprite unique le long d'une ligne de temps de séquence. Vous pouvez cliquer sur  sur n'importe quelle image et la faire glisser vers la gauche ou la droite pour modifier l'ordre dans lequel elles seront animées, et vous pouvez également double-cliquer sur  sur n'importe quelle image pour lancer l'éditeur d'images et les modifier.
      l'éditeur d'images et les modifier. Vous pouvez couper, copier et coller des images à l'aide des raccourcis clavier standard ou en utilisant les options de menu du bouton droit de la souris . Vous pouvez également sélectionner plusieurs images sur lesquelles opérer en utilisant  /  + .
    Le menu du bouton droit de la souris comporte les options suivantes :
    
    
      Ajouter un cadre - Ajoute un nouveau cadre à l'animation à la fin.
      Insérer un cadre - Insère un nouveau cadre dans l'animation après le cadre actuellement sélectionné.
      Couper / Copier / Coller - Couper, copier et coller une ou plusieurs images.
      Supprimer les images sélectionnées - Supprime la ou les images actuellement sélectionnées.
    
    Outre l'option indiquée ci-dessus pour étirer un cadre, vous pouvez également positionner la souris sur le bord d'un cadre, puis, lorsque le curseur se transforme en double flèche, il suffit de cliquer sur  et de faire glisser la souris pour redimensionner le cadre, ce qui prend plus de temps :
    Une image étirée mettra plus de temps à s'afficher, comme si vous aviez dupliqué la même image plusieurs fois. 
    Enfin, vous pouvez également zoomer sur la ligne de temps du cadre en utilisant les "poignées" de chaque côté de la vue du cadre comme le montre l'image ci-dessous :
    
  
   
   
  
    
      
        Retour : Les éditeurs d'actifs
        Suivant : Jeux de carreaux
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

