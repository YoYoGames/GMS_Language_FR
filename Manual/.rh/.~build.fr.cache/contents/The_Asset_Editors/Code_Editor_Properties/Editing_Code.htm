
  
  Code d'édition
  Lorsque vous commencez à utiliser l'éditeur de script, il vous suffit de taper le code que vous voulez avoir pour l'actif du script ou pour l'événement, en suivant la syntaxe GML correcte . Pendant que vous faites cela,
    vous serez aidé par la fenêtre de complétion automatique:
  Cette fenêtre apparaîtra pendant que vous écrivez votre code (normalement après une légère pause, mais cela peut être réglé dans les Préférences)
    et vous propose une sélection de réponses "best-fit" par ordre alphabétique.
  Lorsque vous utilisez l'éditeur de code, vous pouvez cliquer sur  et faire glisser la souris pour sélectionner une ligne de code ou maintenir la touche  enfoncée, puis cliquer sur  et faire glisser pour sélectionner des colonnes de code. Tout ce qui est sélectionné de cette manière peut ensuite être copié, coupé et collé en utilisant les raccourcis clavier standard suivants
    les raccourcis clavier standard de  /  + " C",  /  + "X" et  /  + "V".
  Il convient de noter que vous pouvez commenter votre code de différentes manières. Commenter votre code est très important pour maintenir la productivité, car cela permet de garder les choses claires et de séparer les sections de code de manière à ce qu'il soit évident que chaque partie fait et pourquoi elle est là.
    partie fait et pourquoi elle est là. Cela signifie également que si vous travaillez en équipe, vous pouvez laisser des notes aux autres membres et qu'ils sauront exactement ce que vous avez fait ou à quoi sert une section spécifique du code. Même si vous êtes un développeur solo,
    il est important de laisser des commentaires dans votre code, surtout si vous devez quitter le projet et y revenir plus tard.
  Commenter votre code est simple, puisqu'il suffit d'utiliser "//" avant toute ligne de texte ou de commenter des paragraphes entiers en utilisant "/* text here */". Il existe même deux raccourcis clavier
    Il existe même deux raccourcis clavier pour commenter et dé-commenter les lignes de code sélectionnées :  /  + "K" pour commenter, et  /  +  + "K" pour dé-commenter. L'image suivante illustre du code écrit en utilisant ces deux méthodes
    ainsi que des commentaires JS Doc (expliqués plus en détail ci-dessous) :
  Des commentaires de style JSDoc peuvent également être ajoutés aux scripts pour définir les propriétés des fonctions qu'ils contiennent.
    les fonctions dans votre code, elles s'affichent dans l'auto-complétion avec leurs arguments et d'autres détails. Pour en savoir plus à ce sujet, consultez la section Commentaires de script JSDoc.
  Par défaut, tout code écrit comporte des icônes de pliage de code à côté de chaque ensemble d'accolades correspondantes {}. Ces icônes se présentent sous la forme d'un petit plus + ou d'un petit moins -. En cliquant sur ces icônes, le code sera "replié" à l'intérieur des accolades correspondantes de manière à occuper moins d'espace visuel.
  Vous pouvez également définir manuellement des régions de pliage du code en utilisant les balises spéciales #region pour marquer une section du code. Cela fonctionne de la manière suivante : vous ajoutez une balise #region (ainsi que tout texte de commentaire) en haut d'une section de code.
    une section de code, puis ajoutez une balise #endregion correspondante au bas de la section, ce qui vous permet de "replier" le code, c'est-à-dire de le cacher afin de réduire le nombre de lignes de code visibles dans l'éditeur à un moment donné.
    à un moment donné :
  Le code réel ressemble à quelque chose comme ceci :
  #region Ceci est une région d'exemple
     width = sprite_get_width(sprite) ; height = sprite_get_height(sprite) ; xoff = sprite_get_xoffset(sprite) ; yoff = sprite_get_yoffset(sprite) ;
     #endregion Commentaire supplémentaire ici si nécessaire
  Comme vous l'avez peut-être remarqué, certaines parties du texte du script sont colorées. L'éditeur de script "connaît" les objets existants, les variables et fonctions intégrées, etc... et les code en couleur en conséquence. Le codage couleur aide beaucoup à éviter les erreurs
    car vous pouvez voir immédiatement si vous avez mal orthographié un nom ou utilisé un mot-clé comme variable, ou si vous avez une erreur de syntaxe. Toutefois, si vous n'aimez pas le codage couleur, vous pouvez l'activer ou le désactiver dans les Préférences (vous pouvez également utiliser F10 pour l'activer ou le désactiver dans l'éditeur) et personnaliser les couleurs utilisées.
  Vous pouvez également cliquer avec le bouton droit de la souris sur  n'importe où dans l'éditeur pour ouvrir le menu suivant :
  Outre les fonctions habituelles de couper, copier et coller des lignes de code, vous avez également la possibilité de commenter ou de dé-commenter le texte sélectionné.
    le texte sélectionné, d'ajouter ou de supprimer des retraits, ainsi que de diviser la fenêtre de code en 1, 2 ou 3 volets séparés (notez que les options relatives à #regions ne seront pas disponibles si vous n'en avez pas défini dans le code en cours d'édition).
  La dernière option de division en volets divise la fenêtre actuelle en différentes parties où vous pouvez faire glisser un script ou un événement et le faire apparaître à côté des autres pour le comparer et le modifier.
  Ceci est exceptionnellement utile pour comparer deux scripts ou pour visualiser des scripts connectés en même temps, sans avoir besoin d'une autre fenêtre
    ou de devoir passer constamment d'un onglet à l'autre.
  Les autres options de ce menu permettent de basculer un point d'arrêt à utiliser avec le débogueur, et de convertir le code GML en DnD™ou vice versa. Notez que si vous convertissez le code en DnD™, il ne créera pas d'actions individuelles pour chaque ligne de code.
    actions individuelles pour chaque ligne de code, mais plutôt utiliser une seule action de code pour contenir tout ce qui était précédemment dans l'événement ou le script.
   
   
   
  
    
      
        Retour : L'éditeur de script
        Suivant : Commentaires sur le JSDoc
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

