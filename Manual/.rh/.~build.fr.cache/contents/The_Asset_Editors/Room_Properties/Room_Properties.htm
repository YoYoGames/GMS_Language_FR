
  
  Propriétés des pièces
  La section des propriétés de la pièce est l'endroit où vous pouvez définir la bascule d'héritage pour les paramètres, ainsi que le nom de la pièce et si elle est persistante.
    est persistante ou non. Normalement, lorsque vous quittez une pièce et que vous y retournez plus tard, cette pièce est réinitialisée à ses paramètres initiaux. Cela convient généralement à la plupart des jeux, mais ce n'est peut-être pas ce que vous voulez, par exemple, dans un RPG ou tout autre jeu non linéaire, où vous voulez vous déplacer dans la pièce.
    jeu non linéaire, où vous voulez aller et venir entre les pièces et faire en sorte qu'elles soient dans l'état où vous les avez laissées la dernière fois. En cochant la case " Persistant" , vous obtiendrez exactement cela. L'état de la pièce sera mémorisé et lorsque vous y retournerez plus tard, il sera exactement le même.
    La pièce sera mémorisée et lorsque vous y retournerez plus tard, elle sera exactement dans l'état où vous l'avez laissée, et ne reviendra à l'état initial que lorsque vous redémarrerez le jeu. Notez qu'il y a une exception à cette règle : si vous avez marqué certains objets comme étant persistants, les instances de ces objets ne resteront pas dans la pièce, mais dans le jeu.
   ne resteront pas dans la pièce mais se déplaceront dans la pièce suivante.
  Ensuite, vous avez la possibilité d'effacer le tampon d'affichage. Cette option, lorsqu'elle est cochée, remplit le tampon d'affichage avec une couleur. Si vous savez que les vues vont couvrir tout le
    Si vous savez que les vues vont couvrir tout l'écran à tout moment ou qu'un arrière-plan plein écran est dessiné, vous pouvez décocher cette option (ce qui évite un redessin et permet d'optimiser votre jeu), mais si vous avez des vues qui se chevauchent et qui, une fois à l'écran, laissent des espaces ouverts,
    ou si votre arrière-plan est transparent, vous devez cocher cette case pour que les zones où il n'y a pas de vue soient remplies avec la couleur de dessin de votre choix. Actuellement, cette couleur ne peut être définie que par le biais du code en utilisant window_set_colour().
  REMARQUE: si vous utilisez la correction automatique du rapport hauteur/largeur (définie dans les Options du jeu), vous devez toujours cocher cette case, sinon vous risquez d'obtenir des effets bizarres sur la "boîte aux lettres" de votre jeu.
    "boîte aux lettres" dans laquelle votre jeu est dessiné. Si vous n'utilisez pas cette option, vous pouvez la décocher et obtenir une petite amélioration des performances de vos jeux (particulièrement visible sur Android et les autres plateformes mobiles).
  Une pièce doit avoir une taille, qui est définie par les valeurs que vous saisissez pour sa largeur et sa hauteur en pixels. Une fois que vous avez défini ces valeurs, vous pouvez ajouter le code de création, si nécessaire. Le code de création est ajouté à partir du bouton
    en bas de l'écran (ainsi que le bouton d'héritage qui permet de dire si la pièce doit hériter de son code de création ou non), et si vous cliquez dessus, vous ouvrirez un éditeur de code ou de DnD™. Cet éditeur vous permet de saisir les fonctions/actions et le code qui seront
    être exécuté au début de la room, après l'événement de création de toutes les instances mais avant leur événement de début de room (pour plus d'informations sur l'ordre des événements, veuillez voir ici). Ce code sera exécuté chaque
    chaque fois que vous entrez dans la salle, à moins que la salle ne soit marquée comme persistante, auquel cas il ne sera exécuté qu'une seule fois lors de la première entrée dans la salle, mais pas lors des visites ultérieures de la salle.
  Le dernier bouton des propriétés de la pièce vous permet d'ouvrir la fenêtre Ordre de création de l'instance:
  Cette fenêtre liste toutes les instances de la salle dans l'ordre où elles seront créées (de haut en bas). Si vous souhaitez
    Si vous souhaitez qu'une instance spécifique soit créée avant une autre, vous pouvez simplement cliquer sur  et la faire glisser vers la position souhaitée. Notez que les instances seront créées dans l'ordre
    ordre donné de haut en bas de la liste.
   
   
   
  Caméras et miradors
  Le prochain ensemble de propriétés que vous pouvez définir pour la pièce est celui qui concerne la caméra et les fenêtres de la pièce. Les vues de caméra offrent un mécanisme permettant de dessiner différentes parties de votre pièce à différents endroits de l'écran,
    ou de dessiner une partie seulement de votre pièce pour couvrir tout l'écran. Par exemple, dans la plupart des jeux de plates-formes, la caméra suit le personnage principal, car si vous pouviez voir tout le niveau à l'écran, votre personnage serait trop petit pour être vu et le joueur n'aurait aucune surprise.
    et le joueur n'aurait aucune surprise. Les vues caméra peuvent également être utilisées dans les jeux multi-joueurs ou les jeux coopératifs, car elles permettent de créer une configuration d'écran partagé dans laquelle une partie de l'écran est occupée par un joueur et une autre partie par l'autre joueur.
    joueur. Tout cela peut être facilement réalisé dans GameMaker Studio 2 à l'aide de vues de caméra.
  En haut des propriétés des vues, vous pouvez activer ou désactiver l'héritage des vues, puis il y a une case intitulée Enable Viewports.
    Cette case doit être cochée avant qu'une des vues de la caméra puisse être active dans votre jeu.
  REMARQUE: vous pouvez activer ou désactiver l'héritage pour les trois paramètres principaux du port de vue, puis activer ou désactiver l'héritage pour chaque vue de caméra individuelle.
  La case à cocher suivante est celle qui dit Clear Viewport Background, qui efface la surface de l'application avec la couleur de la fenêtre.
    que vous dessinez pour couvrir toute la surface.
  Une vue de caméra est définie par deux ensembles de valeurs différents, la vue de caméra elle-même et le port de l'écran où cette vue doit être dessinée. Cela peut parfois prêter à confusion, alors expliquons un peu cela avant d'expliquer comment nous définissons chacun d'eux :
  
    La caméra: Un point dans la pièce qui sera utilisé pour définir la façon dont la pièce est affichée à l'écran (il s'agit d'un point abstrait dans l'éditeur de pièce et sa position est définie automatiquement en fonction des paramètres de vue et de port de vue).
    La vue: Ce que la caméra voit, en fonction de la position, de la projection et de la rotation de la caméra.
    Le port de vue: la zone de l'écran physique où la vue de la caméra sera affichée.
  
  Donc, par exemple, cela signifie que vous pouvez avoir une vue de caméra de 640x480 dans votre pièce, puis définir le port sur 320x240, ce qui affichera la vue à l'échelle du port sur l'écran.
    Vous pouvez également faire la même chose et définir la vue sur une valeur plus petite et le port sur une valeur plus grande, ce qui permet à l'image de s'adapter à la taille du port et d'être affichée à l'écran plus grande qu'elle ne l'est. De cette façon, vous pouvez
    maintenir une taille d'écran (port) tout en modifiant la vue de la caméra pour afficher plus ou moins de la pièce dans la même zone de l'écran.
  La vue de la caméra est toujours définie comme une zone rectangulaire dans la pièce, où vous spécifiez la position du coin supérieur gauche, la largeur et la hauteur de cette zone. Vous devez ensuite spécifier l'endroit où cette zone est affichée dans la fenêtre à l'écran en définissant
    le port d'affichage, où vous spécifiez à nouveau la position du coin supérieur gauche et la taille (notez que toute valeur autre que 0,0 pour le coin supérieur gauche peut donner des résultats étranges). Vous pouvez avoir plus d'un port et ils peuvent se chevaucher.
    dans ce cas, ils sont dessinés dans l'ordre indiqué, l'un au-dessus de l'autre.
  Veuillez noter que la zone globale de l'écran est toujours définie comme une zone rectangulaire, donc vos ports, même lorsqu'ils sont décalés, formeront un rectangle, avec tous les espaces vides étant remplis par la couleur de la fenêtre du tampon d'affichage, ce qui signifie que dans ces circonstances vous devriez toujours avoir la case "Clear Display Buffer" cochée ou sinon vous obtiendrez des artefacts bizarres dessinés dans les espaces entre les ports. L'image ci-dessous illustre cela, où il y a
    deux ports de vue décalés sont visibles, mais ils forment une fenêtre carrée, et "en dessous", des lignes sont dessinées dans le tampon d'affichage :
  Les camérasdisposent également de l'option de suivi d'objet . Cette option est utilisée lorsque vous souhaitez que la caméra "suive" (c'est-à-dire que la vue reste centrée sur un certain objet).
    la vue sur) un certain objet. Pour ce faire, vous devez cliquer sur  sur l'icône du menu et sélectionner un objet dans la liste qui s'affiche (s'il y a plusieurs instances de cet objet dans la pièce, seule une d'entre elles est suivie par la caméra).
    cet objet dans la pièce, seule l'une d'entre elles sera suivie par la caméra).
  Le comportement normal d'une caméra est de ne se déplacer que lorsque l'instance suivie s'approche trop près d'une zone "tampon" qui constitue une frontière invisible autour du bord de la vue. Vous pouvez définir cette zone à l'aide des valeurs Horizontal Border et Vertical Border.
    Par exemple, si vous fixez ces valeurs à 64, la vue ne commencera à se déplacer et à suivre le personnage que lorsqu'il sera à 64 pixels du bord de la vue.
  Enfin, vous pouvez indiquer la vitesse  horizontale et verticale à laquelle la caméra se déplace lorsque le personnage a atteint la zone tampon, et ceci a une valeur par défaut de -1. Cette valeur par défaut est essentiellement "instantanée"
    et signifie que dès que l'instance à suivre se trouve en dehors de la zone tampon de la frontière horizontale ou de la frontière verticale, la vue passera à sa position actuelle. Ce n'est pas toujours ce que l'on souhaite et vous pouvez donc définir la vitesse de défilement vertical et horizontal de la caméra en définissant les valeurs de la vitesse de défilement.
    de la caméra en donnant à ces valeurs une valeur différente de -1. Notez qu'avec une valeur de 0, la vue ne bougera pas du tout, et que toute autre valeur positive représente le nombre de pixels qu'elle déplacera dans une image.
    la vue suivra l'objet horizontalement à raison de 5 pixels par image.
   
   
  Physique des salles
  Avant de pouvoir utiliser les fonctions physiques intégrées dans vos jeux, vous devez indiquer à GameMaker Studio 2 que la pièce est une pièce physique. Pour ce faire, vous devez cocher l'option Activer la physique en haut de la section Physique de la pièce 
    (vous pouvez également basculer l'héritage de cette section indépendamment du reste des paramètres de la pièce). Une fois que vous avez fait cela, vous pouvez alors continuer à configurer les propriétés du monde physique, qui sont des propriétés de base que vous devez avoir prédéfinies
    avant que votre salle ne permette aux instances physiques de fonctionner en tant que telles. Pour un contrôle plus précis du monde, vous pouvez utiliser du code (voir les fonctions physiques pour plus d'informations).
  La prochaine chose à faire est de définir la gravité du monde. La force et la direction de celle-ci sont calculées
    comme un vecteur de la position x/y que vous définissez autour d'un point (0, 0). Ainsi, avec un x de 0 et un y de 1, la gravité sera dirigée vers le bas avec une force de 1 mètre par seconde.
    une explication plus détaillée, voir - The Physics World).
  Enfin, vous devez définir le rapport entre les pixels et les mètres pour que GameMaker Studio 2 l'utilise comme base pour tous ses calculs physiques. En effet, les fonctions physiques travaillent sur des mesures du monde réel, c'est pourquoi nous devons définir cette valeur,
    Vous devrez ajuster ce paramètre jusqu'à ce que la taille moyenne des pixels des objets que vous utilisez se traduise approximativement en objets physiques simulés de taille appropriée.
  Il convient de noter que l'activation de la physique dans une room signifie que toutes les instances de la room doivent utiliser les fonctions et variables de la physique pour se déplacer. En fait, vous avez le mouvement "traditionnel", où vous pouvez définir la position X/Y d'une instance ou sa vitesse et sa direction.
    ou définir sa vitesse et sa direction, et puis vous avez le mouvement "physique", qui nécessite des forces et des impulsions physiques pour se déplacer. Ces systèmes sont mutuellement exclusifs, et vous ne pouvez pas déplacer une instance physique en utilisant des fonctions non physiques.
    et vous ne pouvez pas déplacer une instance non-physique en utilisant les fonctions physiques.
   
   
   
  
    
      
        Retour : L'éditeur de pièces
        Suivant : Héritage des pièces
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

