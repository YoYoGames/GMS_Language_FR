
  
  L'éditeur d'extensions
  Un paquet d'extension peut être utilisé pour ajouter un certain nombre de fonctions et de constantessupplémentaires au langage GameMaker(GML), ou comme moyen de transférer facilement des ressources de jeu ou même des projets entiers entre personnes.
    de transférer facilement des ressources de jeu ou même des projets entiers entre personnes. Si l'extension vise à ajouter des fonctionnalités supplémentaires, les fonctions utilisées peuvent lier votre jeu à des kits SDKexternes ou à du code source écrit dans d'autres langages (comme Java pour Android, par exemple), ainsi qu'au langage GML natif.
  . Normalement, les extensions tierces proviennent de la section GameMaker Marché et celles auxquelles vous avez souscrit
    seront alors répertoriées dans la fenêtre Bibliothèque duMarché et pourront être installées à partir de là. Si vous n'avez pas obtenu votre paquet d'extension sur le Marché, vous pouvez tout de même l'ajouter à un projet en procédant à nouveau comme suit
    en cliquant avec le bouton droit de la souris sur  n'importe où dans le navigateur d'actifs et en sélectionnant Ajouter existant, puis en naviguant jusqu'à l'emplacement de l'extension pour la sélectionner.
    de l'extension pour la sélectionner.
  Si vous disposez d'un site *.GMEZ créé avec une version antérieure de GameMaker Studio, vous pouvez les ajouter en sélectionnant le bouton droit de la souris , option de menu Import Extension.
  REMARQUE: les extensions du format précédent *.GEX ne sont plus prises en charge et ne peuvent pas être importées dans les projets GameMaker Studio 2.
  Une fois que vous avez ajouté une extension à l'Asset Browser, vous devez lui donner un nom et un numéro de version et également définir les plates-formes vers lesquelles vous souhaitez l'exporter. En décochant les plates-formes sélectionnées, vous pouvez indiquer à GameMaker Studio 2 de ne pas exporter l'extension comme partie intégrante de l'exécutable pour ces plates-formes.
    comme partie intégrante de l'exécutable pour ces plates-formes. Vous devez également vous assurer que les propriétés de l'extension correspondent à la ou aux plates-formes cibles, et modifier les cibles d'exportation des fichiers d'extension en fonction des éléments suivants :
  
    Toutes les cibles: Extensions GML. Il s'agit d'extensions réalisées à l'aide du langage GameMaker(GML) et compatibles avec toutes les plateformes cibles.
    Windows(Standard, UWP, XBoxOne): Vous pouvez utiliser les fichiers DLL (Dynamic Link Libraries) de Windows. Veuillez noter que si vous avez coché l'option "Use x64 Windows Runtime " dans les options de jeu de Windows ,
      alors toutes les DLLs du projet doivent être compatibles avec 64 bits. Les DLL 32bit ne fonctionneront pas avec l'exécutable 64bit.
    macOS: La cible macOS peut utiliser les fichiers standard DyLib pour les extensions.
    Ubuntu (Linux): Pour la cible Ubuntu, vous devez vous assurer que votre extension utilise les fichiers SO.
    HTML5: Ces plateformes peuvent utiliser les extensions de JavaScript.
    Android: Cette plateforme nécessite une extension à écrire en Java ou un SDK du Framework Android.
    iOS /  tvOS: Les extensions pour cette plateforme sont écrites en Objective C et nécessitent un fichier *.mm et un fichier *.h, ou si vous utilisez un Framework, un fichier natif pré-compilé *.a.
    PlayStation: Pour la PlayStation 3 ou 4, vos extensions doivent être des fichiers PRX, chaque cible nécessitant un PRX différent pour se conformer aux spécifications de la cible (PS3 ou PS4).
      Si vous travaillez sur une PSVita, l'extension doit être SUPRX à la place.
  
  REMARQUE: certaines extensions doivent respecter des conventions de dénomination spécifiques pour que GameMaker puisse identifier correctement la plate-forme et l'architecture du processeur pour lesquelles elles sont conçues. Pour plus d'informations, consultez la section sur la création d'extensions.
  Comme une seule extension peut avoir plusieurs fichiers associés, il est possible de créer une seule extension pour plusieurs plates-formes, auquel cas vous devez spécifier toutes les plates-formes compatibles dans l'éditeur d'extension principal (c'est-à-dire cocher la case
    à côté d'elles), puis dans les propriétés de chaque fichier pour chaque partie de l'extension, définissez la plate-forme vers laquelle ces fichiers doivent être exportés.
  Pour modifier la plate-forme cible d'un fichier d'extension ou d'un espace réservé spécifique, vous devez d'abord ouvrir les propriétés de l'extension (double-cliquez sur  l'extension dans l'Asset Browser ou
    utilisez  et sélectionnez Open Properties), puis, une fois dans les propriétés de l'extension, sélectionnez à droite le fichier ressource que vous souhaitez modifier :
  
  REMARQUE: Si vous exportez vers la cible macOS ou Ubuntu, vous pouvez définir l'option "Uncompress as zip file" pour préserver les autorisations de fichier pour l'extension.
  Une fois que vous avez installé votre extension, vous pouvez utiliser les fonctions et les constantes de celle-ci comme vous le feriez avec les fonctions et les constantes intégrées utilisées dans le langage GameMaker. Si votre jeu est multiplateforme (par exemple, il est conçu pour fonctionner à la fois sur des cibles Windows et Android), vous devez utiliser les constantes de système d'exploitation et les constantes de système d'exploitation.
   Windows et Android ), vous devez utiliser les constantes et fonctions du système d'exploitation pour vérifier la plate-forme avant d'appeler les fonctions spécifiques à l'extension afin d'éviter tout problème,
    par exemple :
  switch(os_type) {
     case os_android : call_android_extension_function(x, y, z) ; break ;
     case os_windows : call_windows_extension_function(x, y, z) ; break ;
     }
  
  Notez que pour les différentes plates-formes, vos extensions peuvent partager des noms de fonction, donc si vous avez une extension avec des fichiers distincts pour (par exemple) faire apparaître un message pour Windows et pour Android, les deux fichiers d'extension peuvent partager le même nom de fonction tant que
    qu'ils soient tous deux configurés pour exporter uniquement vers leurs plateformes respectives.
  Si vous souhaitez créer vos propres extensions, vous trouverez les informations de base nécessaires dans les pages suivantes :
  
    Créer une extension
    ExtensionsAndroid 
    ExtensionsiOS / tvOS 
  
   
   
  Extensions tierces deYoYo Games 
  Les anciennes versions de GameMaker intégraient de nombreuses fonctionnalités tierces, mais cela s'avérait inefficace et difficile à maintenir, car si une fonctionnalité spécifique était modifiée par un tiers, l'ensemble de l'IDE GameMaker et le système d'exploitation de GameMaker devaient être mis à jour. Runtime devaient être mis à jour. Les versions actuelles ont donc adopté l'utilisation de paquets d'extensions pour ajouter le support de tiers à vos jeux. Cela signifie que vous pouvez ajouter
    uniquement les fonctions supplémentaires dont vous avez besoin et que vous pouvez même adapter et modifier pour répondre à vos besoins spécifiques.
  La plupart de ces extensions seront téléchargées et installées pour vous lorsque vous sélectionnez une option de jeu spécifique (comme les publicités Facebook ou Google Mobile, par exemple), mais vous pouvez trouver plus d'informations à leur sujet à partir de
    la section appropriée pour chaque plateforme sur la base de connaissances de YoYo Games:
  
    Plateformes et configuration deGameMaker Studio 2 
  
  Vous pouvez trouver les extensions elles-mêmes sur la page suivante du Marché:
  
    Actifs du marché deYoYo Games 
  
  Notez que ces extensions sont accompagnées d'une démo et d'un fichier d'aide (au format *.pdf ) qui explique comment les utiliser, et que leurs fonctions ne sont donc pas couvertes par le manuel.
   
   
   
  
    
      
        Retour : Les éditeurs d'actifs
        Suivant : Polices de caractères
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

