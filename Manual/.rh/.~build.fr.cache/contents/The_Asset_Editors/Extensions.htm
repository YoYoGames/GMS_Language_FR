 L'éditeur d'extensions Un package d'extension peut être utilisé pour ajouter un certain nombre de fonctions supplémentaires et constante de la GameMaker Language ( GML ), ou comme un moyen d'actifs de jeu de transfert ou même des projets entiers facilement entre les personnes. Si l'extension est d'ajouter des fonctionnalités supplémentaires, les fonctions utilisées peuvent lier votre jeu externe SDK s ou code source écrit dans d' autres langues (comme Java pour Android, par exemple), ainsi que natif GML. Normalement, les extensions tierces GameMaker Marketplace et celles auxquelles vous vous êtes abonné seront alors répertoriées dans la fenêtre de la bibliothèque Marketplace et pourront être installées à partir de là. Si vous n'avez pas obtenu votre package d'extension sur la place de Marketplace, vous pouvez toujours l'ajouter à un projet en cliquant à nouveau avec le bouton droit de la souris n'importe où dans le navigateur de ressources et ceci en sélectionnant Ajouter existant, puis en naviguant jusqu'à l'emplacement de l'extension pour la sélectionner. Si tu as un *.GMEZ créé avec une version précédente de GameMaker Studio vous pouvez les ajouter en sélectionnant le bouton droit de la souris option de menu Importer l'extension. REMARQUE: format hérité *.GEX les extensions ne sont plus prises en charge et ne peuvent pas être importées dans des projets GameMaker Studio 2 Une fois que vous avez ajouté une extension au navigateur d'actifs, vous devez lui donner un nom et un numéro de version et également définir les plates-formes vers lesquelles vous souhaitez l'exporter. En décochant les plates-formes sélectionnées, vous pouvez indiquer à GameMaker Studio 2 ne pas exporter l'extension dans le cadre de l'exécutable de ces plates-formes. Vous devez également vous assurer que les propriétés de l'extension correspondent aux plates-formes cibles et modifier les cibles d'exportation pour les fichiers d'extension en fonction des éléments suivants: Toutes les cibles: extensions GML Ce sont des extensions faites en utilisant le GameMaker Language ( GML ) et sont compatibles avec toutes les plates-formes cibles. Windows (Standard, UWP, XBoxOne): vous pouvez utiliser Windows DLL fichiers (bibliothèques de liens dynamiques). Veuillez noter que si vous avez coché "Utiliser Windows Runtime x64" dans les options de jeu Windows, toutes les DLL du projet doivent être compatibles 64 bits. Les DLL 32 bits ne fonctionneront pas avec l'exécutable 64 bits. macOS: la macOS peut utiliser le standard DyLib fichiers pour les extensions. Ubuntu ( Linux ): pour la Ubuntu vous devez vous assurer que votre extension utilise SO des dossiers. HTML5: ces plates-formes peuvent utiliser JavaScript extensions. Android: cette plate-forme nécessite une extension pour être écrite Java ou un Android Framework SDK. iOS / tvOS: les extensions pour cette plate-forme sont écrites en Objective C et nécessitent un *.mm et un *.h fichier, ou si vous utilisez des Frameworks, un fichier pré-compilé *.a fichier natif. PlayStation: pour PlayStation 3 ou 4, vos extensions doivent être PRX fichiers, chaque cible nécessitant un PRX pour se conformer aux spécifications de la cible (PS3 ou PS4). Si vous travaillez sur une PSVita, l'extension doit être SUPRX au lieu. REMARQUE: certaines extensions doivent suivre des conventions de dénomination spécifiques pour que GameMaker identifie correctement la plate-forme et l'architecture de processeur pour lesquelles elles sont conçues. Veuillez consulter la section sur la création d'extensions pour plus d'informations. Puisqu'une seule extension peut avoir plusieurs fichiers associés, il est possible de créer une seule extension pour plusieurs plates-formes, auquel cas vous souhaitez spécifier toutes les plates-formes compatibles dans l'éditeur d'extension principal (c'est-à-dire: cochez la case à côté d'elles) puis dans le propriétés de fichier individuelles pour chaque partie de l'extension, définissez la plate-forme vers laquelle ces fichiers doivent être exportés. Pour modifier la plate-forme cible pour un fichier d'extension ou un espace réservé spécifique, vous devez d'abord ouvrir les propriétés de l'extension (double-cliquez l'extension dans le navigateur de ressources ou utilisez et sélectionnez Ouvrir les propriétés ), puis une fois dans les propriétés de l'extension, sélectionnez le fichier de ressources à droite que vous souhaitez modifier: REMARQUE: Si vous exportez vers la macOS ou Ubuntu, vous pouvez définir l'option «Décompresser en tant que fichier zip» pour conserver les autorisations de fichier pour l'extension. Une fois que vous avez installé votre extension, vous pouvez utiliser les fonctions et les constantes correspondantes comme vous le feriez avec les fonctions et les constantes intégrées utilisées dans le GameMaker Language. Si votre jeu est multiplateforme (par exemple, il est conçu pour fonctionner à la fois sur des Windows et Android ), vous devez utiliser les constantes et les fonctions du système d'exploitation pour vérifier la plate-forme avant d'appeler des fonctions spécifiques à l'extension pour éviter les problèmes, par exemple:switch(os_type)     {
         case os_android:         call_android_extension_function(x, y, z);         break;
         case os_windows:         call_windows_extension_function(x, y, z);         break;
         }
   Notez que pour différentes plates-formes, vos extensions peuvent partager des noms de fonction, donc si vous avez une extension avec des fichiers distincts pour (par exemple) afficher un message pour Windows et pour Android, les deux fichiers d'extension peuvent partager le même nom de fonction tant qu'ils sont tous deux configurés pour exporter uniquement vers leurs plates-formes respectives. Si vous souhaitez créer vos extensions gagnées, vous pouvez trouver les informations de base requises dans les pages suivantes: Créer une extension Extensions Android Extensions iOS / tvOS Extensions YoYo Games Les versions GameMaker de GameMaker avaient beaucoup de fonctionnalités tierces intégrées, mais c'était inefficace et difficile à maintenir, car si une fonctionnalité spécifique était modifiée par le tiers, alors l'ensemble de l' IDE et du Runtime GameMaker devraient être mis à jour. Ainsi, les versions actuelles ont adopté l'utilisation de packages d'extensions pour ajouter un support tiers à vos jeux. Cela signifie que vous ne pouvez ajouter que les fonctions supplémentaires dont vous avez besoin et que vous pouvez même les adapter et les modifier en fonction de vos besoins spécifiques. La plupart de ces extensions seront téléchargées et installées pour vous lorsque vous sélectionnez une option de jeu spécifique (comme Facebook ou Google Mobile Ads, par exemple), mais vous pouvez trouver plus d'informations à leur sujet dans la section appropriée pour chaque plate-forme sur YoYo Games Knowledge. Base: Plates-formes et configuration GameMaker Studio 2 Vous pouvez trouver les extensions elles-mêmes sur la page Marketplace Actifs de la place de Marketplace YoYo Games Notez que ces extensions sont accompagnées d'une démo et d'un fichier d'aide (en *.pdf format) qui explique comment les utiliser et, à ce titre, leurs fonctions ne sont pas couvertes dans le manuel.  Retour: Les éditeurs d'actifs Suivant: Polices © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

