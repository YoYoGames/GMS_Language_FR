
  
  Appliquer des actions à d'autres instances
  La plupart des actions des bibliothèques DnD™ont une option permettant d'appliquer l'action de différentes manières. Cela s'appelle définir la portée de l'action et cela peut être l'une de plusieurs choses :
  En fait, ce que vous dites à GameMaker Studio 2, c'est quelle instance doit exécuter l'action. Le champ d'action par défaut
    est self, ce qui signifie qu'une fois l'objet créé en tant qu'instance dans la room, cette instance exécutera le code de l'action. Cependant, ce n'est pas toujours ce que vous souhaitez, et vous pouvez vouloir que certaines actions affectent d'autres, voire toutes les instances de la room.
    toutes les instances de la pièce. C'est là qu'intervient la modification de la portée de l'action.
  Les différents champs d'application des actions sont énumérés ci-dessous, mais il convient de noter que la modification du champ d'application d'une action de cette manière n'appliquera le nouveau champ d'application qu'à cette action et non aux actions suivantes de la chaîne. Si vous souhaitez appliquer
    un changement d'étendue d'action à plusieurs actions enchaînées, utilisez d'abord l'action Appliquer à....
   
  Self
  
    Il s'agit de la portée par défaut d'une action, qui indique simplement que l'action ne doit être appelée que par l'instance qui exécute le code.
     
  
  Autre
  
    La portée other a deux fonctions principales, et la valeur qu'elle renvoie dépend de l'endroit et de la manière dont vous l'utilisez. Dans l'événement de collision, other renvoie la valeur unique de l'ID de l'instance (une valeur unique utilisée pour distinguer les instances individuelles de chaque objet).
      (une valeur unique qui est utilisée pour distinguer les instances individuelles de chaque objet). Ainsi, vous pouvez, par exemple, créer une instance "balle" et avoir un événement de collision avec une instance "joueur" et, dans cet événement, utiliser le scope other pour supprimer les points de vie de l'objet "joueur", puis revenir au scope self pour détruire l'instance "balle".
    En dehors de l'événement de collision, le paramètre other se comportera comme s'il était réglé sur noone, sauf s'il est appelé à partir d'un bloc d'actions délimité. Ce que cela signifie, c'est que si vous changez la
      d'un groupe d'actions à un objet spécifique, alors pendant que ces actions sont appelées, le paramètre other renverra l'ID de l'instance qui a initialement appelé le groupe d'actions. Par exemple, vous pouvez exécuter
      une action Appliquer à... et ensuite, dans le bloc de code suivant, définir le scope à other pour exécuter une action sur l'instance qui exécute le bloc d'événements entier, et non sur l'instance qui est scannée dans le bloc d'événements.
      et non sur l'instance qui fait l'objet d'un champ d'application dans les blocs de code "Appliquer à". L'image ci-dessous donne un exemple :
    Dans l'image, nous vérifions la présence d'un appui sur la souris dans l'instance, et si un appui est détecté, nous changeons la portée en utilisant l'action Apply To.... Les deux blocs d'action suivants sont maintenant appelés par l'instance "obj_Player" (s'il y en a plusieurs, ils seront tous exécutés) et l'objet changera son sprite puis créera un objet à l'autre position,
      c'est-à-dire la position de l'objet qui exécute l'événement et qui a détecté la pression de la souris.
     
  
  Tous
  
    Lorsque vous définissez une action pour tous, vous demandez à GameMaker Studio 2 d'exécuter ce bloc pour chaque instance active dans la pièce actuelle. Par exemple, la création d'une action Destroy Object Instance 
      et en définissant sa portée sur all, toutes les instances de la pièce disparaîtront, quel que soit l'objet à partir duquel elles ont été créées.
     
  
  Objet
  
    Une action peut également avoir un objet comme portée. Cela signifie que toutes les instances de l'objet donné exécuteront cette action au moment où elle sera appelée. Ainsi, si vous avez 100 instances d'ennemis dans la pièce, par exemple, et que
      vous voulez qu'elles pointent toutes vers un point spécifique. Vous appelez l'action Set Point Direction et définissez la portée de l'action sur l'objet "obj_Enemy".
      est appelée, toutes les instances de cet objet changeront de direction.
     
  
  Expression
  
    Le champ de saisie Expression vous permet de saisir l'ID d'une instance spécifique sur laquelle vous souhaitez que l'action fonctionne. Il peut s'agir de la valeur d'identification unique assignée à une instance dans l'éditeur de salle ou de l'ID d'une instance que vous avez stockée dans une variable (où la variable serait la valeur d'entrée).
      dans une variable (où la variable serait la valeur d'entrée) ou même une expression utilisant du code, comme le montre l'image ci-dessous :
    Dans ce cas, une instance appelle le Sprite Set à partir de
      l'instance créée par le code donné pour l'Expression. Notez que dans ce cas, l'instance créée exécutera d'abord son événement de création avant que l'action ne lui soit appliquée.
     
  
   
   
   
  
    
      
        Retour : Index
        Suivant : Scripts de bloc d'action
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

