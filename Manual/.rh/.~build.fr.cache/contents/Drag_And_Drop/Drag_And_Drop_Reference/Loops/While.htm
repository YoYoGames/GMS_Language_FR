 Tandis que L' action While est utilisée pour effectuer des boucles qui ne se terminent que lorsqu'une condition spécifique est renvoyée true. Par exemple, vous pouvez utiliser une variable et la définir sur false puis exécutez la boucle While et demandez-lui de vérifier cette variable, puis à un moment donné de la boucle, vous définissez la variable sur true et la boucle se terminera. Notez que quel que soit l'endroit où vous définissez la condition dans la boucle while, toutes les actions de la boucle seront exécutées jusqu'à la fin avant que le reste du script ou de l'événement se poursuive, la modification de la condition ne sort pas instantanément de la boucle. Lorsque vous ajoutez une action While dans votre code, vous devez fournir la variable à vérifier, le type de vérification à effectuer (inférieur à, supérieur à, égal, etc.) et la valeur par rapport à laquelle vérifier la variable (vous peut également marquer de ne pas avoir la vérification de la boucle While pour voir si la condition n'est pas vraie). Vous ajoutez ensuite les actions à effectuer dans la boucle While, de la même manière que vous ajouteriez une action à un "si", c'est-à-dire en le déposant sur le côté de l'action plutôt qu'en dessous: Toutes les actions ajoutées sur le côté seront incluses dans le While et seront exécutées avant que l'événement ou le script ne se poursuive avec les actions ajoutées sous (comme indiqué dans l'exemple ci-dessous). Notez que vous pouvez mettre fin prématurément à n'importe quelle boucle si vous appelez l'action Break. Syntaxe de l'action: Arguments: Argument Description Variable La variable à utiliser dans le chèque Is Le type d'évaluation à effectuer (inférieur à, supérieur, égal à, supérieur ou égal à et inférieur ou égal à) Value La valeur par rapport à laquelle vérifier la variable Exemple: Le code de bloc d'action ci-dessus crée une variable locale temporaire et la définit sur false. Cette variable est ensuite vérifiée dans l'action de boucle While et tant qu'elle renvoie false, la boucle s'exécute. Dans la boucle, nous obtenons deux variables locales temporaires pour une position x / y aléatoire dans la pièce, puis nous vérifions cette position pour une collision. Si aucune collision n'est trouvée, la variable initiale est définie sur true, mettant fin à la boucle. Une fois la boucle terminée, une nouvelle instance est créée à la position aléatoire que nous avons découverte sans collision.  Retour: Actions de boucle Suivant: Pour © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

