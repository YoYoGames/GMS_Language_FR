 Si forme de collision Cette action est utilisée pour vérifier et voir s'il y a une collision avec une instance d'un objet donné dans une zone formée donnée ou le long d'une ligne. Vous donnez la forme (rectangle, ellipse ou ligne), l'objet à vérifier, puis fournissez les coordonnées des coins supérieur gauche et inférieur droit de la forme utilisée, ou dans le cas d'une ligne, le début et positions finales. Il peut s'agir de positions absolues dans la salle de jeu ou de positions relatives à l'instance exécutant l'action. Vous pouvez voir comment cela fonctionne dans l'image ci-dessous: Comme vous pouvez le voir, les résultats dépendront du masque de collision de l'instance en cours de vérification, ce qui signifie que l'instance de l'objet que vous recherchez doit avoir un sprite assigné au sprite_index, ou un sprite affecté au mask_index. Si ce n'est pas le cas, il ne sera pas détecté par ces fonctions, qu'il dessine ou non un sprite. Il est à noter que toute instance qui tombe complètement dans les limites définies pour l'ellipse ou la forme de rectangle renverra également une collision. L'action évaluera à true si une collision est détectée, ou false sinon, bien que vous puissiez également cocher l' indicateur Non pour vérifier s'il n'y a pas de collision avec la zone formée donnée, et l'action sera alors évaluée uniquement comme true si aucune collision n'est trouvée, sinon il sera évalué comme false. Vous pouvez également définir l' option Exclude Self pour exclure l'instance appelante de la vérification de collision. Ensuite, vous pouvez cocher / décocher l'option Liste de retour. Si vous cochez cette case, l'action créera et remplira une liste structure de données avec toutes les instances en collision avec la forme et définissez la variable Target sur l'ID de liste DS. Lorsqu'elle n'est pas cochée, elle ne définira la variable Target que sur une valeur inférieure à 0 lorsqu'aucune collision n'est détectée, ou la valeur d'ID unique de l' une des instances de la collision (notez que si plusieurs instances sont en collision, vous n'avez aucun moyen de savoir quel ID d'instance sera retourné lorsque vous n'utilisez pas de liste). Si vous avez choisi de renvoyer une liste - et que la variable Target n'est pas définie sur Temp -, vous pouvez également sélectionner l'option Free Target. Lorsqu'il est réglé sur true, la liste contenue dans la variable cible sera détruite et une nouvelle liste créée (et renvoyée à la variable cible) à chaque fois que vous appelez l'action. De cette façon, vous pouvez réutiliser la même variable sans vous soucier des fuites de mémoire, car si vous ne cochez pas l'option Free Target, vous devenez responsable de la destruction de la liste avant de réutiliser la variable dans l'action. Notez que, que cette option soit cochée ou non, si vous avez défini l'action sur Liste de retour, la variable cible contiendra toujours un ID de liste, et en tant que telle, elle devra être libérée lorsque l'instance est détruite ou la salle se termine (vous pouvez utiliser l' événement Clean Up pour cela, par exemple, avec la structure de données gratuite action). Il est à noter que vous pouvez définir l' option Free Target pour utiliser une variable prédéfinie ou une expression et ainsi contrôler le moment où la structure de données de la liste est libérée en définissant la variable ailleurs (ou en ayant des résultats différents pour l'expression) tant qu'elle évalue à true /false. Enfin, vous fournissez la variable cible que vous souhaitez contenir la valeur retournée ou l'ID de liste. Si vous marquez la variable Target pour contenir la valeur retournée comme étant une variable Temp (locale), alors l'action créera cette variable pour ne conserver la valeur de retour que jusqu'à la fin de l'événement, dans ce cas l'option Free Target ne fait rien et vous serez responsable de la destruction de la liste DS si cette option a été cochée. Si aucune variable cible n'est fournie et que l' option Liste de retour est cochée, aucune liste ne sera créée. IMPORTANT! Les collisions ne seront enregistrées que pour les instances qui ont un masque de collision valide, c'est-à-dire: elles ont un sprite assigné au sprite_index, ou un sprite affecté au mask_index. Si les instances de l'objet recherché dans cette action n'ont pas de masque de collision, la collision ne sera pas détectée, quel que soit le dessin de l'instance à ce moment-là. Notez que pour ajouter des actions dans un "if ", ils doivent être déposés sur le côté de l'action, comme indiqué dans l'image ci-dessous: Syntaxe de l'action: Arguments: Argument Description Shape La forme à utiliser Object L'objet pour vérifier les instances de x1 La position x à partir de laquelle commencer y1 La position y à partir de laquelle commencer x2 La position x pour terminer à y2 La position y pour terminer à Free Target Peut être défini sur une variable ou une expression, ou sur true /false pour contrôler la libération de la mémoire de liste lors de la réutilisation d'une variable de liste Target La variable à cibler pour la valeur de retour de l'action Exemple: Le code de bloc d'action ci-dessus vérifie une collision avec toutes les instances de l'objet " obj_Enemy "dans un cercle de 100 pixels autour de la position des instances appelantes. L'action génère une liste de toutes les instances trouvées en collision et stocke l'ID de la liste dans la variable Target. Si l'action est évaluée à true puis la liste est bouclée et chaque instance avec son ID stocké dans la liste a son "hp "variable réduite de 1. La liste DS est alors libérée.  Retour: Actions de collision Suivant: Si le point de collision © Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

