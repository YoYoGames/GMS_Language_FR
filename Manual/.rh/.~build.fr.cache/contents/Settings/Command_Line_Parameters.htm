
  
  Paramètres de la ligne de commande
  Lorsque vous créez des jeux, il est important que vous testiez le fichier exécutable pour vous assurer que la compilation finale est correcte et ne présente pas d'erreurs ou de différences imprévues. Cependant, la création d'un exécutable signifie que, puisque vous n'avez pas accès à la console de débogage ni à la fenêtre du compilateur, il peut être difficile d'identifier et de déboguer les problèmes.
    à la fenêtre du compilateur, il peut être difficile d'identifier et de déboguer tout problème que vous pourriez trouver. Il existe cependant une solution à ce problème, qui consiste à utiliser des paramètres de ligne de commande pour définir certaines propriétés lorsque la version exécutable du jeu est exécutée.
    le jeu est exécuté, ce qui vous permet de créer des fichiers journaux de sortie et de tester d'autres situations spéciales.
  REMARQUE: Cette fonction n'est disponible que sur le module Windows module cible standard .
  Pour que cela fonctionne, vous devez d'abord créer un exécutable Windows de votre jeu et l'installer sur votre machine de test. Une fois cela fait, vous devez créer un raccourci vers le jeu sur le bureau. C'est là que nous ajouterons les paramètres
    à transmettre à *.exe (pour créer un raccourci, faites un clic droit sur  l'exécutable du jeu, puis sélectionnez Send to >
   Bureau (créer un raccourci)).
  Une fois que vous avez créé votre raccourci, vous pouvez utiliser l'un des paramètres suivants dans le chemin cible :
  -noaudio: Cette option désactive tout le son de votre jeu.
  -inawindow: Force le jeu à démarrer dans une fenêtre, même s'il est configuré pour fonctionner en mode plein écran.
  -output <filename>: envoie la sortie console vers le nom de fichier, y compris les messages de débogage que vous avez dans votre base de code.
  -debugoutput <filename>: envoie la sortie console vers le nom de fichier, en excluant les messages de débogage personnalisés, mais en incluant des informations supplémentaires provenant du runner pour le signalement des bogues.
  -software: Force le jeu à utiliser le traitement logiciel des sommets au lieu du matériel pour le rendu des graphiques du jeu. Ceci est particulièrement utile pour les PC qui utilisent un chipset Intel GFX intégré ou qui présentent des problèmes d'affichage sur des machines plus anciennes.
    sur des machines plus anciennes.
  -intel: Cela activera un correctif pour les mauvais pilotes Intel, quel que soit le GPU utilisé. Cette solution pour ces mauvais pilotes ralentira les choses, donnant une baisse de performance notable pour votre jeu, donc si vous n'avez pas besoin de la solution, ne l'utilisez pas.
    donc si vous n'avez pas besoin de ce correctif, ne l'utilisez pas.
  -vanillaGFX: Cette option désactive toute vérification du fabricant du pilote et peut être très utile pour tester votre jeu "tel quel".
  Il est intéressant de noter que le <filename> de -output et -debugoutput peut être le même si on le souhaite, car le fichier est ouvert et fermé à chaque écriture.
  Vous devez maintenant aller à l'endroit où vous avez créé le raccourci vers l'exécutable du jeu, puis faire un clic droit dessus et sélectionner Propriétés.
  Cela ouvrira une fenêtre similaire à celle ci-dessus. Ici, vous pouvez ajouter votre ligne de commande dans le chemin de la cible. Il suffit de faire défiler
    jusqu'à la fin du chemin donné, ajoutez un espace, puis la chaîne de paramètres. Ainsi, par exemple, pour créer une sortie de fichier de débogage, vous auriez quelque chose comme :
  D:\Users\Me\GameMaker\CustomLoadBar-Default-1.0.0.0\CustomLoadBar.exe -debugoutput debug.txt
  Cela va maintenant créer un fichier appelé "debug.txt" au même endroit que l'exécutable (pas l'emplacement du raccourci, mais l'endroit où le jeu est installé) avec les informations de débogage et de compilation de votre jeu fini. Cliquez sur
    sur "OK" et utilisez ensuite le raccourci pour lancer votre jeu afin qu'il utilise ces paramètres et vous aide à déboguer.
  Pour plus d'informations sur la façon de déboguer votre jeu, veuillez consulter la section du manuel consacrée au débogage.
   
  Tests A/B en utilisant la ligne de commande
  
    Le coureur YoYo bénéficie également d'un paramètre de ligne de commande spécial :
    -game <filename>: charge le fichier de jeu donné
    Pourquoi l'utiliser ? Normalement, vous ne l'utiliseriez pas, mais si vous souhaitez avoir plus d'une version de votre jeu en même temps, vous pouvez le faire en utilisant cette méthode, ce qui rend les tests comparatifs A/B beaucoup plus faciles. Avec cette méthode, vous pouvez faire un test ciblé avec quelqu'un
      ou, en tant que concepteur, avoir une meilleure idée des choses en faisant des tests côte à côte.
    Pour le mettre en place, vous devez connaître quelques éléments au préalable. Pour commencer, vous aurez besoin du chemin d'accès au Runner lui-même. Il se trouve dans le dossier Program Data de votre système d'exploitation Windows (il peut être caché par défaut.
      vous devrez donc modifier les propriétés d'affichage pour le voir), avec un format typique comme celui-ci :
    C:\ProgramData\GameMakerStudio2\Cache\runtimes\< runtime_version>\windows\Runner.exe
    Notez que le dossier runtime_version dépendra des runtimes que vous avez actuellement installés. Vous aurez également besoin du chemin d'accès au fichier <yourgame>.win, car c'est vers lui que nous allons diriger le runner.
      Le moyen le plus simple de le trouver est d'aller dans le dossier Temp (généralement situé à l'adresse %localappdata%\Temp\GameMakerStudio\<game_name>\) et de rechercher *.win, ce qui vous montrera tous les fichiers disponibles.
      Cela vous montrera tous les dossiers disponibles et vous pourrez simplement choisir celui dont vous avez besoin pour obtenir le chemin complet.
    Maintenant, nous pourrions créer un raccourci vers le programme d'exécution comme nous l'avons fait pour l'exécutable, puis modifier les paramètres si nécessaire, mais cela signifie qu'il faut l'ouvrir et le modifier entre les tests, ce qui va à l'encontre de l'objectif d'utiliser cette fonctionnalité pour les tests côte à côte.
      côte à côte. Au lieu de cela, nous allons créer un couple de petits fichiers "batch" pour gérer cela.
    Pour ce faire, créez d'abord un nouveau document texte sur votre bureau et ouvrez-le dans le Bloc-notes (ou tout autre éditeur de texte). Ajoutez ce qui suit :
    DÉMARRER C:\ProgramData\GameMakerStudio2\Cache\runtimes\< runtime_version>\windows\Runner.exe -game <PATH TEMPAL>\<GAMENAME>.win
    Vous devez définir le chemin temporaire pour qu'il pointe vers le fichier *.win de votre jeu, puis l'enregistrer sous le nom de "GM_Test_1.bat" sur votre bureau (sachez que Notepad enregistrera automatiquement le fichier *.txt à moins que vous ne choisissiez " tous les fichiers " dans les options de la boîte de dialogue d'enregistrement). Voici un exemple de ce à quoi devrait ressembler votre commande finale :
    START C:\ProgramData\GameMakerStudio2\Cache\runtimes\runtime-9.9.1.199\windows\Runner.exe -game D:\Users\Mark\AppData\Local\Temp\GameMakerStudio2\AlphaDog_Reboot\AlphaDog_Reboot.win
    Maintenant, créez un autre fichier texte et ajoutez la même ligne, mais cette fois-ci, indiquez le chemin d'accès à la deuxième version du jeu avec laquelle vous souhaitez effectuer des tests côte à côte, et enregistrez ce fichier sous le nom de "GM_Test_2.bat".
      Vous pouvez double-cliquer sur  l'un ou l'autre pour faire apparaître les différentes versions de votre jeu, et
      le fait de les avoir sous forme de fichiers batch signifie que vous pouvez facilement les ouvrir à nouveau pour les modifier et changer le jeu testé.
    
    
  
   
   
   
  
    
      
        Retour : Paramètres de jeu
        Suivant : Le directeur de la salle
      
    
    Copyright YoYo Games Ltd. 2021 Tous droits réservés
  
  
  

